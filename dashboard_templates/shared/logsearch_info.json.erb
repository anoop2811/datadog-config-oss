{
  "description": "<%= environment %>: Logsearch Information",
  "title": "<%= environment %>: Logsearch Information",
  "graphs": [
    {
      "definition": {
        "viz": "timeseries",
        "requests": [
          {
            "q": "avg:aws.ec2.network_in{deployment:<%= elk_deployment %>} by {index,job} * 0.1333",
            "conditional_formats": [

            ],
            "type": "line"
          }
        ]
      },
      "title": "network in -all"
    },
    {
      "definition": {
        "viz": "timeseries",
        "requests": [
          {
            "q": "avg:aws.ec2.network_out{deployment:<%= elk_deployment %>} by {index,job} *0.1333",
            "conditional_formats": [

            ],
            "type": "line"
          }
        ]
      },
      "title": "network out -all job"
    },
    {
      "definition": {
        "viz": "timeseries",
        "requests": [
          {
            "q": "avg:aws.ec2.network_in{deployment:<%= elk_deployment %>,job:ingestor_z1} by {index} *0.1333",
            "conditional_formats": [

            ],
            "type": "line"
          },
          {
            "q": "avg:aws.ec2.network_in{deployment:<%= elk_deployment %>,job:ingestor_z2} by {index} *0.1333",
            "type": "line"
          },
          {
            "q": "avg:aws.ec2.network_in{deployment:<%= elk_deployment %>,job:ingestor_z3} by {index} *0.1333",
            "type": "line"
          },
          {
            "q": "avg:aws.ec2.network_in{deployment:<%= elk_deployment %>,name:elb_log_to_logstash_z2/0} by {index} *0.1333",
            "type": "line"
          }
        ]
      },
      "title": "net_in on ingestors"
    },
    {
      "definition": {
        "viz": "timeseries",
        "requests": [
          {
            "q": "avg:aws.ec2.network_in{deployment:<%= elk_deployment %>,job:queue_z1} by {index} *0.1333",
            "conditional_formats": [

            ],
            "type": "line"
          },
          {
            "q": "avg:aws.ec2.network_in{deployment:<%= elk_deployment %>,job:queue_z2} by {index} *0.1333",
            "type": "line"
          },
          {
            "q": "avg:aws.ec2.network_in{deployment:<%= elk_deployment %>,job:queue_z3} by {index} *0.1333",
            "type": "line"
          }
        ]
      },
      "title": "net_in  of queues"
    },
    {
      "definition": {
        "viz": "timeseries",
        "requests": [
          {
            "q": "avg:aws.ec2.network_out{deployment:<%= elk_deployment %>,job:queue_z1} by {index} *0.1333",
            "conditional_formats": [

            ],
            "type": "line"
          },
          {
            "q": "avg:aws.ec2.network_out{deployment:<%= elk_deployment %>,job:queue_z2} by {index} *0.1333",
            "type": "line"
          },
          {
            "q": "avg:aws.ec2.network_out{deployment:<%= elk_deployment %>,job:queue_z3} by {index} *0.1333",
            "type": "line"
          }
        ]
      },
      "title": "net out - queues"
    },
    {
      "definition": {
        "viz": "timeseries",
        "requests": [
          {
            "q": "sum:aws.ec2.network_out{deployment:<%= elk_deployment %>,job:log_parser_z1} *0.1333",
            "conditional_formats": [

            ],
            "type": "line"
          },
          {
            "q": "sum:aws.ec2.network_out{deployment:<%= elk_deployment %>,job:log_parser_z2} *0.1333",
            "type": "line"
          },
          {
            "q": "sum:aws.ec2.network_out{deployment:<%= elk_deployment %>,job:log_parser_z3} *0.1333",
            "type": "line"
          }
        ]
      },
      "title": "net out - from log parser to es"
    },
    {
      "definition": {
        "viz": "timeseries",
        "requests": [
          {
            "q": "avg:bosh.healthmonitor.system.swap.percent{deployment:<%= elk_deployment %>,job:queue_z1}",
            "type": "line"
          },
          {
            "q": "avg:bosh.healthmonitor.system.swap.percent{deployment:<%= elk_deployment %>,job:queue_z2}",
            "type": "line"
          },
          {
            "q": "avg:bosh.healthmonitor.system.swap.percent{deployment:<%= elk_deployment %>,job:queue_z3}",
            "type": "line"
          },
          {
            "q": "avg:bosh.healthmonitor.system.mem.percent{deployment:<%= elk_deployment %>,job:queue_z1}",
            "type": "line"
          },
          {
            "q": "avg:bosh.healthmonitor.system.mem.percent{deployment:<%= elk_deployment %>,job:queue_z2}",
            "type": "line"
          },
          {
            "q": "avg:bosh.healthmonitor.system.mem.percent{deployment:<%= elk_deployment %>,job:queue_z3}",
            "type": "line"
          }
        ]
      },
      "title": "mem & swap on queue"
    },
    {
      "definition": {
        "viz": "timeseries",
        "requests": [
          {
            "q": "avg:bosh.healthmonitor.system.cpu.user{!job:log_parser_z1,!job:log_parser_z2,!job:log_parser_z3,deployment:<%= elk_deployment %>} by {job,index}",
            "type": "line"
          }
        ]
      },
      "title": "cpu (excluding parser)"
    },
    {
      "definition": {
        "viz": "timeseries",
        "requests": [
          {
            "q": "avg:bosh.healthmonitor.system.cpu.user{deployment:<%= elk_deployment %>,job:log_parser_z2} by {index}",
            "type": "line"
          },
          {
            "q": "avg:bosh.healthmonitor.system.cpu.user{deployment:<%= elk_deployment %>,job:log_parser_z1} by {index}",
            "type": "line"
          },
          {
            "q": "avg:bosh.healthmonitor.system.cpu.user{deployment:<%= elk_deployment %>,job:log_parser_z3} by {index}",
            "type": "line"
          }
        ]
      },
      "title": "cpu on log_parsers"
    },
    {
      "definition": {
        "viz": "timeseries",
        "requests": [
          {
            "q": "sum:aws.elb.request_count{host:cf-elk-ingestor} by {availability-zone,name}.as_count()",
            "type": "line"
          }
        ]
      },
      "title": "ingestor elb connections"
    },
    {
      "definition": {
        "viz": "timeseries",
        "requests": [
          {
            "q": "avg:aws.ebs.volume_read_ops{deployment:<%= elk_deployment %>} by {device,job,index} / dt(avg:aws.ebs.volume_read_ops{deployment:<%= elk_deployment %>} by {device,job,index})",
            "conditional_formats": [

            ],
            "type": "line"
          },
          {
            "q": "avg:aws.ebs.volume_write_ops{deployment:<%= elk_deployment %>} by {device,job,index} / dt(avg:aws.ebs.volume_write_ops{deployment:<%= elk_deployment %>} by {device,job,index})",
            "conditional_formats": [

            ],
            "type": "line"
          }
        ]
      },
      "title": "iops by job"
    },
    {
      "definition": {
        "viz": "timeseries",
        "requests": [
          {
            "q": "1000 * avg:aws.ebs.volume_total_read_time{deployment:<%= elk_deployment %>} by {device,job,index} / avg:aws.ebs.volume_read_ops{deployment:<%= elk_deployment %>} by {device,job,index}",
            "conditional_formats": [

            ],
            "type": "line"
          },
          {
            "q": "1000 * avg:aws.ebs.volume_total_write_time{deployment:<%= elk_deployment %>} by {device,job,index} / avg:aws.ebs.volume_write_ops{deployment:<%= elk_deployment %>} by {device,job,index}",
            "conditional_formats": [

            ],
            "type": "line"
          }
        ]
      },
      "title": "io latency (ms)"
    },
    {
      "definition": {
        "viz": "timeseries",
        "requests": [
          {
            "q": "avg:bosh.healthmonitor.system.mem.percent{deployment:<%= elk_deployment %>} by {job,index}",
            "type": "line"
          }
        ]
      },
      "title": "mem %"
    },
    {
      "definition": {
        "viz": "timeseries",
        "requests": [
          {
            "q": "avg:bosh.healthmonitor.system.disk.persistent.percent{deployment:<%= elk_deployment %>} by {job,index}",
            "conditional_formats": [

            ],
            "type": "line"
          }
        ],
        "markers": [
          {
            "type": "error dashed",
            "value": "y = 90",
            "val": "90"
          }
        ]
      },
      "title": "disk %"
    },
    {
      "definition": {
        "viz": "timeseries",
        "requests": [
          {
            "q": "ewma_5(avg:elasticsearch.docs.incomingRatePerSecond{deployment:<%= elk_deployment %>})",
            "conditional_formats": [

            ],
            "type": "line"
          }
        ],
        "yaxis": {
          "max": 30000,
          "min": 1
        }
      },
      "title": "es in coming log/s"
    },
    {
      "title": "<%= environment %>: logstash.parse_failures.total per second",
      "definition": {
        "requests": [
          {
            "q": "rate(logstash.parse_failures.total{environment: <%= environment %> } by {ip})"
          }
        ],
        "events": []
      }
    },
    {
      "title": "<%= environment %>: total syslog message by ip per second",
      "definition": {
        "requests": [
          {
            "q": "rate(logstash.messages.total{environment: <%= environment %>,msg_type:syslog } by {ip} )"
          }
        ],
        "events": []
      }
    },
    {
      "title": "<%= environment %>: total relp message by ip per second",
      "definition": {
        "requests": [
          {
            "q": "rate(logstash.messages.total{environment: <%= environment %>,msg_type:relp } by {ip} )",
            "stacked": false
          }
        ],
        "events": []
      }
    },
    {
      "title": "<%= environment %>: Total Elasticsearch Indexed Docs",
      "definition": {
        "requests": [
          {
            "q": "elasticsearch.docs.count{environment: <%= environment %> } by {node}",
            "stacked": false
          }
        ],
        "events": []
      }
    },
    {
      "title": "<%= environment %>: Elasticsearch average Indexing Time (ms)",
      "definition": {
        "requests": [
          {
            "q": "elasticsearch.index_time_in_millis{environment: <%= environment %> } by {node}  / elasticsearch.index_total{environment: <%= environment %> } by {node} ",
            "stacked": false
          }
        ],
        "events": []
      }
    },
    {
      "title": "<%= environment %>: Elasticsearch average Fetch Time (ms)",
      "definition": {
        "requests": [
          {
            "q": "elasticsearch.fetch_time_in_millis{environment: <%= environment %> } by {node}  / elasticsearch.fetch_total{environment: <%= environment %> } by {node} ",
            "stacked": false
          }
        ],
        "events": []
      }
    },
    {
      "title": "<%= environment %>: Elasticsearch average Query Time (ms)",
      "definition": {
        "requests": [
          {
            "q": "elasticsearch.query_time_in_millis{environment: <%= environment %> } by {node}  / elasticsearch.query_total{environment: <%= environment %> } by {node} ",
            "stacked": false
          }
        ],
        "events": []
      }
    },
    {
      "title": "<%= environment %>: Elasticsearch Heap Used (%)",
      "definition": {
        "requests": [
          {
            "q": "(elasticsearch.heap_used_in_bytes{environment: <%= environment %> } by {node}  / elasticsearch.heap_committed_in_bytes{environment: <%= environment %> } by {node}) * 100",
            "stacked": false
          }
        ],
        "events": []
      }
    },
    {
      "title": "<%= environment %>: Elasticsearch user CPU usage (%)",
      "definition": {
        "requests": [
            {
              "q": "bosh.healthmonitor.system.cpu.user{job:elasticsearch} by {deployment}",
              "stacked": false
            }
        ],
        "events": []
      }
    },
    {
      "title": "<%= environment %>: Elasticsearch mem usage (%)",
      "definition": {
        "requests": [
            {
              "q": "bosh.healthmonitor.system.mem.percent{job:elasticsearch} by {deployment}",
              "stacked": false
            }
        ],
        "events": []
      }
    },
    {
      "title": "<%= environment %>: Elasticsearch persistent disk usage (%)",
      "definition": {
        "requests": [
            {
              "q": "bosh.healthmonitor.system.disk.persistent.percent{job:elasticsearch} by {deployment}",
              "stacked": false
            }
        ],
        "events": []
      }
    }
  ]
}

