{
    "description": "created by cfaccounts+datadog-prod@pivotallabs.com",
    "graphs": [
        {
            "definition": {
                "events": [],
                "requests": [
                    {
                        "q": "datadog.nozzle.DopplerServer.messageRouter.numberOfDumpSinks{ deployment: <%= metron_agent_deployment %> } by {ip}"
                    }
                ]
            },
            "title": "<%= environment %>: Number of Dump Sinks (Doppler)"
        },
        {
            "definition": {
                "events": [],
                "requests": [
                    {
                        "q": "datadog.nozzle.DopplerServer.messageRouter.numberOfSyslogSinks{ deployment: <%= metron_agent_deployment %> } by {ip}"
                    }
                ]
            },
            "title": "<%= environment %>: Number of Syslog Sinks (Doppler)"
        },
        {
            "definition": {
                "events": [],
                "requests": [
                    {
                        "q": "datadog.nozzle.DopplerServer.messageRouter.numberOfWebsocketSinks{deployment: <%= metron_agent_deployment %> } by {ip}"
                    }
                ]
            },
            "title": "<%= environment %>: Number of WebSocket Sinks (Doppler)"
        },
        {
            "definition": {
                "viz": "timeseries",
                "events": [],
                "requests": [
                    {
                        "q": "rate(datadog.nozzle.DopplerServer.dropsondeListener.receivedMessageCount{ deployment: <%= metron_agent_deployment %> } by {ip})"
                    }
                ]
            },
            "title": "<%= environment %>: Received Log Messages Per Second (Doppler)"
        },
        {
            "definition": {
                "viz": "timeseries",
                "events": [],
                "requests": [
                    {
                        "q": "datadog.nozzle.DopplerServer.dropsondeListener.receivedMessageCount{ deployment: <%= metron_agent_deployment %> } by {ip}"
                    }
                ]
            },
            "title": "<%= environment %>: Received Log Message Count (Doppler)"
        },
        {
            "definition": {
                "events": [],
                "requests": [
                    {
                        "q": "datadog.nozzle.DopplerServer.numGoRoutines{deployment: <%= metron_agent_deployment %> } by {ip}"
                    }
                ]
            },
            "title": "<%= environment %>: GoRoutines (Doppler)"
        },
        {
            "definition": {
                "events": [],
                "requests": [
                    {
                        "q": "datadog.nozzle.DopplerServer.memoryStats.lastGCPauseTimeNS{deployment: <%= metron_agent_deployment %>} by {ip} / 1000000 "
                    }
                ]
            },
            "title": "<%= environment %>: GCPauseTime (Doppler)"
        },
        {
            "definition": {
                "events": [],
                "requests": [
                    {
                        "q": "bosh.healthmonitor.system.mem.percent{job:doppler_z1} by {index}",
                        "stacked": false
                    },
                    {
                        "q": "bosh.healthmonitor.system.mem.percent{job:doppler_z2} by {index}",
                        "stacked": false
                    }
                ]
            },
            "title": "<%= environment %>: Memory Used Percentage (Doppler)"
        },
        {
            "definition": {
                "events": [],
                "requests": [
                    {
                        "q": "datadog.nozzle.LoggregatorTrafficController.numGoRoutines{deployment: <%= metron_agent_deployment %> } by {ip}"
                    }
                ]
            },
            "title": "<%= environment %>: GoRoutines (LoggregatorTrafficcontroller)"
        },
        {
            "definition": {
                "events": [],
                "requests": [
                    {
                        "q": "datadog.nozzle.LoggregatorTrafficController.memoryStats.lastGCPauseTimeNS{deployment: <%= metron_agent_deployment %>} by {ip} / 1000000"
                    }
                ]
            },
            "title": "<%= environment %>: GCPauseTime (LoggregatorTrafficcontroller)"
        },
        {
            "definition": {
                "requests": [
                    {
                        "q": "ewma_10(rate(sum:datadog.nozzle.MetronAgent.DopplerForwarder.sentMessages{deployment: <%= metron_agent_deployment %>})) + ewma_10(rate(sum:datadog.nozzle.MetronAgent.DopplerForwarder.sentMessages{deployment: <%= metron_agent_diego_deployment %>})) - (ewma_10(rate(sum:datadog.nozzle.DopplerServer.dropsondeListener.receivedMessageCount{deployment: <%= metron_agent_deployment %>} )) + ewma_10(rate(sum:datadog.nozzle.DopplerServer.tlsListener.receivedMessageCount{deployment: <%= metron_agent_deployment %>} )) + ewma_10(per_second(sum:datadog.nozzle.DopplerServer.tcpListener.receivedMessageCount{deployment: <%= metron_agent_deployment %>})))",
                        "type": "line"
                    }
                ],
                "events": [],
                "viz": "timeseries"
            },
            "title": "<%= environment %>: Sum (moving-avg) lost msg/s Metron-Sent → Doppler-Received"
        },
        {
            "definition": {
                "viz": "timeseries",
                "requests": [
                    {
                        "q": "100 * ( ewma_10(rate(sum:datadog.nozzle.MetronAgent.DopplerForwarder.sentMessages{deployment: <%= metron_agent_deployment %>})) + ewma_10(rate(sum:datadog.nozzle.MetronAgent.DopplerForwarder.sentMessages{deployment: <%= metron_agent_diego_deployment %>})) - (ewma_10(rate(sum:datadog.nozzle.DopplerServer.dropsondeListener.receivedMessageCount{deployment: <%= metron_agent_deployment %>})) + ewma_10(rate(sum:datadog.nozzle.DopplerServer.tlsListener.receivedMessageCount{deployment: <%= metron_agent_deployment %>} )) + ewma_10(rate(sum:datadog.nozzle.DopplerServer.tcpListener.receivedMessageCount{deployment: <%= metron_agent_deployment %>} ))) ) / ( ewma_10(rate(sum:datadog.nozzle.MetronAgent.DopplerForwarder.sentMessages{deployment: <%= metron_agent_deployment %>})) + ewma_10(rate(sum:datadog.nozzle.MetronAgent.DopplerForwarder.sentMessages{deployment: <%= metron_agent_diego_deployment %>})) )"
                    }
                ],
                "events": []
            },
            "title": "<%= environment %>: % (moving-avg) lost msg/s Metron-Sent → Doppler-Received"
        },
        {
            "definition": {
                "requests": [
                    {
                        "q": "ewma_10(per_second(sum:datadog.nozzle.MetronAgent.dropsondeMarshaller.counterEventMarshalled{deployment:<%= metron_agent_deployment %>})) + ewma_10(per_second(sum:datadog.nozzle.MetronAgent.dropsondeMarshaller.counterEventMarshalled{deployment:<%= metron_agent_diego_deployment %>})) - ewma_10(per_second(sum:datadog.nozzle.DopplerServer.dropsondeUnmarshaller.counterEventReceived{deployment:<%= metron_agent_deployment %>}))",
                        "type": "line"
                    }
                ],
                "viz": "timeseries"
            },
            "events":[],
            "title": "<%= environment %>: Lost CounterEvent/s Metron-Sent → Doppler-Received"
        },
        {
            "definition": {
                "requests": [
                    {
                        "q": "ewma_10(per_second(sum:datadog.nozzle.MetronAgent.dropsondeMarshaller.valueMetricMarshalled{deployment:<%= metron_agent_deployment %>})) + ewma_10(per_second(sum:datadog.nozzle.MetronAgent.dropsondeMarshaller.valueMetricMarshalled{deployment:<%= diego_metron_agent_deployment %>})) - ewma_10(per_second(sum:datadog.nozzle.DopplerServer.dropsondeUnmarshaller.valueMetricReceived{deployment:<%= metron_agent_deployment %>}))",
                        "type": "line"
                    }
                ],
                "viz": "timeseries"
            },
            "events": [],
            "title": "<%= environment %>: Lost ValueMetric/s Metron-Sent → Doppler-Received"
        },
        {
            "definition":{
                "requests": [
                    {
                        "q": "ewma_10(per_second(sum:datadog.nozzle.MetronAgent.dropsondeMarshaller.containerMetricMarshalled{deployment:<%= metron_agent_diego_deployment %>})) - ewma_10(per_second(sum:datadog.nozzle.DopplerServer.dropsondeUnmarshaller.containerMetricReceived{deployment:<%= metron_agent_deployment %>}))",
                        "type": "line"
                    }
                ],
                "viz": "timeseries"
            },
            "events":[],
            "title": "<%= environment %>: Lost ContainerMetric/s Metron-Sent → Doppler-Received"
        },
        {
            "definition":{
                "viz": "timeseries",
                "requests": [
                    {
                        "q": "ewma_10(per_second(sum:datadog.nozzle.MetronAgent.MessageAggregator.httpStartStopEmitted{deployment:<%= metron_agent_deployment %>})) + ewma_10(per_second(sum:datadog.nozzle.MetronAgent.MessageAggregator.httpStartStopEmitted{deployment:<%= metron_agent_diego_deployment %>})) - ewma_10(per_second(sum:datadog.nozzle.DopplerServer.dropsondeUnmarshaller.httpStartStopReceived{deployment:<%= metron_agent_deployment %>}))",
                        "type": "line"
                    }
                ]
            },
            "events":[],
            "title":"<%= environment %>: Lost HttpStartStop/s Metron-Sent → Doppler-Received"
        },
        {
            "definition":{
                "viz": "timeseries",
                "requests": [
                    {
                        "q": "ewma_10(per_second(sum:datadog.nozzle.MetronAgent.MessageAggregator.httpStartStopEmitted{deployment:<%= metron_agent_deployment %>})) + ewma_10(per_second(sum:datadog.nozzle.MetronAgent.MessageAggregator.httpStartStopEmitted{deployment:<%= metron_agent_diego_deployment %>})) - ewma_10(per_second(sum:datadog.nozzle.DopplerServer.dropsondeUnmarshaller.httpStartStopReceived{deployment:<%= metron_agent_deployment %>}))",
                        "type": "line"
                    }
                ]
            },
            "events":[],
            "title":"<%= environment %>: Lost HttpStartStop/s Metron-Sent → Doppler-Received"
        },
        {
            "definition":{
                "requests": [
                    {
                        "q": "ewma_10(per_second(sum:datadog.nozzle.MetronAgent.dropsondeMarshaller.logMessageMarshalled{deployment:<%= metron_agent_deployment %>})) + ewma_10(per_second(sum:datadog.nozzle.MetronAgent.dropsondeMarshaller.logMessageMarshalled{deployment:<%= metron_agent_diego_deployment %>})) - ewma_10(per_second(sum:datadog.nozzle.DopplerServer.dropsondeUnmarshaller.logMessageTotal{deployment:<%= metron_agent_deployment %>}))",
                        "type": "line"
                    }
                ],
                "viz": "timeseries"
            },
            "events":[],
            "title":"<%= environment %>: Lost LogMessages/s Metron-Sent → Doppler-Received"
        },
        {
            "definition": {
                "viz": "timeseries",
                "requests": [
                    {
                        "q": "ewma_10(per_second(sum:datadog.nozzle.MetronAgent.MessageAggregator.httpUnmatchedStartReceived{deployment:<%= metron_agent_deployment %>})), ewma_10(per_second(sum:datadog.nozzle.MetronAgent.MessageAggregator.httpUnmatchedStopReceived{deployment:<%= metron_agent_deployment %>}))",
                        "type": "line"
                    }
                ]
            },
            "events":[],
            "title":"<%= environment %>: HttpUnmatched Start and Stop Metron-Received"
        },
        {
            "definition": {
                "viz": "timeseries",
                "requests": [
                    {
                        "q": "sum:datadog.nozzle.DopplerServer.LinuxFileDescriptor{deployment:<%= metron_agent_deployment %>}",
                        "type": "line",
                        "aggregator": "avg"
                    },
                    {
                        "q": "sum:datadog.nozzle.LoggregatorTrafficController.LinuxFileDescriptor{deployment:<%= metron_agent_deployment %>}",
                        "type": "line"
                    }
                  ]
            },
            "title":"<%= environment %>: Loggregator Open File Descriptors"

        },
        {
            "definition": {
                "viz": "timeseries",
                "requests": [
                    {
                        "q": "avg:datadog.nozzle.DopplerServer.LinuxFileDescriptor{deployment:<%= metron_agent_deployment %>} by {job,ip}",
                        "type": "line",
                        "conditional_formats": [],
                        "aggregator": "avg"
                    },
                    {
                        "q": "avg:datadog.nozzle.LoggregatorTrafficController.LinuxFileDescriptor{deployment:<%= metron_agent_deployment %>} by {job,ip}",
                        "type": "line"
                    }
                ]
            },
            "title":"<%= environment %>: Loggregator Open File Descriptors Per VM"
        }
    ],
    "title": "<%= environment %> Loggregator Information"
}
