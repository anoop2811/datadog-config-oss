{
    "description": "created by cfaccounts+datadog-prod@pivotallabs.com",
    "graphs": [
        {
            "definition": {
                "events": [],
                "requests": [
                    {
                        "q": "cf.collector.MetronAgent.forwarder.dea_logging_agent.numGoRoutines{deployment: <%= deployment %> } by {ip}"
                    }
                ]
            },
            "title": "<%= environment %>: GoRoutines (DEAAgent)"
        },
        {
            "definition": {
                "events": [],
                "requests": [
                    {
                        "q": "cf.collector.MetronAgent.forwarder.dea_logging_agent.memoryStats.lastGCPauseTimeNS{deployment: <%= deployment %>} by {ip} / 1000000"
                    }
                ]
            },
            "title": "<%= environment %>: GCPauseTime (DEAAgent)"
        },
        {
            "definition": {
                "events": [],
                "requests": [
                    {
                        "q": "cf.collector.MetronAgent.forwarder.DopplerServer.messageRouter.numberOfDumpSinks{ deployment: <%= deployment %> } by {ip}"
                    }
                ]
            },
            "title": "<%= environment %>: Number of Dump Sinks (Server)"
        },
        {
            "definition": {
                "events": [],
                "requests": [
                    {
                        "q": "cf.collector.MetronAgent.forwarder.DopplerServer.messageRouter.numberOfSyslogSinks{ deployment: <%= deployment %> } by {ip}"
                    }
                ]
            },
            "title": "<%= environment %>: Number of Syslog Sinks (Server)"
        },
        {
            "definition": {
                "events": [],
                "requests": [
                    {
                        "q": "cf.collector.MetronAgent.forwarder.DopplerServer.messageRouter.numberOfWebsocketSinks{deployment: <%= deployment %> } by {ip}"
                    }
                ]
            },
            "title": "<%= environment %>: Number of WebSocket Sinks (Server)"
        },
        {
            "definition": {
                "viz": "timeseries",
                "events": [],
                "requests": [
                    {
                        "q": "rate(cf.collector.MetronAgent.forwarder.DopplerServer.dropsondeListener.receivedMessageCount{ deployment: <%= deployment %> } by {ip})"
                    }
                ]
            },
            "title": "<%= environment %>: Received Log Messages Per Second (Server)"
        },
        {
            "definition": {
                "viz": "timeseries",
                "events": [],
                "requests": [
                    {
                        "q": "cf.collector.MetronAgent.forwarder.DopplerServer.dropsondeListener.receivedMessageCount{ deployment: <%= deployment %> } by {ip}"
                    }
                ]
            },
            "title": "<%= environment %>: Received Log Message Count (Server)"
        },
        {
            "definition": {
                "events": [],
                "requests": [
                    {
                        "q": "cf.collector.MetronAgent.forwarder.DopplerServer.numGoRoutines{deployment: <%= deployment %> } by {ip}"
                    }
                ]
            },
            "title": "<%= environment %>: GoRoutines (Server)"
        },
        {
            "definition": {
                "events": [],
                "requests": [
                    {
                        "q": "cf.collector.MetronAgent.forwarder.DopplerServer.memoryStats.lastGCPauseTimeNS{deployment: <%= deployment %>} by {ip} / 1000000 "
                    }
                ]
            },
            "title": "<%= environment %>: GCPauseTime (Server)"
        },
        {
            "definition": {
                "events": [],
                "requests": [
                    {
                        "q": "bosh.healthmonitor.system.mem.percent{job:loggregator_z1} by {index}",
                        "stacked": false
                    },
                    {
                        "q": "bosh.healthmonitor.system.mem.percent{job:loggregator_z2} by {index}",
                        "stacked": false
                    }
                ]
            },
            "title": "<%= environment %>: Memory Used Percentage (Server)"
        },
        {
            "definition": {
                "events": [],
                "requests": [
                    {
                        "q": "cf.collector.MetronAgent.forwarder.LoggregatorTrafficController.numGoRoutines{deployment: <%= deployment %> } by {ip}"
                    }
                ]
            },
            "title": "<%= environment %>: GoRoutines (LoggregatorTrafficcontroller)"
        },
        {
            "definition": {
                "events": [],
                "requests": [
                    {
                        "q": "cf.collector.MetronAgent.forwarder.LoggregatorTrafficController.memoryStats.lastGCPauseTimeNS{deployment: <%= deployment %>} by {ip} / 1000000"
                    }
                ]
            },
            "title": "<%= environment %>: GCPauseTime (LoggregatorTrafficcontroller)"
        },
        {
            "definition": {
                "requests": [
                    {
                        "q": "ewma_10(rate(sum:cf.collector.MetronAgent.dropsondeAgentListener.receivedMessageCount{ deployment: <%= deployment %> })) - ewma_10(rate(sum:cf.collector.MetronAgent.forwarder.DopplerServer.dropsondeListener.receivedMessageCount{ deployment: <%= deployment %> }))"
                    }
                ],
                "events": [],
                "viz": "timeseries"
            },
            "title": "<%= environment %>: Sum (moving-avg) lost msg/s Metron → Doppler"
        },
        {
            "definition": {
                "viz": "timeseries",
                "requests": [
                    {
                        "q": "100 * (ewma_10(rate(sum:cf.collector.MetronAgent.dropsondeAgentListener.receivedMessageCount{ deployment: <%= deployment %> })) - ewma_10(rate(sum:cf.collector.MetronAgent.forwarder.DopplerServer.dropsondeListener.receivedMessageCount{ deployment: <%= deployment %> }))) / ewma_10((rate(sum:cf.collector.MetronAgent.dropsondeAgentListener.receivedMessageCount{ deployment: <%= deployment %> })))"
                    }
                ],
                "events": []
            },
            "title": "<%= environment %>: % (moving-avg) lost msg/s Metron → Doppler"
        }
    ],
    "title": "<%= environment %> Loggregator Information"
}
