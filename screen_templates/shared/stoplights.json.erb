{
  "board_title": "<%= deployment %> stoplights",
  "board_bgtype": "board_graph",
  "canonical_units": {
    "cents": [
      {
        "plural": "cents",
        "scale_factor": 1,
        "id": 43,
        "short_name": "Â¢",
        "name": "cent"
      }
    ],
    "messages": [
      {
        "plural": "messages",
        "scale_factor": 1,
        "id": 29,
        "short_name": "msg",
        "name": "message"
      }
    ],
    "connections": [
      {
        "plural": "connections",
        "scale_factor": 1,
        "id": 18,
        "short_name": "conn",
        "name": "connection"
      }
    ],
    "locks": [
      {
        "plural": "locks",
        "scale_factor": 1,
        "id": 35,
        "short_name": null,
        "name": "lock"
      }
    ],
    "buffers": [
      {
        "plural": "buffers",
        "scale_factor": 1,
        "id": 22,
        "short_name": "buff",
        "name": "buffer"
      }
    ],
    "tables": [
      {
        "plural": "tables",
        "scale_factor": 1,
        "id": 33,
        "short_name": null,
        "name": "table"
      }
    ],
    "errors": [
      {
        "plural": "errors",
        "scale_factor": 1,
        "id": 44,
        "short_name": "err",
        "name": "error"
      }
    ],
    "segments": [
      {
        "plural": "segments",
        "scale_factor": 1,
        "id": 27,
        "short_name": "seg",
        "name": "segment"
      }
    ],
    "misses": [
      {
        "plural": "misses",
        "scale_factor": 1,
        "id": 40,
        "short_name": null,
        "name": "miss"
      }
    ],
    "payloads": [
      {
        "plural": "payloads",
        "scale_factor": 1,
        "id": 30,
        "short_name": null,
        "name": "payload"
      }
    ],
    "percentage": [
      {
        "plural": "percent",
        "scale_factor": 1,
        "id": 17,
        "short_name": "%",
        "name": "percent"
      },
      {
        "plural": "fractions",
        "scale_factor": 100,
        "id": 16,
        "short_name": null,
        "name": "fraction"
      }
    ],
    "files": [
      {
        "plural": "files",
        "scale_factor": 1,
        "id": 21,
        "short_name": null,
        "name": "file"
      }
    ],
    "blocks": [
      {
        "plural": "blocks",
        "scale_factor": 1,
        "id": 25,
        "short_name": "blk",
        "name": "block"
      }
    ],
    "responses": [
      {
        "plural": "responses",
        "scale_factor": 1,
        "id": 28,
        "short_name": "resp",
        "name": "response"
      }
    ],
    "transactions": [
      {
        "plural": "transactions",
        "scale_factor": 1,
        "id": 36,
        "short_name": "tx",
        "name": "transaction"
      }
    ],
    "queries": [
      {
        "plural": "queries",
        "scale_factor": 1,
        "id": 37,
        "short_name": null,
        "name": "query"
      }
    ],
    "hits": [
      {
        "plural": "hits",
        "scale_factor": 1,
        "id": 39,
        "short_name": "hit",
        "name": "hit"
      }
    ],
    "rows": [
      {
        "plural": "rows",
        "scale_factor": 1,
        "id": 38,
        "short_name": "row",
        "name": "row"
      }
    ],
    "threads": [
      {
        "plural": "threads",
        "scale_factor": 1,
        "id": 32,
        "short_name": null,
        "name": "thread"
      }
    ],
    "processes": [
      {
        "plural": "processes",
        "scale_factor": 1,
        "id": 20,
        "short_name": "proc",
        "name": "process"
      }
    ],
    "sectors": [
      {
        "plural": "sectors",
        "scale_factor": 1,
        "id": 24,
        "short_name": null,
        "name": "sector"
      }
    ],
    "dollars": [
      {
        "plural": "dollars",
        "scale_factor": 1,
        "id": 42,
        "short_name": "$",
        "name": "dollar"
      }
    ],
    "evictions": [
      {
        "plural": "evictions",
        "scale_factor": 1,
        "id": 41,
        "short_name": null,
        "name": "eviction"
      }
    ],
    "bytes": [
      {
        "plural": "bits",
        "scale_factor": 0.125,
        "id": 1,
        "short_name": "b",
        "name": "bit"
      },
      {
        "plural": "bytes",
        "scale_factor": 1,
        "id": 2,
        "short_name": "B",
        "name": "byte"
      },
      {
        "plural": "kibibytes",
        "scale_factor": 1024,
        "id": 3,
        "short_name": "KiB",
        "name": "kibibyte"
      },
      {
        "plural": "mebibytes",
        "scale_factor": 1048576,
        "id": 4,
        "short_name": "MiB",
        "name": "mebibyte"
      },
      {
        "plural": "gibibytes",
        "scale_factor": 1073741824,
        "id": 5,
        "short_name": "GiB",
        "name": "gibibyte"
      },
      {
        "plural": "tebibytes",
        "scale_factor": 1099511627776,
        "id": 6,
        "short_name": "TiB",
        "name": "tebibyte"
      },
      {
        "plural": "pebibytes",
        "scale_factor": 1125899906842620,
        "id": 7,
        "short_name": "PiB",
        "name": "pebibyte"
      },
      {
        "plural": "exbibytes",
        "scale_factor": 1152921504606850000,
        "id": 8,
        "short_name": "EiB",
        "name": "exbibyte"
      }
    ],
    "packets": [
      {
        "plural": "packets",
        "scale_factor": 1,
        "id": 26,
        "short_name": "pkt",
        "name": "packet"
      }
    ],
    "time": [
      {
        "plural": "microseconds",
        "scale_factor": 1.0e-06,
        "id": 9,
        "short_name": "us",
        "name": "microsecond"
      },
      {
        "plural": "milliseconds",
        "scale_factor": 0.001,
        "id": 10,
        "short_name": "ms",
        "name": "millisecond"
      },
      {
        "plural": "seconds",
        "scale_factor": 1,
        "id": 11,
        "short_name": "s",
        "name": "second"
      },
      {
        "plural": "minutes",
        "scale_factor": 60,
        "id": 12,
        "short_name": "m",
        "name": "minute"
      },
      {
        "plural": "hours",
        "scale_factor": 3600,
        "id": 13,
        "short_name": "h",
        "name": "hour"
      },
      {
        "plural": "days",
        "scale_factor": 86400,
        "id": 14,
        "short_name": "d",
        "name": "day"
      },
      {
        "plural": "weeks",
        "scale_factor": 604800,
        "id": 15,
        "short_name": "w",
        "name": "week"
      }
    ],
    "indices": [
      {
        "plural": "indices",
        "scale_factor": 1,
        "id": 34,
        "short_name": "idx",
        "name": "index"
      }
    ],
    "cores": [
      {
        "plural": "cores",
        "scale_factor": 1,
        "id": 31,
        "short_name": null,
        "name": "core"
      }
    ],
    "requests": [
      {
        "plural": "requests",
        "scale_factor": 1,
        "id": 19,
        "short_name": "req",
        "name": "request"
      }
    ],
    "inodes": [
      {
        "plural": "inodes",
        "scale_factor": 1,
        "id": 23,
        "short_name": null,
        "name": "inode"
      }
    ]
  },
  "original_title": "<%= deployment %> stoplights",
  "height": 161,
  "width": "100%",
  "template_variables": [

  ],
  "templated": true,
  "widgets": [
    {
      "metric": "",
      "height": 4,
      "query": "( (avg:bosh.healthmonitor.system.healthy{deployment:<%= deployment %>,job:runner_z1}.rollup(avg,60)) + (avg:bosh.healthmonitor.system.healthy{deployment:<%= deployment %>,job:runner_z2}.rollup(avg,60)) ) *50",
      "text_size": "auto",
      "unit": "%",
      "title_size": 20,
      "title": true,
      "aggregator": "min",
      "title_align": "center",
      "text_align": "center",
      "width": 14,
      "timeframe": "5m",
      "type": "query_value",
      "tags": [

      ],
      "precision": 0,
      "title_text": "DEA - 5m",
      "calc_func": "raw",
      "metric_type": "standard",
      "conditional_formats": [
        {
          "color": "white_on_red",
          "invert": false,
          "value": <%= threshold_value('( (avg:bosh.healthmonitor.system.healthy{deployment:,job:runner_z1}.rollup(avg,60)) + (avg:bosh.healthmonitor.system.healthy{deployment:,job:runner_z2}.rollup(avg,60)) ) *50', 'white_on_red') %>,
          "comparator": "<"
        },
        {
          "color": "white_on_green",
          "invert": false,
          "value": <%= threshold_value('( (avg:bosh.healthmonitor.system.healthy{deployment:,job:runner_z1}.rollup(avg,60)) + (avg:bosh.healthmonitor.system.healthy{deployment:,job:runner_z2}.rollup(avg,60)) ) *50', 'white_on_green') %>,
          "comparator": ">="
        }
      ],
      "is_valid_query": false,
      "res_calc_func": "raw",
      "aggr": "avg",
      "y": 12.989004770914713,
      "x": 11.992188413937887
    },
    {
      "metric": "bosh.healthmonitor.system.healthy",
      "height": 4,
      "query": "avg:bosh.healthmonitor.system.healthy{deployment:<%= bosh_deployment %>,job:bosh} *100",
      "text_size": "auto",
      "unit": "%",
      "title_size": 16,
      "title": true,
      "aggregator": "min",
      "title_align": "center",
      "text_align": "center",
      "width": 14,
      "timeframe": "5m",
      "type": "query_value",
      "tags": [
        "deployment:<%= bosh_deployment %>",
        "job:bosh"
      ],
      "precision": 0,
      "title_text": "Bosh - 5m",
      "calc_func": "raw",
      "metric_type": "standard",
      "conditional_formats": [
        {
          "color": "white_on_red",
          "invert": false,
          "value": <%= threshold_value('avg:bosh.healthmonitor.system.healthy{deployment:,job:bosh} *100', 'white_on_red') %>,
          "comparator": "<"
        },
        {
          "color": "white_on_green",
          "invert": false,
          "value": <%= threshold_value('avg:bosh.healthmonitor.system.healthy{deployment:,job:bosh} *100', 'white_on_green') %>,
          "comparator": ">="
        }
      ],
      "is_valid_query": false,
      "res_calc_func": "raw",
      "aggr": "avg",
      "y": 63,
      "x": 0
    },
    {
      "metric": "",
      "height": 4,
      "query": "( (avg:bosh.healthmonitor.system.healthy{deployment:<%= deployment %>,job:uaa_z1}.rollup(avg,60)) + (avg:bosh.healthmonitor.system.healthy{deployment:<%= deployment %>,job:uaa_z2}.rollup(avg,60)) ) *50",
      "text_size": "auto",
      "unit": "%",
      "title_size": 16,
      "title": true,
      "aggregator": "min",
      "title_align": "center",
      "text_align": "center",
      "width": 14,
      "timeframe": "5m",
      "type": "query_value",
      "tags": [

      ],
      "precision": 0,
      "title_text": "UAA - 5m",
      "calc_func": "raw",
      "metric_type": "standard",
      "conditional_formats": [
        {
          "color": "white_on_red",
          "invert": false,
          "value": <%= threshold_value('( (avg:bosh.healthmonitor.system.healthy{deployment:,job:uaa_z1}.rollup(avg,60)) + (avg:bosh.healthmonitor.system.healthy{deployment:,job:uaa_z2}.rollup(avg,60)) ) *50', 'white_on_red') %>,
          "comparator": "<"
        },
        {
          "color": "white_on_green",
          "invert": false,
          "value": <%= threshold_value('( (avg:bosh.healthmonitor.system.healthy{deployment:,job:uaa_z1}.rollup(avg,60)) + (avg:bosh.healthmonitor.system.healthy{deployment:,job:uaa_z2}.rollup(avg,60)) ) *50', 'white_on_green') %>,
          "comparator": ">="
        }
      ],
      "is_valid_query": false,
      "res_calc_func": "raw",
      "aggr": "avg",
      "y": 24.991321563720703,
      "x": 11.992188413937887
    },
    {
      "metric": "",
      "height": 4,
      "query": "( (avg:bosh.healthmonitor.system.healthy{deployment:<%= deployment %>,job:api_z1}.rollup(avg,60)) + (avg:bosh.healthmonitor.system.healthy{deployment:<%= deployment %>,job:api_z2}.rollup(avg,60)) ) *50",
      "text_size": "auto",
      "unit": "%",
      "title_size": 16,
      "title": true,
      "aggregator": "min",
      "title_align": "center",
      "text_align": "center",
      "width": 14,
      "timeframe": "5m",
      "type": "query_value",
      "tags": [

      ],
      "precision": 0,
      "title_text": "API - 5m",
      "calc_func": "raw",
      "metric_type": "standard",
      "conditional_formats": [
        {
          "color": "white_on_red",
          "invert": false,
          "value": <%= threshold_value('( (avg:bosh.healthmonitor.system.healthy{deployment:,job:api_z1}.rollup(avg,60)) + (avg:bosh.healthmonitor.system.healthy{deployment:,job:api_z2}.rollup(avg,60)) ) *50', 'white_on_red') %>,
          "comparator": "<"
        },
        {
          "color": "white_on_green",
          "invert": false,
          "value": <%= threshold_value('( (avg:bosh.healthmonitor.system.healthy{deployment:,job:api_z1}.rollup(avg,60)) + (avg:bosh.healthmonitor.system.healthy{deployment:,job:api_z2}.rollup(avg,60)) ) *50', 'white_on_green') %>,
          "comparator": ">="
        }
      ],
      "is_valid_query": false,
      "res_calc_func": "raw",
      "aggr": "avg",
      "y": 19,
      "x": 12
    },
    {
      "metric": "",
      "height": 4,
      "query": "( (avg:bosh.healthmonitor.system.healthy{deployment:<%= deployment %>,job:hm9000_z1}.rollup(avg,60)) + (avg:bosh.healthmonitor.system.healthy{deployment:<%= deployment %>,job:hm9000_z2}.rollup(avg,60)) ) *50",
      "text_size": "auto",
      "unit": "%",
      "title_size": 16,
      "title": true,
      "aggregator": "min",
      "title_align": "center",
      "text_align": "center",
      "width": 14,
      "timeframe": "5m",
      "type": "query_value",
      "tags": [

      ],
      "precision": 0,
      "title_text": "HM9000 - 5m",
      "calc_func": "raw",
      "metric_type": "standard",
      "conditional_formats": [
        {
          "comparator": "<",
          "color": "white_on_red",
          "custom_bg_color": null,
          "value": <%= threshold_value('( (avg:bosh.healthmonitor.system.healthy{deployment:,job:hm9000_z1}.rollup(avg,60)) + (avg:bosh.healthmonitor.system.healthy{deployment:,job:hm9000_z2}.rollup(avg,60)) ) *50', 'white_on_red') %>,
          "invert": false,
          "custom_fg_color": null
        },
        {
          "comparator": "<",
          "color": "white_on_yellow",
          "custom_bg_color": null,
          "value": <%= threshold_value('( (avg:bosh.healthmonitor.system.healthy{deployment:,job:hm9000_z1}.rollup(avg,60)) + (avg:bosh.healthmonitor.system.healthy{deployment:,job:hm9000_z2}.rollup(avg,60)) ) *50', 'white_on_yellow') %>,
          "invert": false,
          "custom_fg_color": null
        },
        {
          "comparator": ">=",
          "color": "white_on_green",
          "custom_bg_color": null,
          "value": <%= threshold_value('( (avg:bosh.healthmonitor.system.healthy{deployment:,job:hm9000_z1}.rollup(avg,60)) + (avg:bosh.healthmonitor.system.healthy{deployment:,job:hm9000_z2}.rollup(avg,60)) ) *50', 'white_on_green') %>,
          "invert": false,
          "custom_fg_color": null
        }
      ],
      "is_valid_query": false,
      "res_calc_func": "raw",
      "aggr": "avg",
      "y": 57,
      "x": 0
    },
    {
      "metric": "",
      "height": 4,
      "query": "( (avg:bosh.healthmonitor.system.healthy{deployment:<%= deployment %>,job:router_z1}.rollup(avg,60)) + (avg:bosh.healthmonitor.system.healthy{deployment:<%= deployment %>,job:router_z2}.rollup(avg,60)) ) *50",
      "text_size": "auto",
      "unit": "%",
      "title_size": 16,
      "title": true,
      "aggregator": "min",
      "title_align": "center",
      "text_align": "center",
      "width": 14,
      "timeframe": "5m",
      "type": "query_value",
      "tags": [

      ],
      "precision": 0,
      "title_text": "Router - 5m",
      "calc_func": "raw",
      "metric_type": "standard",
      "conditional_formats": [
        {
          "color": "white_on_red",
          "invert": false,
          "value": <%= threshold_value('( (avg:bosh.healthmonitor.system.healthy{deployment:,job:router_z1}.rollup(avg,60)) + (avg:bosh.healthmonitor.system.healthy{deployment:,job:router_z2}.rollup(avg,60)) ) *50', 'white_on_red') %>,
          "comparator": "<"
        },
        {
          "color": "white_on_green",
          "invert": false,
          "value": <%= threshold_value('( (avg:bosh.healthmonitor.system.healthy{deployment:,job:router_z1}.rollup(avg,60)) + (avg:bosh.healthmonitor.system.healthy{deployment:,job:router_z2}.rollup(avg,60)) ) *50', 'white_on_green') %>,
          "comparator": ">="
        }
      ],
      "is_valid_query": false,
      "res_calc_func": "raw",
      "aggr": "avg",
      "y": 6.9950815836588545,
      "x": 11.99797530968984
    },
    {
      "metric": "",
      "height": 4,
      "query": "( (avg:bosh.healthmonitor.system.healthy{deployment:<%= deployment %>,job:nats_z1}.rollup(avg,60)) + (avg:bosh.healthmonitor.system.healthy{deployment:<%= deployment %>,job:nats_z2}.rollup(avg,60)) ) *50",
      "text_size": "auto",
      "unit": "%",
      "title_size": 16,
      "title": true,
      "aggregator": "min",
      "title_align": "center",
      "text_align": "center",
      "width": 14,
      "timeframe": "5m",
      "type": "query_value",
      "tags": [

      ],
      "precision": 0,
      "title_text": "NATS - 5m",
      "calc_func": "raw",
      "metric_type": "standard",
      "conditional_formats": [
        {
          "color": "white_on_red",
          "invert": false,
          "value": <%= threshold_value('( (avg:bosh.healthmonitor.system.healthy{deployment:,job:nats_z1}.rollup(avg,60)) + (avg:bosh.healthmonitor.system.healthy{deployment:,job:nats_z2}.rollup(avg,60)) ) *50', 'white_on_red') %>,
          "comparator": "<"
        },
        {
          "color": "white_on_green",
          "invert": false,
          "value": <%= threshold_value('( (avg:bosh.healthmonitor.system.healthy{deployment:,job:nats_z1}.rollup(avg,60)) + (avg:bosh.healthmonitor.system.healthy{deployment:,job:nats_z2}.rollup(avg,60)) ) *50', 'white_on_green') %>,
          "comparator": ">="
        }
      ],
      "is_valid_query": false,
      "res_calc_func": "raw",
      "aggr": "avg",
      "y": 39,
      "x": 0
    },
    {
      "metric": "bosh.healthmonitor.system.healthy",
      "height": 4,
      "query": "avg:bosh.healthmonitor.system.healthy{deployment:<%= deployment %>,job:stats_z1} *100",
      "text_size": "auto",
      "unit": "%",
      "title_size": 16,
      "title": true,
      "aggregator": "min",
      "title_align": "center",
      "text_align": "center",
      "width": 14,
      "timeframe": "5m",
      "type": "query_value",
      "tags": [
        "deployment:<%= deployment %>",
        "job:stats_z1"
      ],
      "precision": 0,
      "title_text": "Stats - 5m",
      "calc_func": "raw",
      "metric_type": "standard",
      "conditional_formats": [
        {
          "color": "white_on_red",
          "invert": false,
          "value": <%= threshold_value('avg:bosh.healthmonitor.system.healthy{deployment:,job:stats_z1} *100', 'white_on_red') %>,
          "comparator": "<"
        },
        {
          "color": "white_on_green",
          "invert": false,
          "value": <%= threshold_value('avg:bosh.healthmonitor.system.healthy{deployment:,job:stats_z1} *100', 'white_on_green') %>,
          "comparator": ">="
        }
      ],
      "is_valid_query": false,
      "res_calc_func": "raw",
      "aggr": "avg",
      "y": 51,
      "x": 0
    },
    {
      "metric": "",
      "height": 4,
      "query": "( (avg:bosh.healthmonitor.system.healthy{deployment:<%= deployment %>,job:doppler_z1}.rollup(avg,60)) + (avg:bosh.healthmonitor.system.healthy{deployment:<%= deployment %>,job:loggregator_trafficcontroller_z1}.rollup(avg,60)) + (avg:bosh.healthmonitor.system.healthy{deployment:<%= deployment %>,job:doppler_z2}.rollup(avg,60)) + (avg:bosh.healthmonitor.system.healthy{deployment:<%= deployment %>,job:loggregator_trafficcontroller_z2}.rollup(avg,60)) ) *25",
      "text_size": "auto",
      "unit": "%",
      "title_size": 16,
      "title": true,
      "aggregator": "min",
      "title_align": "center",
      "text_align": "center",
      "width": 14,
      "timeframe": "5m",
      "type": "query_value",
      "tags": [

      ],
      "precision": 0,
      "title_text": "Doppler - 5m",
      "calc_func": "raw",
      "metric_type": "standard",
      "conditional_formats": [
        {
          "comparator": "<",
          "color": "white_on_red",
          "custom_bg_color": null,
          "value": <%= threshold_value('( (avg:bosh.healthmonitor.system.healthy{deployment:,job:doppler_z1}.rollup(avg,60)) + (avg:bosh.healthmonitor.system.healthy{deployment:,job:loggregator_trafficcontroller_z1}.rollup(avg,60)) + (avg:bosh.healthmonitor.system.healthy{deployment:,job:doppler_z2}.rollup(avg,60)) + (avg:bosh.healthmonitor.system.healthy{deployment:,job:loggregator_trafficcontroller_z2}.rollup(avg,60)) ) *25', 'white_on_red') %>,
          "invert": false,
          "custom_fg_color": null
        },
        {
          "comparator": ">=",
          "color": "white_on_green",
          "custom_bg_color": null,
          "value": <%= threshold_value('( (avg:bosh.healthmonitor.system.healthy{deployment:,job:doppler_z1}.rollup(avg,60)) + (avg:bosh.healthmonitor.system.healthy{deployment:,job:loggregator_trafficcontroller_z1}.rollup(avg,60)) + (avg:bosh.healthmonitor.system.healthy{deployment:,job:doppler_z2}.rollup(avg,60)) + (avg:bosh.healthmonitor.system.healthy{deployment:,job:loggregator_trafficcontroller_z2}.rollup(avg,60)) ) *25', 'white_on_green') %>,
          "invert": false,
          "custom_fg_color": null
        }
      ],
      "is_valid_query": false,
      "res_calc_func": "raw",
      "aggr": "avg",
      "y": 45,
      "x": 0
    },
    {
      "metric": "cf.collector.reservable_stagers",
      "height": 12,
      "query": "sum:cf.collector.reservable_stagers{deployment:<%= deployment %>}",
      "text_size": "auto",
      "unit": "G",
      "title_size": 16,
      "title": true,
      "aggregator": "avg",
      "title_align": "left",
      "text_align": "center",
      "width": 21,
      "timeframe": "5m",
      "type": "query_value",
      "tags": [
        "deployment:<%= deployment %>"
      ],
      "precision": 0,
      "title_text": "Reserveable Stagers - 5m avg",
      "calc_func": "raw",
      "metric_type": "standard",
      "conditional_formats": [
        {
          "comparator": "<",
          "color": "white_on_red",
          "custom_bg_color": null,
          "value": <%= threshold_value('sum:cf.collector.reservable_stagers{deployment:}', 'white_on_red') %>,
          "invert": false,
          "custom_fg_color": null
        },
        {
          "comparator": "<=",
          "color": "white_on_yellow",
          "custom_bg_color": null,
          "value": <%= threshold_value('sum:cf.collector.reservable_stagers{deployment:}', 'white_on_yellow') %>,
          "invert": false,
          "custom_fg_color": null
        },
        {
          "comparator": ">",
          "color": "white_on_green",
          "custom_bg_color": null,
          "value": <%= threshold_value('sum:cf.collector.reservable_stagers{deployment:}', 'white_on_green') %>,
          "invert": false,
          "custom_fg_color": null
        }
      ],
      "is_valid_query": true,
      "res_calc_func": "raw",
      "aggr": "sum",
      "y": 5.988137563069661,
      "x": 49.850984851519264
    },
    {
      "title_size": 16,
      "title": true,
      "title_align": "left",
      "title_text": "Reserveable Stagers - 1h",
      "height": 12,
      "tile_def": {
        "viz": "heatmap",
        "requests": [
          {
            "q": "sum:cf.collector.reservable_stagers{deployment:<%= deployment %>,job:dea} by {job,index}",
            "type": "area"
          }
        ],
        "events": [
          {
            "q": "tags:deployment:<%= environment %> start_deploy"
          }
        ]
      },
      "width": 28,
      "timeframe": "1h",
      "y": 5.988137563069661,
      "x": 70.85214451948802,
      "legend_size": "0",
      "type": "timeseries",
      "legend": false
    },
    {
      "metric": "bosh.healthmonitor.system.healthy",
      "height": 4,
      "query": "avg:bosh.healthmonitor.system.healthy{deployment:<%= bosh_deployment %>,job:bosh} *100",
      "text_size": "auto",
      "unit": "%",
      "title_size": 16,
      "title": true,
      "aggregator": "min",
      "title_align": "center",
      "text_align": "center",
      "width": 9,
      "timeframe": "1d",
      "type": "query_value",
      "tags": [
        "deployment:<%= bosh_deployment %>",
        "job:bosh"
      ],
      "precision": 0,
      "title_text": "Bosh - 24h",
      "calc_func": "raw",
      "metric_type": "standard",
      "conditional_formats": [
        {
          "color": "white_on_yellow",
          "invert": false,
          "value": <%= threshold_value('avg:bosh.healthmonitor.system.healthy{deployment:,job:bosh} *100', 'white_on_yellow') %>,
          "comparator": "<"
        },
        {
          "color": "white_on_green",
          "invert": false,
          "value": <%= threshold_value('avg:bosh.healthmonitor.system.healthy{deployment:,job:bosh} *100', 'white_on_green') %>,
          "comparator": ">="
        }
      ],
      "is_valid_query": false,
      "res_calc_func": "raw",
      "aggr": "avg",
      "y": 63,
      "x": 14
    },
    {
      "metric": "",
      "height": 4,
      "query": "( (avg:bosh.healthmonitor.system.healthy{deployment:<%= deployment %>,job:uaa_z1}.rollup(avg,60)) + (avg:bosh.healthmonitor.system.healthy{deployment:<%= deployment %>,job:uaa_z2}.rollup(avg,60)) ) *50",
      "text_size": "auto",
      "unit": "%",
      "title_size": 16,
      "title": true,
      "aggregator": "min",
      "title_align": "center",
      "text_align": "center",
      "width": 9,
      "timeframe": "1d",
      "type": "query_value",
      "tags": [

      ],
      "precision": 0,
      "title_text": "UAA - 24h",
      "calc_func": "raw",
      "metric_type": "standard",
      "conditional_formats": [
        {
          "color": "white_on_yellow",
          "invert": false,
          "value": <%= threshold_value('( (avg:bosh.healthmonitor.system.healthy{deployment:,job:uaa_z1}.rollup(avg,60)) + (avg:bosh.healthmonitor.system.healthy{deployment:,job:uaa_z2}.rollup(avg,60)) ) *50', 'white_on_yellow') %>,
          "comparator": "<"
        },
        {
          "color": "white_on_green",
          "invert": false,
          "value": <%= threshold_value('( (avg:bosh.healthmonitor.system.healthy{deployment:,job:uaa_z1}.rollup(avg,60)) + (avg:bosh.healthmonitor.system.healthy{deployment:,job:uaa_z2}.rollup(avg,60)) ) *50', 'white_on_green') %>,
          "comparator": ">="
        }
      ],
      "is_valid_query": false,
      "res_calc_func": "raw",
      "aggr": "avg",
      "y": 24.986980438232422,
      "x": 25.989585518836975
    },
    {
      "metric": "",
      "height": 4,
      "query": "( (avg:bosh.healthmonitor.system.healthy{deployment:<%= deployment %>,job:hm9000_z1}.rollup(avg,60)) + (avg:bosh.healthmonitor.system.healthy{deployment:<%= deployment %>,job:hm9000_z2}.rollup(avg,60)) ) *50",
      "text_size": "auto",
      "unit": "%",
      "title_size": 16,
      "title": true,
      "aggregator": "min",
      "title_align": "center",
      "text_align": "center",
      "width": 9,
      "timeframe": "1d",
      "type": "query_value",
      "tags": [

      ],
      "precision": 0,
      "title_text": "HM9000 - 24h",
      "calc_func": "raw",
      "metric_type": "standard",
      "conditional_formats": [
        {
          "comparator": "<",
          "color": "white_on_red",
          "custom_bg_color": null,
          "value": <%= threshold_value('( (avg:bosh.healthmonitor.system.healthy{deployment:,job:hm9000_z1}.rollup(avg,60)) + (avg:bosh.healthmonitor.system.healthy{deployment:,job:hm9000_z2}.rollup(avg,60)) ) *50', 'white_on_red') %>,
          "invert": false,
          "custom_fg_color": null
        },
        {
          "comparator": "<",
          "color": "white_on_yellow",
          "custom_bg_color": null,
          "value": <%= threshold_value('( (avg:bosh.healthmonitor.system.healthy{deployment:,job:hm9000_z1}.rollup(avg,60)) + (avg:bosh.healthmonitor.system.healthy{deployment:,job:hm9000_z2}.rollup(avg,60)) ) *50', 'white_on_yellow') %>,
          "invert": false,
          "custom_fg_color": null
        },
        {
          "comparator": ">=",
          "color": "white_on_green",
          "custom_bg_color": null,
          "value": <%= threshold_value('( (avg:bosh.healthmonitor.system.healthy{deployment:,job:hm9000_z1}.rollup(avg,60)) + (avg:bosh.healthmonitor.system.healthy{deployment:,job:hm9000_z2}.rollup(avg,60)) ) *50', 'white_on_green') %>,
          "invert": false,
          "custom_fg_color": null
        }
      ],
      "is_valid_query": false,
      "res_calc_func": "raw",
      "aggr": "avg",
      "y": 57,
      "x": 14
    },
    {
      "metric": "",
      "height": 4,
      "query": "( (avg:bosh.healthmonitor.system.healthy{deployment:<%= deployment %>,job:doppler_z1}.rollup(avg,60)) + (avg:bosh.healthmonitor.system.healthy{deployment:<%= deployment %>,job:loggregator_trafficcontroller_z1}.rollup(avg,60)) + (avg:bosh.healthmonitor.system.healthy{deployment:<%= deployment %>,job:doppler_z2}.rollup(avg,60)) + (avg:bosh.healthmonitor.system.healthy{deployment:<%= deployment %>,job:loggregator_trafficcontroller_z2}.rollup(avg,60)) ) *25",
      "text_size": "auto",
      "unit": "%",
      "title_size": 16,
      "title": true,
      "aggregator": "min",
      "title_align": "center",
      "text_align": "center",
      "width": 9,
      "timeframe": "1d",
      "type": "query_value",
      "tags": [

      ],
      "precision": 0,
      "title_text": "Doppler - 24h",
      "calc_func": "raw",
      "metric_type": "standard",
      "conditional_formats": [
        {
          "comparator": "<",
          "color": "white_on_yellow",
          "custom_bg_color": null,
          "value": <%= threshold_value('( (avg:bosh.healthmonitor.system.healthy{deployment:,job:doppler_z1}.rollup(avg,60)) + (avg:bosh.healthmonitor.system.healthy{deployment:,job:loggregator_trafficcontroller_z1}.rollup(avg,60)) + (avg:bosh.healthmonitor.system.healthy{deployment:,job:doppler_z2}.rollup(avg,60)) + (avg:bosh.healthmonitor.system.healthy{deployment:,job:loggregator_trafficcontroller_z2}.rollup(avg,60)) ) *25', 'white_on_yellow') %>,
          "invert": false,
          "custom_fg_color": null
        },
        {
          "comparator": ">=",
          "color": "white_on_green",
          "custom_bg_color": null,
          "value": <%= threshold_value('( (avg:bosh.healthmonitor.system.healthy{deployment:,job:doppler_z1}.rollup(avg,60)) + (avg:bosh.healthmonitor.system.healthy{deployment:,job:loggregator_trafficcontroller_z1}.rollup(avg,60)) + (avg:bosh.healthmonitor.system.healthy{deployment:,job:doppler_z2}.rollup(avg,60)) + (avg:bosh.healthmonitor.system.healthy{deployment:,job:loggregator_trafficcontroller_z2}.rollup(avg,60)) ) *25', 'white_on_green') %>,
          "invert": false,
          "custom_fg_color": null
        }
      ],
      "is_valid_query": false,
      "res_calc_func": "raw",
      "aggr": "avg",
      "y": 45,
      "x": 14
    },
    {
      "title_size": 16,
      "title": true,
      "color": "#4d4d4d",
      "text": "Frontend Health",
      "title_align": "left",
      "text_align": "left",
      "title_text": "",
      "height": 6,
      "width": 24,
      "y": 1,
      "x": 12,
      "font_size": "auto",
      "type": "free_text"
    },
    {
      "metric": "",
      "height": 4,
      "query": "( (avg:bosh.healthmonitor.system.healthy{deployment:<%= deployment %>,job:api_z1}.rollup(avg,60)) + (avg:bosh.healthmonitor.system.healthy{deployment:<%= deployment %>,job:api_z2}.rollup(avg,60)) ) *50",
      "text_size": "auto",
      "unit": "%",
      "title_size": 16,
      "title": true,
      "aggregator": "min",
      "title_align": "center",
      "text_align": "center",
      "width": 9,
      "timeframe": "1d",
      "type": "query_value",
      "tags": [

      ],
      "precision": 0,
      "title_text": "API - 24h",
      "calc_func": "raw",
      "metric_type": "standard",
      "conditional_formats": [
        {
          "color": "white_on_yellow",
          "invert": false,
          "value": <%= threshold_value('( (avg:bosh.healthmonitor.system.healthy{deployment:,job:api_z1}.rollup(avg,60)) + (avg:bosh.healthmonitor.system.healthy{deployment:,job:api_z2}.rollup(avg,60)) ) *50', 'white_on_yellow') %>,
          "comparator": "<"
        },
        {
          "color": "white_on_green",
          "invert": false,
          "value": <%= threshold_value('( (avg:bosh.healthmonitor.system.healthy{deployment:,job:api_z1}.rollup(avg,60)) + (avg:bosh.healthmonitor.system.healthy{deployment:,job:api_z2}.rollup(avg,60)) ) *50', 'white_on_green') %>,
          "comparator": ">="
        }
      ],
      "is_valid_query": false,
      "res_calc_func": "raw",
      "aggr": "avg",
      "y": 18.985823313395183,
      "x": 25.98813847700755
    },
    {
      "metric": "bosh.healthmonitor.system.healthy",
      "height": 4,
      "query": "avg:bosh.healthmonitor.system.healthy{deployment:<%= deployment %>,job:stats_z1} *100",
      "text_size": "auto",
      "unit": "%",
      "title_size": 16,
      "title": true,
      "aggregator": "min",
      "title_align": "center",
      "text_align": "center",
      "width": 9,
      "timeframe": "1d",
      "type": "query_value",
      "tags": [
        "deployment:<%= deployment %>",
        "job:stats_z1"
      ],
      "precision": 0,
      "title_text": "Stats - 24h",
      "calc_func": "raw",
      "metric_type": "standard",
      "conditional_formats": [
        {
          "color": "white_on_yellow",
          "invert": false,
          "value": <%= threshold_value('avg:bosh.healthmonitor.system.healthy{deployment:,job:stats_z1} *100', 'white_on_yellow') %>,
          "comparator": "<"
        },
        {
          "color": "white_on_green",
          "invert": false,
          "value": <%= threshold_value('avg:bosh.healthmonitor.system.healthy{deployment:,job:stats_z1} *100', 'white_on_green') %>,
          "comparator": ">="
        }
      ],
      "is_valid_query": false,
      "res_calc_func": "raw",
      "aggr": "avg",
      "y": 51,
      "x": 14
    },
    {
      "metric": "",
      "height": 4,
      "query": "( (avg:bosh.healthmonitor.system.healthy{deployment:<%= deployment %>,job:nats_z1}.rollup(avg,60)) + (avg:bosh.healthmonitor.system.healthy{deployment:<%= deployment %>,job:nats_z2}.rollup(avg,60)) ) *50",
      "text_size": "auto",
      "unit": "%",
      "title_size": 16,
      "title": true,
      "aggregator": "min",
      "title_align": "center",
      "text_align": "center",
      "width": 9,
      "timeframe": "1d",
      "type": "query_value",
      "tags": [

      ],
      "precision": 0,
      "title_text": "NATS - 24h",
      "calc_func": "raw",
      "metric_type": "standard",
      "conditional_formats": [
        {
          "color": "white_on_yellow",
          "invert": false,
          "value": <%= threshold_value('( (avg:bosh.healthmonitor.system.healthy{deployment:,job:nats_z1}.rollup(avg,60)) + (avg:bosh.healthmonitor.system.healthy{deployment:,job:nats_z2}.rollup(avg,60)) ) *50', 'white_on_yellow') %>,
          "comparator": "<"
        },
        {
          "color": "white_on_green",
          "invert": false,
          "value": <%= threshold_value('( (avg:bosh.healthmonitor.system.healthy{deployment:,job:nats_z1}.rollup(avg,60)) + (avg:bosh.healthmonitor.system.healthy{deployment:,job:nats_z2}.rollup(avg,60)) ) *50', 'white_on_green') %>,
          "comparator": ">="
        }
      ],
      "is_valid_query": false,
      "res_calc_func": "raw",
      "aggr": "avg",
      "y": 39,
      "x": 14
    },
    {
      "metric": "",
      "height": 4,
      "query": "( (avg:bosh.healthmonitor.system.healthy{deployment:<%= deployment %>,job:router_z1}.rollup(avg,60)) + (avg:bosh.healthmonitor.system.healthy{deployment:<%= deployment %>,job:router_z2}.rollup(avg,60)) ) *50",
      "text_size": "auto",
      "unit": "%",
      "title_size": 16,
      "title": true,
      "aggregator": "min",
      "title_align": "center",
      "text_align": "center",
      "width": 9,
      "timeframe": "1d",
      "type": "query_value",
      "tags": [

      ],
      "precision": 0,
      "title_text": "Router - 24h",
      "calc_func": "raw",
      "metric_type": "standard",
      "conditional_formats": [
        {
          "color": "white_on_yellow",
          "invert": false,
          "value": <%= threshold_value('( (avg:bosh.healthmonitor.system.healthy{deployment:,job:router_z1}.rollup(avg,60)) + (avg:bosh.healthmonitor.system.healthy{deployment:,job:router_z2}.rollup(avg,60)) ) *50', 'white_on_yellow') %>,
          "comparator": "<"
        },
        {
          "color": "white_on_green",
          "invert": false,
          "value": <%= threshold_value('( (avg:bosh.healthmonitor.system.healthy{deployment:,job:router_z1}.rollup(avg,60)) + (avg:bosh.healthmonitor.system.healthy{deployment:,job:router_z2}.rollup(avg,60)) ) *50', 'white_on_green') %>,
          "comparator": ">="
        }
      ],
      "is_valid_query": false,
      "res_calc_func": "raw",
      "aggr": "avg",
      "y": 6.987847646077474,
      "x": 25.989585518836975
    },
    {
      "metric": "",
      "height": 4,
      "query": "( (avg:bosh.healthmonitor.system.healthy{deployment:<%= deployment %>,job:runner_z1}.rollup(avg,60)) + (avg:bosh.healthmonitor.system.healthy{deployment:<%= deployment %>,job:runner_z2}.rollup(avg,60)) ) *50",
      "text_size": "auto",
      "unit": "%",
      "title_size": 20,
      "title": true,
      "aggregator": "min",
      "title_align": "center",
      "text_align": "center",
      "width": 9,
      "timeframe": "1d",
      "type": "query_value",
      "tags": [

      ],
      "precision": 0,
      "title_text": "DEA - 24h",
      "calc_func": "raw",
      "metric_type": "standard",
      "conditional_formats": [
        {
          "color": "white_on_yellow",
          "invert": false,
          "value": <%= threshold_value('( (avg:bosh.healthmonitor.system.healthy{deployment:,job:runner_z1}.rollup(avg,60)) + (avg:bosh.healthmonitor.system.healthy{deployment:,job:runner_z2}.rollup(avg,60)) ) *50', 'white_on_yellow') %>,
          "comparator": "<"
        },
        {
          "color": "white_on_green",
          "invert": false,
          "value": <%= threshold_value('( (avg:bosh.healthmonitor.system.healthy{deployment:,job:runner_z1}.rollup(avg,60)) + (avg:bosh.healthmonitor.system.healthy{deployment:,job:runner_z2}.rollup(avg,60)) ) *50', 'white_on_green') %>,
          "comparator": ">="
        }
      ],
      "is_valid_query": false,
      "res_calc_func": "raw",
      "aggr": "avg",
      "y": 12.983219146728516,
      "x": 25.989585518836975
    },
    {
      "metric": "",
      "height": 6,
      "query": "(min:cf.collector.uptime_in_seconds{deployment:<%= deployment %>,job:dea}) / 3600",
      "text_size": "auto",
      "unit": "hrs",
      "title_size": 20,
      "title": true,
      "aggregator": "min",
      "title_align": "left",
      "text_align": "left",
      "width": 21,
      "timeframe": "5m",
      "type": "query_value",
      "tags": [

      ],
      "precision": 1,
      "title_text": "Hours since last DEA start",
      "calc_func": "raw",
      "metric_type": "standard",
      "conditional_formats": [
        {
          "comparator": "<",
          "color": "white_on_red",
          "custom_bg_color": null,
          "value": <%= threshold_value('(min:cf.collector.uptime_in_seconds{deployment:,job:dea}) / 3600', 'white_on_red') %>,
          "invert": false,
          "custom_fg_color": null
        },
        {
          "comparator": "<=",
          "color": "white_on_yellow",
          "custom_bg_color": null,
          "value": <%= threshold_value('(min:cf.collector.uptime_in_seconds{deployment:,job:dea}) / 3600', 'white_on_yellow') %>,
          "invert": false,
          "custom_fg_color": null
        },
        {
          "comparator": ">",
          "color": "white_on_green",
          "custom_bg_color": null,
          "value": <%= threshold_value('(min:cf.collector.uptime_in_seconds{deployment:,job:dea}) / 3600', 'white_on_green') %>,
          "invert": false,
          "custom_fg_color": null
        }
      ],
      "is_valid_query": false,
      "res_calc_func": "raw",
      "aggr": "avg",
      "y": 36,
      "x": 50
    },
    {
      "title_size": 13,
      "title": true,
      "title_align": "left",
      "title_text": "Min. Avail. Memory by Cell - 1h",
      "height": 12,
      "tile_def": {
        "viz": "heatmap",
        "requests": [
          {
            "q": "(min:datadog.nozzle.rep.CapacityRemainingMemory{deployment:<%= deployment %>-diego} by {ip}) / 0.000001024"
          }
        ],
        "events": [
          {
            "q": "tags:deployment:<%= deployment %>-diego started deploying diego to <%= deployment %>"
          },
          {
            "q": "tags:deployment:<%= deployment %>-diego finished deploying diego to <%= deployment %>"
          },
          {
            "q": "tags:deployment:<%= deployment %>-diego failed deploying diego to <%= deployment %>"
          },
          {
            "q": "tags:deployment:<%= deployment %>-cf started deploying cf to <%= deployment %>"
          },
          {
            "q": "tags:deployment:<%= deployment %>-cf finished deploying cf to <%= deployment %>"
          },
          {
            "q": "tags:deployment:<%= deployment %>-cf failed deploying cf to <%= deployment %>"
          }
        ]
      },
      "width": 28,
      "timeframe": "1h",
      "y": 6,
      "x": 122,
      "legend_size": "0",
      "type": "timeseries",
      "legend": false
    },
    {
      "metric": "",
      "height": 6,
      "query": "(min:datadog.nozzle.rep.CapacityRemainingMemory{deployment:<%= deployment %>-diego} by {ip}) / 0.000001024",
      "text_size": "auto",
      "unit": "auto",
      "title_size": 13,
      "title": true,
      "aggregator": "min",
      "title_align": "center",
      "text_align": "center",
      "width": 21,
      "timeframe": "5m",
      "type": "query_value",
      "tags": [

      ],
      "precision": 2,
      "title_text": "Min. Avail. Memory by Cell - 5m min",
      "calc_func": "raw",
      "metric_type": "standard",
      "conditional_formats": [
        {
          "comparator": "<",
          "color": "white_on_red",
          "custom_bg_color": null,
          "value": <%= threshold_value('(min:datadog.nozzle.rep.CapacityRemainingMemory{deployment:} by {ip}) / 0.000001024', 'white_on_red') %>,
          "invert": false,
          "custom_fg_color": null
        },
        {
          "comparator": "<=",
          "color": "white_on_yellow",
          "custom_bg_color": null,
          "value": <%= threshold_value('(min:datadog.nozzle.rep.CapacityRemainingMemory{deployment:} by {ip}) / 0.000001024', 'white_on_yellow') %>,
          "invert": false,
          "custom_fg_color": null
        },
        {
          "comparator": ">",
          "color": "white_on_green",
          "custom_bg_color": null,
          "value": <%= threshold_value('(min:datadog.nozzle.rep.CapacityRemainingMemory{deployment:} by {ip}) / 0.000001024', 'white_on_green') %>,
          "invert": false,
          "custom_fg_color": null
        }
      ],
      "is_valid_query": false,
      "res_calc_func": "raw",
      "aggr": "avg",
      "y": 5.988137563069661,
      "x": 100.85214451948802
    },
    {
      "metric": "",
      "height": 6,
      "query": "(sum:datadog.nozzle.rep.CapacityRemainingMemory{deployment:<%= deployment %>-diego} ) / 0.000001024",
      "text_size": "auto",
      "unit": "auto",
      "title_size": 13,
      "title": true,
      "aggregator": "avg",
      "title_align": "center",
      "text_align": "center",
      "width": 21,
      "timeframe": "5m",
      "type": "query_value",
      "tags": [

      ],
      "precision": 2,
      "title_text": "Total Avail. Memory - 5m avg",
      "calc_func": "raw",
      "metric_type": "standard",
      "conditional_formats": [
        {
          "comparator": "<",
          "color": "white_on_red",
          "custom_bg_color": null,
          "value": <%= threshold_value('(sum:datadog.nozzle.rep.CapacityRemainingMemory{deployment:} ) / 0.000001024', 'white_on_red') %>,
          "invert": false,
          "custom_fg_color": null
        },
        {
          "comparator": "<=",
          "color": "white_on_yellow",
          "custom_bg_color": null,
          "value": <%= threshold_value('(sum:datadog.nozzle.rep.CapacityRemainingMemory{deployment:} ) / 0.000001024', 'white_on_yellow') %>,
          "invert": false,
          "custom_fg_color": null
        },
        {
          "comparator": ">",
          "color": "white_on_green",
          "custom_bg_color": null,
          "value": <%= threshold_value('(sum:datadog.nozzle.rep.CapacityRemainingMemory{deployment:} ) / 0.000001024', 'white_on_green') %>,
          "invert": false,
          "custom_fg_color": null
        }
      ],
      "is_valid_query": false,
      "res_calc_func": "raw",
      "aggr": "avg",
      "y": 14,
      "x": 100.91667005419731
    },
    {
      "title_size": 13,
      "title": true,
      "title_align": "left",
      "title_text": "Tasks",
      "height": 12,
      "tile_def": {
        "viz": "timeseries",
        "requests": [
          {
            "q": "avg:datadog.nozzle.bbs.TasksPending{deployment:<%= deployment %>-diego}"
          },
          {
            "q": "avg:datadog.nozzle.bbs.TasksClaimed{deployment:<%= deployment %>-diego}"
          },
          {
            "q": "avg:datadog.nozzle.bbs.TasksCompleted{deployment:<%= deployment %>-diego}"
          },
          {
            "q": "avg:datadog.nozzle.bbs.TasksResolving{deployment:<%= deployment %>-diego}"
          }
        ],
        "events": [
          {
            "q": "tags:deployment:<%= deployment %>-diego started deploying diego to <%= deployment %>"
          }
        ]
      },
      "width": 28,
      "timeframe": "1h",
      "y": 72,
      "x": 123,
      "legend_size": "0",
      "type": "timeseries",
      "legend": false
    },
    {
      "title_size": 16,
      "title": true,
      "color": "#4d4d4d",
      "text": "Req / sec",
      "title_align": "left",
      "text_align": "left",
      "title_text": "",
      "height": 6,
      "width": 13,
      "y": 0.9924767812093099,
      "x": 35.831888477007546,
      "font_size": "auto",
      "type": "free_text"
    },
    {
      "metric": "",
      "height": 4,
      "query": "per_second(sum:cf.collector.router.requests{component:cloudcontroller,deployment:<%= deployment %>})",
      "text_size": "auto",
      "unit": "auto",
      "title_size": 20,
      "title": true,
      "aggregator": "avg",
      "title_align": "left",
      "text_align": "left",
      "width": 13,
      "timeframe": "5m",
      "type": "query_value",
      "tags": [

      ],
      "precision": 2,
      "title_text": "API Req/sec - 5min",
      "calc_func": "raw",
      "metric_type": "standard",
      "conditional_formats": [
        {
          "comparator": "<",
          "color": "red_on_white",
          "custom_bg_color": null,
          "value": <%= threshold_value('per_second(sum:cf.collector.router.requests{component:cloudcontroller,deployment:})', 'red_on_white') %>,
          "invert": false,
          "custom_fg_color": null
        },
        {
          "comparator": "<=",
          "color": "yellow_on_white",
          "custom_bg_color": null,
          "value": <%= threshold_value('per_second(sum:cf.collector.router.requests{component:cloudcontroller,deployment:})', 'yellow_on_white') %>,
          "invert": false,
          "custom_fg_color": null
        },
        {
          "comparator": ">",
          "color": "green_on_white",
          "custom_bg_color": null,
          "value": <%= threshold_value('per_second(sum:cf.collector.router.requests{component:cloudcontroller,deployment:})', 'green_on_white') %>,
          "invert": false,
          "custom_fg_color": null
        }
      ],
      "is_valid_query": false,
      "res_calc_func": "raw",
      "aggr": "avg",
      "y": 18.99160893758138,
      "x": 35.90856643517812
    },
    {
      "metric": "",
      "height": 4,
      "query": "per_second(sum:cf.collector.router.requests{component:uaa,deployment:<%= deployment %>})",
      "text_size": "auto",
      "unit": "auto",
      "title_size": 20,
      "title": true,
      "aggregator": "avg",
      "title_align": "left",
      "text_align": "left",
      "width": 13,
      "timeframe": "5m",
      "type": "query_value",
      "tags": [

      ],
      "precision": 2,
      "title_text": "UAA Req/sec - 5min",
      "calc_func": "raw",
      "metric_type": "standard",
      "conditional_formats": [
        {
          "comparator": "<",
          "color": "red_on_white",
          "custom_bg_color": null,
          "value": <%= threshold_value('per_second(sum:cf.collector.router.requests{component:uaa,deployment:})', 'red_on_white') %>,
          "invert": false,
          "custom_fg_color": null
        },
        {
          "comparator": "<=",
          "color": "yellow_on_white",
          "custom_bg_color": null,
          "value": <%= threshold_value('per_second(sum:cf.collector.router.requests{component:uaa,deployment:})', 'yellow_on_white') %>,
          "invert": false,
          "custom_fg_color": null
        },
        {
          "comparator": ">",
          "color": "green_on_white",
          "custom_bg_color": null,
          "value": <%= threshold_value('per_second(sum:cf.collector.router.requests{component:uaa,deployment:})', 'green_on_white') %>,
          "invert": false,
          "custom_fg_color": null
        }
      ],
      "is_valid_query": false,
      "res_calc_func": "raw",
      "aggr": "avg",
      "y": 24.991321563720703,
      "x": 35.90856643517812
    },
    {
      "metric": "",
      "height": 4,
      "query": "per_second(sum:cf.collector.router.requests{component:app,deployment:<%= deployment %>})",
      "text_size": "auto",
      "unit": "auto",
      "title_size": 20,
      "title": true,
      "aggregator": "avg",
      "title_align": "left",
      "text_align": "left",
      "width": 13,
      "timeframe": "5m",
      "type": "query_value",
      "tags": [

      ],
      "precision": 1,
      "title_text": "DEA Req/sec - 5min",
      "calc_func": "raw",
      "metric_type": "standard",
      "conditional_formats": [
        {
          "comparator": "<",
          "color": "red_on_white",
          "custom_bg_color": null,
          "value": <%= threshold_value('per_second(sum:cf.collector.router.requests{component:app,deployment:})', 'red_on_white') %>,
          "invert": false,
          "custom_fg_color": null
        },
        {
          "comparator": "<=",
          "color": "yellow_on_white",
          "custom_bg_color": null,
          "value": <%= threshold_value('per_second(sum:cf.collector.router.requests{component:app,deployment:})', 'yellow_on_white') %>,
          "invert": false,
          "custom_fg_color": null
        },
        {
          "comparator": ">",
          "color": "green_on_white",
          "custom_bg_color": null,
          "value": <%= threshold_value('per_second(sum:cf.collector.router.requests{component:app,deployment:})', 'green_on_white') %>,
          "invert": false,
          "custom_fg_color": null
        }
      ],
      "is_valid_query": false,
      "res_calc_func": "raw",
      "aggr": "avg",
      "y": 12.989004770914713,
      "x": 35.90856643517812
    },
    {
      "metric": "",
      "height": 4,
      "query": "per_second(sum:cf.collector.router.requests{deployment:<%= deployment %>})",
      "text_size": "auto",
      "unit": "/s",
      "title_size": 20,
      "title": true,
      "aggregator": "avg",
      "title_align": "left",
      "text_align": "left",
      "width": 13,
      "timeframe": "5m",
      "type": "query_value",
      "tags": [

      ],
      "precision": 1,
      "title_text": "Router Req/sec - 5min",
      "calc_func": "raw",
      "metric_type": "standard",
      "conditional_formats": [
        {
          "comparator": "<",
          "color": "red_on_white",
          "custom_bg_color": null,
          "value": <%= threshold_value('per_second(sum:cf.collector.router.requests{deployment:})', 'red_on_white') %>,
          "invert": false,
          "custom_fg_color": null
        },
        {
          "comparator": "<=",
          "color": "yellow_on_white",
          "custom_bg_color": null,
          "value": <%= threshold_value('per_second(sum:cf.collector.router.requests{deployment:})', 'yellow_on_white') %>,
          "invert": false,
          "custom_fg_color": null
        },
        {
          "comparator": ">",
          "color": "green_on_white",
          "custom_bg_color": null,
          "value": <%= threshold_value('per_second(sum:cf.collector.router.requests{deployment:})', 'green_on_white') %>,
          "invert": false,
          "custom_fg_color": null
        }
      ],
      "is_valid_query": false,
      "res_calc_func": "raw",
      "aggr": "avg",
      "y": 6.9921875,
      "x": 35.90856643517812
    },
    {
      "title_size": 13,
      "title": true,
      "title_align": "left",
      "title_text": "Running Tasks and LRPs",
      "height": 12,
      "tile_def": {
        "viz": "timeseries",
        "requests": [
          {
            "q": "sum:datadog.nozzle.rep.ContainersExpected{deployment:<%= deployment %>-diego}",
            "type": "line"
          },
          {
            "q": "sum:datadog.nozzle.rep.ContainersActual{deployment:<%= deployment %>-diego}",
            "type": "line"
          },
          {
            "q": "avg:datadog.nozzle.bbs.LRPsDesired{deployment:<%= deployment %>-diego}",
            "type": "line"
          }
        ],
        "events": [
          {
            "q": "tags:deployment:<%= deployment %> started deploying diego to <%= deployment %>"
          }
        ]
      },
      "width": 28,
      "timeframe": "1h",
      "y": 58,
      "x": 123,
      "legend_size": "0",
      "type": "timeseries",
      "legend": false
    },
    {
      "title_size": 16,
      "title": true,
      "color": "#4d4d4d",
      "text": "Backend Health",
      "title_align": "left",
      "text_align": "left",
      "title_text": "",
      "height": 6,
      "width": 24,
      "y": 33,
      "x": 0,
      "font_size": "auto",
      "type": "free_text"
    },
    {
      "title_size": 16,
      "title": true,
      "title_align": "left",
      "title_text": "Total Routes - 2d",
      "height": 12,
      "tile_def": {
        "viz": "timeseries",
        "requests": [
          {
            "q": "sum:cf.collector.router.total_routes{deployment:<%= deployment %>} by {ip}",
            "stacked": false,
            "type": "area"
          }
        ],
        "events": [
          {
            "q": "tags:deployment:<%= environment %> start_deploy"
          }
        ]
      },
      "width": 28,
      "timeframe": "2d",
      "y": 6,
      "x": 174,
      "legend_size": "0",
      "type": "timeseries",
      "legend": false
    },
    {
      "title_size": 20,
      "title": true,
      "title_align": "left",
      "title_text": "Router Bad Gateways - 4h",
      "height": 12,
      "tile_def": {
        "viz": "timeseries",
        "requests": [
          {
            "q": "per_second(avg:cf.collector.router.bad_gateways{deployment:<%= deployment %>})"
          }
        ],
        "events": [
          {
            "q": "tags:deployment:<%= environment %> start_deploy"
          },
          {
            "q": "tags:deployment:<%= environment %> end_deploy"
          }
        ]
      },
      "width": 28,
      "timeframe": "4h",
      "y": 65,
      "x": 174,
      "legend_size": "0",
      "type": "timeseries",
      "legend": false
    },
    {
      "metric": "",
      "height": 6,
      "query": "avg:cloudops_tools.dea_monitor.reservable_stagers_aggregate{deployment:<%= deployment %>} *100",
      "text_size": "auto",
      "unit": "",
      "title_size": 16,
      "title": true,
      "aggregator": "avg",
      "title_align": "left",
      "text_align": "left",
      "width": 20,
      "timeframe": "15m",
      "type": "query_value",
      "tags": [

      ],
      "precision": 1,
      "title_text": "% of DEAs w/ >4GB Free RAM",
      "calc_func": "raw",
      "metric_type": "standard",
      "conditional_formats": [
        {
          "comparator": "<",
          "color": "white_on_red",
          "custom_bg_color": null,
          "value": <%= threshold_value('avg:cloudops_tools.dea_monitor.reservable_stagers_aggregate{deployment:} *100', 'white_on_red') %>,
          "invert": false,
          "custom_fg_color": null
        },
        {
          "comparator": "<=",
          "color": "white_on_yellow",
          "custom_bg_color": null,
          "value": <%= threshold_value('avg:cloudops_tools.dea_monitor.reservable_stagers_aggregate{deployment:} *100', 'white_on_yellow') %>,
          "invert": false,
          "custom_fg_color": null
        },
        {
          "comparator": ">=",
          "color": "white_on_green",
          "custom_bg_color": null,
          "value": <%= threshold_value('avg:cloudops_tools.dea_monitor.reservable_stagers_aggregate{deployment:} *100', 'white_on_green') %>,
          "invert": false,
          "custom_fg_color": null
        }
      ],
      "is_valid_query": false,
      "res_calc_func": "raw",
      "aggr": "avg",
      "y": 45,
      "x": 50
    },
    {
      "metric": "cloudops_tools.dea_monitor.additional_runners_needed",
      "height": 7,
      "query": "max:cloudops_tools.dea_monitor.additional_runners_needed{deployment:<%= deployment %>}",
      "text_size": "auto",
      "unit": "auto",
      "title_size": 16,
      "title": true,
      "aggregator": "max",
      "title_align": "left",
      "text_align": "center",
      "width": 20,
      "timeframe": "30m",
      "type": "query_value",
      "tags": [
        "deployment:<%= deployment %>"
      ],
      "precision": 0,
      "title_text": "Additional Runners Needed",
      "calc_func": "raw",
      "metric_type": "standard",
      "conditional_formats": [
        {
          "comparator": ">=",
          "color": "white_on_red",
          "custom_bg_color": null,
          "value": <%= threshold_value('max:cloudops_tools.dea_monitor.additional_runners_needed{deployment:}', 'white_on_red') %>,
          "invert": false,
          "custom_fg_color": null
        },
        {
          "comparator": ">=",
          "color": "white_on_yellow",
          "custom_bg_color": null,
          "value": <%= threshold_value('max:cloudops_tools.dea_monitor.additional_runners_needed{deployment:}', 'white_on_yellow') %>,
          "invert": false,
          "custom_fg_color": null
        },
        {
          "comparator": "<",
          "color": "white_on_green",
          "custom_bg_color": null,
          "value": <%= threshold_value('max:cloudops_tools.dea_monitor.additional_runners_needed{deployment:}', 'white_on_green') %>,
          "invert": false,
          "custom_fg_color": null
        }
      ],
      "is_valid_query": true,
      "res_calc_func": "raw",
      "aggr": "max",
      "y": 53,
      "x": 50
    },
    {
      "metric": "cloudops_tools.app_instance_monitor.router.dial.errors",
      "height": 5,
      "query": "avg:cloudops_tools.app_instance_monitor.router.dial.errors{domain:run.pivotal.io}",
      "text_size": "auto",
      "unit": "auto",
      "title_size": 16,
      "title": true,
      "aggregator": "avg",
      "title_align": "center",
      "text_align": "center",
      "width": 22,
      "timeframe": "15m",
      "type": "query_value",
      "tags": [
        "domain:run.pivotal.io"
      ],
      "precision": 0,
      "title_text": "CF dial Error",
      "calc_func": "raw",
      "metric_type": "standard",
      "conditional_formats": [
        {
          "color": "white_on_red",
          "invert": false,
          "value": <%= threshold_value('avg:cloudops_tools.app_instance_monitor.router.dial.errors{domain:run.pivotal.io}', 'white_on_red') %>,
          "comparator": ">"
        },
        {
          "color": "white_on_yellow",
          "invert": false,
          "value": <%= threshold_value('avg:cloudops_tools.app_instance_monitor.router.dial.errors{domain:run.pivotal.io}', 'white_on_yellow') %>,
          "comparator": ">="
        },
        {
          "color": "white_on_green",
          "invert": false,
          "value": <%= threshold_value('avg:cloudops_tools.app_instance_monitor.router.dial.errors{domain:run.pivotal.io}', 'white_on_green') %>,
          "comparator": "<"
        }
      ],
      "is_valid_query": true,
      "res_calc_func": "raw",
      "aggr": "avg",
      "y": 65,
      "x": 152
    },
    {
      "metric": "natbox.pingout.health",
      "height": 4.000000158945717,
      "query": "avg:natbox.pingout.health{*}",
      "text_size": "auto",
      "unit": "auto",
      "title_size": 16,
      "title": true,
      "aggregator": "avg",
      "title_align": "center",
      "text_align": "center",
      "width": 14,
      "timeframe": "5m",
      "type": "query_value",
      "tags": [

      ],
      "precision": 1,
      "title_text": "NAT Box - 5m",
      "calc_func": "raw",
      "metric_type": "standard",
      "conditional_formats": [
        {
          "color": "white_on_red",
          "invert": false,
          "value": <%= threshold_value('avg:natbox.pingout.health{*}', 'white_on_red') %>,
          "comparator": "<"
        },
        {
          "color": "white_on_green",
          "invert": false,
          "value": <%= threshold_value('avg:natbox.pingout.health{*}', 'white_on_green') %>,
          "comparator": ">="
        }
      ],
      "is_valid_query": true,
      "res_calc_func": "raw",
      "aggr": "avg",
      "y": 68,
      "x": 0
    },
    {
      "metric": "natbox.pingout.health",
      "height": 4.000000158945717,
      "query": "avg:natbox.pingout.health{*}",
      "text_size": "auto",
      "unit": "auto",
      "title_size": 16,
      "title": true,
      "aggregator": "avg",
      "title_align": "center",
      "text_align": "center",
      "width": 9,
      "timeframe": "1d",
      "type": "query_value",
      "tags": [

      ],
      "precision": 1,
      "title_text": "NAT box - 24h",
      "calc_func": "raw",
      "metric_type": "standard",
      "conditional_formats": [
        {
          "color": "white_on_red",
          "invert": false,
          "value": <%= threshold_value('avg:natbox.pingout.health{*}', 'white_on_red') %>,
          "comparator": "<"
        },
        {
          "color": "white_on_green",
          "invert": false,
          "value": <%= threshold_value('avg:natbox.pingout.health{*}', 'white_on_green') %>,
          "comparator": ">="
        }
      ],
      "is_valid_query": true,
      "res_calc_func": "raw",
      "aggr": "avg",
      "y": 68,
      "x": 14
    },
    {
      "metric": "new_relic.apdex.score",
      "height": 4,
      "query": "avg:new_relic.apdex.score{application:webconsole_production}",
      "text_size": "auto",
      "unit": "auto",
      "title_size": 16,
      "title": true,
      "aggregator": "avg",
      "title_align": "left",
      "text_align": "left",
      "width": 11,
      "timeframe": "15m",
      "type": "query_value",
      "tags": [
        "application:webconsole_production"
      ],
      "precision": 2,
      "title_text": "Apdex - 15m",
      "calc_func": "raw",
      "metric_type": "standard",
      "conditional_formats": [
        {
          "comparator": "<",
          "color": "white_on_red",
          "custom_bg_color": null,
          "value": <%= threshold_value('avg:new_relic.apdex.score{application:webconsole_production}', 'white_on_red') %>,
          "invert": false,
          "custom_fg_color": null
        },
        {
          "comparator": "<=",
          "color": "white_on_yellow",
          "custom_bg_color": null,
          "value": <%= threshold_value('avg:new_relic.apdex.score{application:webconsole_production}', 'white_on_yellow') %>,
          "invert": false,
          "custom_fg_color": null
        },
        {
          "comparator": "<",
          "color": "white_on_green",
          "custom_bg_color": null,
          "value": <%= threshold_value('avg:new_relic.apdex.score{application:webconsole_production}', 'white_on_green') %>,
          "invert": false,
          "custom_fg_color": null
        }
      ],
      "is_valid_query": true,
      "res_calc_func": "raw",
      "aggr": "avg",
      "y": 93,
      "x": 0
    },
    {
      "metric": "new_relic.errors.all.errors_per_minute",
      "height": 4,
      "query": "avg:new_relic.errors.all.errors_per_minute{application:webconsole_production}",
      "text_size": "auto",
      "unit": "auto",
      "title_size": 16,
      "title": true,
      "aggregator": "avg",
      "title_align": "left",
      "text_align": "left",
      "width": 11,
      "timeframe": "15m",
      "type": "query_value",
      "tags": [
        "application:webconsole_production"
      ],
      "precision": 2,
      "title_text": "Error Rate - 15m",
      "calc_func": "raw",
      "metric_type": "standard",
      "conditional_formats": [
        {
          "comparator": ">",
          "color": "white_on_red",
          "custom_bg_color": null,
          "value": <%= threshold_value('avg:new_relic.errors.all.errors_per_minute{application:webconsole_production}', 'white_on_red') %>,
          "invert": false,
          "custom_fg_color": null
        },
        {
          "comparator": "<=",
          "color": "white_on_green",
          "custom_bg_color": null,
          "value": <%= threshold_value('avg:new_relic.errors.all.errors_per_minute{application:webconsole_production}', 'white_on_green') %>,
          "invert": false,
          "custom_fg_color": null
        }
      ],
      "is_valid_query": true,
      "res_calc_func": "raw",
      "aggr": "avg",
      "y": 93,
      "x": 11
    },
    {
      "metric": "cloudops_tools.ssh_abuse_monitor.ssh.attempts",
      "height": 4,
      "query": "avg:cloudops_tools.ssh_abuse_monitor.ssh.attempts{*}",
      "text_size": "auto",
      "unit": "auto",
      "title_size": 16,
      "title": true,
      "aggregator": "min",
      "title_align": "left",
      "text_align": "center",
      "width": 23,
      "timeframe": "15m",
      "type": "query_value",
      "tags": [

      ],
      "precision": 0,
      "title_text": "SSH Attempts - 15m",
      "calc_func": "raw",
      "metric_type": "standard",
      "conditional_formats": [
        {
          "color": "white_on_red",
          "invert": false,
          "value": <%= threshold_value('avg:cloudops_tools.ssh_abuse_monitor.ssh.attempts{*}', 'white_on_red') %>,
          "comparator": ">"
        },
        {
          "color": "white_on_yellow",
          "invert": false,
          "value": <%= threshold_value('avg:cloudops_tools.ssh_abuse_monitor.ssh.attempts{*}', 'white_on_yellow') %>,
          "comparator": ">="
        },
        {
          "color": "white_on_green",
          "invert": false,
          "value": <%= threshold_value('avg:cloudops_tools.ssh_abuse_monitor.ssh.attempts{*}', 'white_on_green') %>,
          "comparator": "<"
        }
      ],
      "is_valid_query": true,
      "res_calc_func": "raw",
      "aggr": "avg",
      "y": 80,
      "x": 0
    },
    {
      "metric": "cloudops_tools.app_instance_monitor.router.dial.errors",
      "height": 5,
      "query": "avg:cloudops_tools.app_instance_monitor.router.dial.errors{cf_component:false}",
      "text_size": "auto",
      "unit": "auto",
      "title_size": 16,
      "title": true,
      "aggregator": "avg",
      "title_align": "center",
      "text_align": "center",
      "width": 22,
      "timeframe": "15m",
      "type": "query_value",
      "tags": [
        "cf_component:false"
      ],
      "precision": 0,
      "title_text": "Non-CF dial Error",
      "calc_func": "raw",
      "metric_type": "standard",
      "conditional_formats": [
        {
          "color": "white_on_yellow",
          "invert": false,
          "value": <%= threshold_value('avg:cloudops_tools.app_instance_monitor.router.dial.errors{cf_component:false}', 'white_on_yellow') %>,
          "comparator": ">"
        },
        {
          "color": "white_on_green",
          "invert": false,
          "value": <%= threshold_value('avg:cloudops_tools.app_instance_monitor.router.dial.errors{cf_component:false}', 'white_on_green') %>,
          "comparator": "<="
        }
      ],
      "is_valid_query": true,
      "res_calc_func": "raw",
      "aggr": "avg",
      "y": 72,
      "x": 152
    },
    {
      "metric": "",
      "height": 12,
      "query": "avg:cf.collector.HM9000.HM9000.NumberOfRunningInstances{deployment:<%= deployment %>}.rollup(avg,1800) - hour_before(avg:cf.collector.HM9000.HM9000.NumberOfRunningInstances{deployment:<%= deployment %>}.rollup(avg,1800))",
      "text_size": "auto",
      "unit": "",
      "title_size": 20,
      "title": true,
      "aggregator": "avg",
      "title_align": "center",
      "text_align": "center",
      "width": 22,
      "timeframe": "30m",
      "type": "query_value",
      "tags": [

      ],
      "precision": 0,
      "title_text": "DEA Running Instances Delta (hour)",
      "calc_func": "raw",
      "metric_type": "standard",
      "conditional_formats": [
        {
          "comparator": ">=",
          "color": "white_on_yellow",
          "custom_bg_color": null,
          "value": <%= threshold_value('avg:cf.collector.HM9000.HM9000.NumberOfRunningInstances{deployment:}.rollup(avg,1800) - hour_before(avg:cf.collector.HM9000.HM9000.NumberOfRunningInstances{deployment:}.rollup(avg,1800))', 'white_on_yellow') %>,
          "invert": false,
          "custom_fg_color": null
        },
        {
          "comparator": ">",
          "color": "white_on_green",
          "custom_bg_color": null,
          "value": <%= threshold_value('avg:cf.collector.HM9000.HM9000.NumberOfRunningInstances{deployment:}.rollup(avg,1800) - hour_before(avg:cf.collector.HM9000.HM9000.NumberOfRunningInstances{deployment:}.rollup(avg,1800))', 'white_on_green') %>,
          "invert": false,
          "custom_fg_color": null
        },
        {
          "comparator": "<",
          "color": "white_on_red",
          "custom_bg_color": null,
          "value": <%= threshold_value('avg:cf.collector.HM9000.HM9000.NumberOfRunningInstances{deployment:}.rollup(avg,1800) - hour_before(avg:cf.collector.HM9000.HM9000.NumberOfRunningInstances{deployment:}.rollup(avg,1800))', 'white_on_red') %>,
          "invert": false,
          "custom_fg_color": null
        }
      ],
      "is_valid_query": false,
      "res_calc_func": "raw",
      "aggr": "avg",
      "y": 6,
      "x": 152
    },
    {
      "metric": "",
      "height": 12,
      "query": "avg:cf.collector.HM9000.HM9000.NumberOfAppsWithAllInstancesReporting{deployment:<%= deployment %>}.rollup(avg,1800) - hour_before(avg:cf.collector.HM9000.HM9000.NumberOfAppsWithAllInstancesReporting{deployment:<%= deployment %>}.rollup(avg,1800))",
      "text_size": "auto",
      "unit": "",
      "title_size": 20,
      "title": true,
      "aggregator": "avg",
      "title_align": "right",
      "text_align": "center",
      "width": 22,
      "timeframe": "30m",
      "type": "query_value",
      "tags": [

      ],
      "precision": 0,
      "title_text": "DEA Applications Delta (hour)",
      "calc_func": "raw",
      "metric_type": "standard",
      "conditional_formats": [
        {
          "comparator": ">=",
          "color": "white_on_yellow",
          "custom_bg_color": null,
          "value": <%= threshold_value('avg:cf.collector.HM9000.HM9000.NumberOfAppsWithAllInstancesReporting{deployment:}.rollup(avg,1800) - hour_before(avg:cf.collector.HM9000.HM9000.NumberOfAppsWithAllInstancesReporting{deployment:}.rollup(avg,1800))', 'white_on_yellow') %>,
          "invert": false,
          "custom_fg_color": null
        },
        {
          "comparator": ">",
          "color": "white_on_green",
          "custom_bg_color": null,
          "value": <%= threshold_value('avg:cf.collector.HM9000.HM9000.NumberOfAppsWithAllInstancesReporting{deployment:}.rollup(avg,1800) - hour_before(avg:cf.collector.HM9000.HM9000.NumberOfAppsWithAllInstancesReporting{deployment:}.rollup(avg,1800))', 'white_on_green') %>,
          "invert": false,
          "custom_fg_color": null
        },
        {
          "comparator": "<",
          "color": "white_on_red",
          "custom_bg_color": null,
          "value": <%= threshold_value('avg:cf.collector.HM9000.HM9000.NumberOfAppsWithAllInstancesReporting{deployment:}.rollup(avg,1800) - hour_before(avg:cf.collector.HM9000.HM9000.NumberOfAppsWithAllInstancesReporting{deployment:}.rollup(avg,1800))', 'white_on_red') %>,
          "invert": false,
          "custom_fg_color": null
        }
      ],
      "is_valid_query": false,
      "res_calc_func": "raw",
      "aggr": "avg",
      "y": 20,
      "x": 152
    },
    {
      "metric": "cf.collector.mem_free_bytes",
      "height": 12.000000158945717,
      "query": "sum:cf.collector.mem_free_bytes{deployment:<%= deployment %>,job:dea}",
      "text_size": "auto",
      "unit": "auto",
      "title_size": 16,
      "title": true,
      "aggregator": "avg",
      "title_align": "left",
      "text_align": "left",
      "width": 21,
      "timeframe": "5m",
      "type": "query_value",
      "tags": [
        "deployment:<%= deployment %>",
        "job:dea"
      ],
      "precision": 2,
      "title_text": "Mem Free Bytes - 5m avg",
      "calc_func": "raw",
      "metric_type": "standard",
      "conditional_formats": [
        {
          "comparator": ">",
          "color": "white_on_green",
          "custom_bg_color": null,
          "value": <%= threshold_value('sum:cf.collector.mem_free_bytes{deployment:,job:dea}', 'white_on_green') %>,
          "invert": false,
          "custom_fg_color": null
        }
      ],
      "is_valid_query": true,
      "res_calc_func": "raw",
      "aggr": "sum",
      "y": 20.908565521240234,
      "x": 49.88860285282135
    },
    {
      "title_size": 16,
      "title": true,
      "title_align": "left",
      "title_text": "Mem Free Bytes - 1h",
      "height": 12.000000158945717,
      "tile_def": {
        "viz": "heatmap",
        "requests": [
          {
            "q": "avg:cf.collector.mem_free_bytes{deployment:<%= deployment %>,job:dea} by {index,job}",
            "type": "heatmap"
          }
        ],
        "events": [

        ]
      },
      "width": 28,
      "timeframe": "1h",
      "y": 20.908565521240234,
      "x": 70.97222610314687,
      "legend_size": "0",
      "type": "timeseries",
      "legend": false
    },
    {
      "title_size": 16,
      "title": true,
      "title_align": "left",
      "title_text": "Ephemeral Disk usage (%) - 1h",
      "height": 12,
      "tile_def": {
        "viz": "heatmap",
        "requests": [
          {
            "q": "max:bosh.healthmonitor.system.disk.ephemeral.percent{deployment:<%= deployment %>} by {job, index}",
            "type": "line"
          }
        ],
        "events": [

        ]
      },
      "width": 28,
      "timeframe": "1h",
      "y": 114,
      "x": 46,
      "legend_size": "0",
      "type": "timeseries",
      "legend": false
    },
    {
      "metric": "bosh.healthmonitor.system.disk.ephemeral.percent",
      "height": 7,
      "query": "max:bosh.healthmonitor.system.disk.ephemeral.percent{deployment:<%= deployment %>}",
      "text_size": "auto",
      "unit": "%",
      "title_size": 16,
      "title": true,
      "aggregator": "max",
      "title_align": "left",
      "text_align": "center",
      "width": 14,
      "timeframe": "1h",
      "type": "query_value",
      "tags": [
        "deployment:<%= deployment %>"
      ],
      "precision": 0,
      "title_text": "Top Ephemeral Disk usage (%) past hour",
      "calc_func": "raw",
      "metric_type": "standard",
      "conditional_formats": [
        {
          "comparator": ">",
          "color": "white_on_red",
          "custom_bg_color": null,
          "value": <%= threshold_value('max:bosh.healthmonitor.system.disk.ephemeral.percent{deployment:}', 'white_on_red') %>,
          "invert": false,
          "custom_fg_color": null
        },
        {
          "comparator": ">=",
          "color": "white_on_yellow",
          "custom_bg_color": null,
          "value": <%= threshold_value('max:bosh.healthmonitor.system.disk.ephemeral.percent{deployment:}', 'white_on_yellow') %>,
          "invert": false,
          "custom_fg_color": null
        },
        {
          "comparator": "<",
          "color": "white_on_green",
          "custom_bg_color": null,
          "value": <%= threshold_value('max:bosh.healthmonitor.system.disk.ephemeral.percent{deployment:}', 'white_on_green') %>,
          "invert": false,
          "custom_fg_color": null
        }
      ],
      "is_valid_query": true,
      "res_calc_func": "raw",
      "aggr": "max",
      "y": 105,
      "x": 47
    },
    {
      "metric": "bosh.healthmonitor.system.disk.persistent.percent",
      "height": 7,
      "query": "max:bosh.healthmonitor.system.disk.persistent.percent{deployment:<%= deployment %>}",
      "text_size": "auto",
      "unit": "%",
      "title_size": 16,
      "title": true,
      "aggregator": "max",
      "title_align": "left",
      "text_align": "center",
      "width": 13,
      "timeframe": "1h",
      "type": "query_value",
      "tags": [
        "deployment:<%= deployment %>"
      ],
      "precision": 0,
      "title_text": "Top Persistent Disk usage (%) past hour",
      "calc_func": "raw",
      "metric_type": "standard",
      "conditional_formats": [
        {
          "comparator": ">",
          "color": "white_on_red",
          "custom_bg_color": null,
          "value": <%= threshold_value('max:bosh.healthmonitor.system.disk.persistent.percent{deployment:}', 'white_on_red') %>,
          "invert": false,
          "custom_fg_color": null
        },
        {
          "comparator": ">=",
          "color": "white_on_yellow",
          "custom_bg_color": null,
          "value": <%= threshold_value('max:bosh.healthmonitor.system.disk.persistent.percent{deployment:}', 'white_on_yellow') %>,
          "invert": false,
          "custom_fg_color": null
        },
        {
          "comparator": "<",
          "color": "white_on_green",
          "custom_bg_color": null,
          "value": <%= threshold_value('max:bosh.healthmonitor.system.disk.persistent.percent{deployment:}', 'white_on_green') %>,
          "invert": false,
          "custom_fg_color": null
        }
      ],
      "is_valid_query": true,
      "res_calc_func": "raw",
      "aggr": "max",
      "y": 105,
      "x": 61
    },
    {
      "title_size": 16,
      "title": true,
      "title_align": "left",
      "title_text": "App Instances - 2d",
      "height": 12,
      "tile_def": {
        "viz": "timeseries",
        "requests": [
          {
            "q": "avg:cf.collector.HM9000.HM9000.NumberOfAppsWithAllInstancesReporting{deployment:<%= deployment %>}",
            "type": "line"
          }
        ]
      },
      "width": 28,
      "timeframe": "2d",
      "y": 20,
      "x": 174,
      "legend_size": "0",
      "type": "timeseries",
      "legend": false
    },
    {
      "title_size": 16,
      "title": true,
      "refresh_every": 30000,
      "tick_pos": "50%",
      "title_align": "left",
      "tick_edge": "left",
      "text_align": "center",
      "title_text": "",
      "height": 6,
      "bgcolor": "white",
      "html": "[Router Status](/dash/dash/<%= lookup_note_asset(environment + ' Router and ELB health metrics', :dashboard) %>)",
      "y": 0,
      "x": 158,
      "font_size": "36",
      "tick": false,
      "type": "note",
      "width": 44,
      "auto_refresh": false
    },
    {
      "title_size": 16,
      "title": true,
      "refresh_every": 30000,
      "tick_pos": "50%",
      "title_align": "left",
      "tick_edge": "left",
      "text_align": "center",
      "title_text": "",
      "height": 6,
      "bgcolor": "white",
      "html": "[Diego Status](/dash/dash/<%= lookup_note_asset(environment + ' Diego Health', :dashboard) %>)",
      "y": -0.0014470418294270833,
      "x": 100.9722311894099,
      "font_size": "36",
      "tick": false,
      "type": "note",
      "width": 49,
      "auto_refresh": false
    },
    {
      "title_size": 16,
      "title": true,
      "refresh_every": 30000,
      "tick_pos": "50%",
      "title_align": "left",
      "tick_edge": "left",
      "text_align": "center",
      "title_text": "",
      "height": 6,
      "bgcolor": "white",
      "html": "[DEA Status](/screen/board/<%= lookup_note_asset('dea-monitor', :screenboard) %>)",
      "y": 0,
      "x": 49.914644519488014,
      "font_size": "36",
      "tick": false,
      "type": "note",
      "width": 49.083333333333336,
      "auto_refresh": false
    },
    {
      "title_size": 16,
      "title": true,
      "refresh_every": 30000,
      "tick_pos": "50%",
      "title_align": "left",
      "tick_edge": "top",
      "text_align": "center",
      "title_text": "",
      "height": 5,
      "bgcolor": "white",
      "html": "[Router Dial Errors](/dash/dash/<%= lookup_note_asset('router dial error', :dashboard) %>)",
      "y": 60,
      "x": 152,
      "font_size": "24",
      "tick": false,
      "type": "note",
      "width": 50,
      "auto_refresh": false
    },
    {
      "metric": "pws.circuit.loggregator",
      "height": 4,
      "query": "avg:pws.circuit.loggregator{host:production}",
      "text_size": "auto",
      "unit": "auto",
      "title_size": 16,
      "title": true,
      "aggregator": "avg",
      "title_align": "left",
      "text_align": "left",
      "width": 22,
      "timeframe": "5m",
      "type": "query_value",
      "tags": [
        "host:production"
      ],
      "precision": 2,
      "title_text": "Console Loggregator Circuit",
      "calc_func": "raw",
      "metric_type": "standard",
      "conditional_formats": [
        {
          "color": "white_on_red",
          "invert": false,
          "value": <%= threshold_value('avg:pws.circuit.loggregator{host:production}', 'white_on_red') %>,
          "comparator": "<"
        },
        {
          "color": "white_on_green",
          "invert": false,
          "value": <%= threshold_value('avg:pws.circuit.loggregator{host:production}', 'white_on_green') %>,
          "comparator": ">="
        }
      ],
      "is_valid_query": true,
      "res_calc_func": "raw",
      "aggr": "avg",
      "y": 99,
      "x": 0
    },
    {
      "metric": "pws.circuit.cloud_controller_get",
      "height": 4,
      "query": "avg:pws.circuit.cloud_controller_get{host:production}",
      "text_size": "auto",
      "unit": "auto",
      "title_size": 16,
      "title": true,
      "aggregator": "avg",
      "title_align": "left",
      "text_align": "left",
      "width": 22,
      "timeframe": "5m",
      "type": "query_value",
      "tags": [
        "host:production"
      ],
      "precision": 2,
      "title_text": "CC GET Circuit",
      "calc_func": "raw",
      "metric_type": "standard",
      "conditional_formats": [
        {
          "color": "white_on_red",
          "invert": false,
          "value": <%= threshold_value('avg:pws.circuit.cloud_controller_get{host:production}', 'white_on_red') %>,
          "comparator": "<"
        },
        {
          "color": "white_on_green",
          "invert": false,
          "value": <%= threshold_value('avg:pws.circuit.cloud_controller_get{host:production}', 'white_on_green') %>,
          "comparator": ">="
        }
      ],
      "is_valid_query": true,
      "res_calc_func": "raw",
      "aggr": "avg",
      "y": 105,
      "x": 0
    },
    {
      "title_size": 16,
      "title": true,
      "refresh_every": 30000,
      "tick_pos": "50%",
      "title_align": "left",
      "tick_edge": "left",
      "text_align": "center",
      "title_text": "",
      "height": 6,
      "bgcolor": "white",
      "html": "[Console](/dash/dash/<%= lookup_note_asset('cloud_controller_ng Event Machine statistics', :dashboard) %>)",
      "y": 87,
      "x": 0,
      "font_size": "24",
      "tick": false,
      "type": "note",
      "width": 44,
      "auto_refresh": false
    },
    {
      "metric": "cf.collector.cc.requests.outstanding",
      "height": 10,
      "query": "max:cf.collector.cc.requests.outstanding{*}",
      "text_size": "auto",
      "unit": "auto",
      "title_size": 16,
      "title": true,
      "aggregator": "avg",
      "title_align": "left",
      "text_align": "center",
      "width": 22,
      "timeframe": "15m",
      "type": "query_value",
      "tags": [

      ],
      "precision": 2,
      "title_text": "Max Response Queue Size - 10m",
      "calc_func": "raw",
      "metric_type": "standard",
      "conditional_formats": [
        {
          "comparator": ">",
          "color": "white_on_red",
          "custom_bg_color": null,
          "value": <%= threshold_value('max:cf.collector.cc.requests.outstanding{*}', 'white_on_red') %>,
          "invert": false,
          "custom_fg_color": null
        },
        {
          "comparator": ">=",
          "color": "white_on_yellow",
          "custom_bg_color": null,
          "value": <%= threshold_value('max:cf.collector.cc.requests.outstanding{*}', 'white_on_yellow') %>,
          "invert": false,
          "custom_fg_color": null
        },
        {
          "comparator": "<",
          "color": "white_on_green",
          "custom_bg_color": null,
          "value": <%= threshold_value('max:cf.collector.cc.requests.outstanding{*}', 'white_on_green') %>,
          "invert": false,
          "custom_fg_color": null
        }
      ],
      "is_valid_query": true,
      "res_calc_func": "raw",
      "aggr": "max",
      "y": 93,
      "x": 22
    },
    {
      "metric": "",
      "height": 4,
      "query": "(avg:new_relic.application_summary.response_time{application:webconsole_production})/1000",
      "text_size": "auto",
      "unit": "s",
      "title_size": 16,
      "title": true,
      "aggregator": "max",
      "title_align": "center",
      "text_align": "center",
      "width": 22,
      "timeframe": "10m",
      "type": "query_value",
      "tags": [

      ],
      "precision": 3,
      "title_text": "Max Response Time Console - 10m",
      "calc_func": "raw",
      "metric_type": "standard",
      "conditional_formats": [
        {
          "color": "white_on_red",
          "invert": false,
          "value": <%= threshold_value('(avg:new_relic.application_summary.response_time{application:webconsole_production})/1000', 'white_on_red') %>,
          "comparator": ">"
        },
        {
          "color": "white_on_yellow",
          "invert": false,
          "value": <%= threshold_value('(avg:new_relic.application_summary.response_time{application:webconsole_production})/1000', 'white_on_yellow') %>,
          "comparator": ">="
        },
        {
          "color": "white_on_green",
          "invert": false,
          "value": <%= threshold_value('(avg:new_relic.application_summary.response_time{application:webconsole_production})/1000', 'white_on_green') %>,
          "comparator": "<"
        }
      ],
      "is_valid_query": false,
      "res_calc_func": "raw",
      "aggr": "avg",
      "y": 105,
      "x": 22
    },
    {
      "title_size": 13,
      "title": true,
      "title_align": "left",
      "title_text": "AWS Events",
      "height": 23,
      "width": 32,
      "query": "source:aws",
      "timeframe": "1d",
      "y": 108,
      "x": 151,
      "type": "event_stream",
      "event_size": "s"
    },
    {
      "title_size": 16,
      "title": true,
      "refresh_every": 30000,
      "tick_pos": "50%",
      "title_align": "left",
      "tick_edge": "left",
      "text_align": "center",
      "title_text": "",
      "height": 5.916666666666667,
      "bgcolor": "white",
      "html": "[DEA](/screen/board/<%= lookup_note_asset('dea-monitor', :screenboard) %>)",
      "y": 12.744503021240234,
      "x": -3.9736429998290155e-08,
      "font_size": "24",
      "tick": false,
      "type": "note",
      "width": 12,
      "auto_refresh": false
    },
    {
      "title_size": 16,
      "title": true,
      "refresh_every": 30000,
      "tick_pos": "50%",
      "title_align": "left",
      "tick_edge": "left",
      "text_align": "center",
      "title_text": "",
      "height": 5.833333333333333,
      "bgcolor": "white",
      "html": "[API](/dash/dash/<%= lookup_note_asset('cloud_controller_ng Event Machine statistics', :dashboard) %>)",
      "y": 18.912036895751953,
      "x": -0.33130792776743584,
      "font_size": "24",
      "tick": false,
      "type": "note",
      "width": 12.333333333333334,
      "auto_refresh": false
    },
    {
      "title_size": 16,
      "title": true,
      "refresh_every": 30000,
      "tick_pos": "50%",
      "title_align": "left",
      "tick_edge": "left",
      "text_align": "center",
      "title_text": "",
      "height": 5.916666666666667,
      "bgcolor": "white",
      "html": "[UAA](/dash/dash/<%= lookup_note_asset(environment + ' Router and ELB health metrics', :dashboard) %>)",
      "y": 24.745370229085285,
      "x": -3.9736429998290155e-08,
      "font_size": "24",
      "tick": false,
      "type": "note",
      "width": 12,
      "auto_refresh": false
    },
    {
      "title_size": 16,
      "title": true,
      "refresh_every": 30000,
      "tick_pos": "50%",
      "title_align": "left",
      "tick_edge": "left",
      "text_align": "center",
      "title_text": "",
      "height": 6,
      "bgcolor": "white",
      "html": "[Router](/dash/dash/<%= lookup_note_asset(environment + ' Router and ELB health metrics', :dashboard) %>)",
      "y": 6.744791666666667,
      "x": -3.9736429998290155e-08,
      "font_size": "24",
      "tick": false,
      "type": "note",
      "width": 12,
      "auto_refresh": false
    },
    {
      "title_size": 16,
      "title": true,
      "title_align": "left",
      "title_text": "Persistent Disk usage (%) - 1h",
      "height": 12.000000158945717,
      "tile_def": {
        "viz": "heatmap",
        "requests": [
          {
            "q": "max:bosh.healthmonitor.system.disk.persistent.percent{deployment:<%= deployment %>} by {job, index}",
            "type": "line"
          }
        ],
        "events": [

        ]
      },
      "width": 28,
      "timeframe": "1h",
      "y": 128,
      "x": 46,
      "legend_size": "0",
      "type": "timeseries",
      "legend": false
    },
    {
      "title_size": 16,
      "title": true,
      "title_align": "left",
      "title_text": "CPU Utilization (%) - 1h",
      "height": 12,
      "tile_def": {
        "viz": "heatmap",
        "requests": [
          {
            "q": "max:bosh.healthmonitor.system.cpu.user{deployment:<%= deployment %>} by {job,index}",
            "style": {
              "palette": "warm"
            },
            "type": "line"
          }
        ],
        "events": [

        ]
      },
      "width": 28,
      "timeframe": "1h",
      "y": 91,
      "x": 46,
      "legend_size": "0",
      "type": "timeseries",
      "legend": false
    },
    {
      "metric": "aws.ec2.status_check_failed",
      "height": 4,
      "query": "max:aws.ec2.status_check_failed{deployment:<%= deployment %>}",
      "text_size": "auto",
      "unit": "fail",
      "title_size": 16,
      "title": true,
      "aggregator": "max",
      "title_align": "left",
      "text_align": "center",
      "width": 18,
      "timeframe": "10m",
      "type": "query_value",
      "tags": [
        "deployment:<%= deployment %>"
      ],
      "precision": 0,
      "title_text": "",
      "calc_func": "raw",
      "metric_type": "standard",
      "conditional_formats": [
        {
          "comparator": ">",
          "color": "white_on_red",
          "custom_bg_color": null,
          "value": <%= threshold_value('max:aws.ec2.status_check_failed{deployment:}', 'white_on_red') %>,
          "invert": false,
          "custom_fg_color": null
        },
        {
          "comparator": "<=",
          "color": "white_on_green",
          "custom_bg_color": null,
          "value": <%= threshold_value('max:aws.ec2.status_check_failed{deployment:}', 'white_on_green') %>,
          "invert": false,
          "custom_fg_color": null
        }
      ],
      "is_valid_query": true,
      "res_calc_func": "raw",
      "aggr": "max",
      "y": 109,
      "x": 183
    },
    {
      "title_size": 16,
      "title": true,
      "refresh_every": 30000,
      "tick_pos": "50%",
      "title_align": "left",
      "tick_edge": "left",
      "text_align": "center",
      "title_text": "",
      "height": 6,
      "bgcolor": "white",
      "html": "[AWS](/screen/board/<%= lookup_note_asset('AWS', :screenboard) %>)",
      "y": 102,
      "x": 151,
      "font_size": "24",
      "tick": false,
      "type": "note",
      "width": 50,
      "auto_refresh": false
    },
    {
      "metric": "cloudops_tools.failed_stages.counts_per_5min",
      "height": 6,
      "query": "avg:cloudops_tools.failed_stages.counts_per_5min{deployment:<%= deployment %>}",
      "text_size": "auto",
      "unit": "auto",
      "title_size": 16,
      "title": true,
      "aggregator": "max",
      "title_align": "center",
      "text_align": "center",
      "width": 18,
      "timeframe": "5m",
      "type": "query_value",
      "tags": [
        "deployment:<%= deployment %>"
      ],
      "precision": 0,
      "title_text": "App Staging Failures",
      "calc_func": "raw",
      "metric_type": "standard",
      "conditional_formats": [
        {
          "comparator": "<=",
          "color": "white_on_green",
          "custom_bg_color": null,
          "value": <%= threshold_value('avg:cloudops_tools.failed_stages.counts_per_5min{deployment:}', 'white_on_green') %>,
          "invert": false,
          "custom_fg_color": null
        },
        {
          "comparator": ">",
          "color": "white_on_yellow",
          "custom_bg_color": null,
          "value": <%= threshold_value('avg:cloudops_tools.failed_stages.counts_per_5min{deployment:}', 'white_on_yellow') %>,
          "invert": false,
          "custom_fg_color": null
        },
        {
          "comparator": ">",
          "color": "white_on_red",
          "custom_bg_color": null,
          "value": <%= threshold_value('avg:cloudops_tools.failed_stages.counts_per_5min{deployment:}', 'white_on_red') %>,
          "invert": false,
          "custom_fg_color": null
        }
      ],
      "is_valid_query": true,
      "res_calc_func": "raw",
      "aggr": "avg",
      "y": 45,
      "x": 70
    },
    {
      "metric": "",
      "height": 7,
      "query": "avg:cloudops_tools.stages.counts_per_5min{deployment:<%= deployment %>}.rollup(sum,3600)",
      "text_size": "auto",
      "unit": "auto",
      "title_size": 16,
      "title": true,
      "aggregator": "avg",
      "title_align": "center",
      "text_align": "center",
      "width": 18,
      "timeframe": "15m",
      "type": "query_value",
      "tags": [

      ],
      "precision": 0,
      "title_text": "Stage/Hour (avg 15min)",
      "calc_func": "raw",
      "metric_type": "standard",
      "conditional_formats": [
        {
          "comparator": "<=",
          "color": "white_on_yellow",
          "custom_bg_color": null,
          "value": <%= threshold_value('avg:cloudops_tools.stages.counts_per_5min{deployment:}.rollup(sum,3600)', 'white_on_yellow') %>,
          "invert": false,
          "custom_fg_color": null
        },
        {
          "comparator": ">",
          "color": "white_on_green",
          "custom_bg_color": null,
          "value": <%= threshold_value('avg:cloudops_tools.stages.counts_per_5min{deployment:}.rollup(sum,3600)', 'white_on_green') %>,
          "invert": false,
          "custom_fg_color": null
        }
      ],
      "is_valid_query": false,
      "res_calc_func": "raw",
      "aggr": "avg",
      "y": 53,
      "x": 70
    },
    {
      "metric": "",
      "height": 6,
      "query": "(((datadog.nozzle.bbs.LRPsDesired{deployment:<%= deployment %>-diego} - datadog.nozzle.bbs.LRPsRunning{deployment:<%= deployment %>-diego}) -datadog.nozzle.bbs.LRPsStarting{deployment:<%= deployment %>-diego}) -datadog.nozzle.bbs.CrashedActualLRPs{deployment:<%= deployment %>-diego})",
      "text_size": "auto",
      "unit": "/5m",
      "title_size": 13,
      "title": true,
      "aggregator": "max",
      "title_align": "center",
      "text_align": "center",
      "width": 21,
      "timeframe": "5m",
      "type": "query_value",
      "tags": [

      ],
      "precision": 0,
      "title_text": "Missing LRPs - 5m max",
      "calc_func": "raw",
      "metric_type": "standard",
      "conditional_formats": [
        {
          "comparator": ">",
          "color": "white_on_red",
          "custom_bg_color": null,
          "value": <%= threshold_value('(((datadog.nozzle.bbs.LRPsDesired{deployment:} - datadog.nozzle.bbs.LRPsRunning{deployment:}) -datadog.nozzle.bbs.LRPsStarting{deployment:}) -datadog.nozzle.bbs.CrashedActualLRPs{deployment:})', 'white_on_red') %>,
          "invert": false,
          "custom_fg_color": null
        },
        {
          "comparator": ">=",
          "color": "white_on_yellow",
          "custom_bg_color": null,
          "value": <%= threshold_value('(((datadog.nozzle.bbs.LRPsDesired{deployment:} - datadog.nozzle.bbs.LRPsRunning{deployment:}) -datadog.nozzle.bbs.LRPsStarting{deployment:}) -datadog.nozzle.bbs.CrashedActualLRPs{deployment:})', 'white_on_yellow') %>,
          "invert": false,
          "custom_fg_color": null
        },
        {
          "comparator": "<",
          "color": "white_on_green",
          "custom_bg_color": null,
          "value": <%= threshold_value('(((datadog.nozzle.bbs.LRPsDesired{deployment:} - datadog.nozzle.bbs.LRPsRunning{deployment:}) -datadog.nozzle.bbs.LRPsStarting{deployment:}) -datadog.nozzle.bbs.CrashedActualLRPs{deployment:})', 'white_on_green') %>,
          "invert": false,
          "custom_fg_color": null
        }
      ],
      "is_valid_query": false,
      "res_calc_func": "raw",
      "aggr": "avg",
      "y": 22,
      "x": 101.00000338753064
    },
    {
      "metric": "diego.canary.app.instance",
      "height": 6,
      "query": "sum:diego.canary.app.instance{deployment:<%= deployment %>-diego}",
      "text_size": "auto",
      "unit": "auto",
      "title_size": 13,
      "title": true,
      "aggregator": "avg",
      "title_align": "center",
      "text_align": "center",
      "width": 21,
      "timeframe": "15m",
      "type": "query_value",
      "tags": [
        "deployment:<%= deployment %>-diego"
      ],
      "precision": 0,
      "title_text": "Diego Canaries - 15m avg",
      "calc_func": "raw",
      "metric_type": "standard",
      "conditional_formats": [
        {
          "comparator": "<",
          "color": "white_on_red",
          "custom_bg_color": null,
          "value": <%= threshold_value('sum:diego.canary.app.instance{deployment:}', 'white_on_red') %>,
          "invert": false,
          "custom_fg_color": null
        },
        {
          "comparator": "<=",
          "color": "white_on_yellow",
          "custom_bg_color": null,
          "value": <%= threshold_value('sum:diego.canary.app.instance{deployment:}', 'white_on_yellow') %>,
          "invert": false,
          "custom_fg_color": null
        },
        {
          "comparator": ">=",
          "color": "white_on_green",
          "custom_bg_color": null,
          "value": <%= threshold_value('sum:diego.canary.app.instance{deployment:}', 'white_on_green') %>,
          "invert": false,
          "custom_fg_color": null
        }
      ],
      "is_valid_query": true,
      "res_calc_func": "raw",
      "aggr": "sum",
      "y": 83,
      "x": 102
    },
    {
      "metric": "datadog.nozzle.bbs.Domain.cf_apps",
      "height": 6,
      "query": "avg:datadog.nozzle.bbs.Domain.cf_apps{deployment:<%= deployment %>-diego}",
      "text_size": "auto",
      "unit": "/5m",
      "title_size": 13,
      "title": true,
      "aggregator": "avg",
      "title_align": "center",
      "text_align": "center",
      "width": 21,
      "timeframe": "5m",
      "type": "query_value",
      "tags": [
        "deployment:<%= deployment %>"
      ],
      "precision": "*",
      "title_text": "Domain 'cf-apps' Freshness - 5m avg",
      "calc_func": "raw",
      "metric_type": "standard",
      "conditional_formats": [
        {
          "comparator": "<",
          "color": "white_on_red",
          "custom_bg_color": null,
          "value": <%= threshold_value('avg:datadog.nozzle.bbs.Domain.cf_apps{deployment:}', 'white_on_red') %>,
          "invert": false,
          "custom_fg_color": null
        },
        {
          "comparator": "<=",
          "color": "white_on_yellow",
          "custom_bg_color": null,
          "value": <%= threshold_value('avg:datadog.nozzle.bbs.Domain.cf_apps{deployment:}', 'white_on_yellow') %>,
          "invert": false,
          "custom_fg_color": null
        },
        {
          "comparator": ">=",
          "color": "white_on_green",
          "custom_bg_color": null,
          "value": <%= threshold_value('avg:datadog.nozzle.bbs.Domain.cf_apps{deployment:}', 'white_on_green') %>,
          "invert": false,
          "custom_fg_color": null
        }
      ],
      "is_valid_query": true,
      "res_calc_func": "raw",
      "aggr": "avg",
      "y": 30,
      "x": 101.00000338753064
    },
    {
      "metric": "",
      "height": 6,
      "query": "max:datadog.nozzle.nsync_bulker.DesiredLRPSyncDuration{deployment:<%= deployment %>-diego}/1000000000\n",
      "text_size": "auto",
      "unit": "s",
      "title_size": 13,
      "title": true,
      "aggregator": "max",
      "title_align": "center",
      "text_align": "center",
      "width": 21,
      "timeframe": "5m",
      "type": "query_value",
      "tags": [

      ],
      "precision": 2,
      "title_text": "NSYNC Bulker Time - 5m max",
      "calc_func": "raw",
      "metric_type": "standard",
      "conditional_formats": [
        {
          "comparator": ">",
          "color": "white_on_red",
          "custom_bg_color": null,
          "value": <%= threshold_value('max:datadog.nozzle.nsync_bulker.DesiredLRPSyncDuration{deployment:}/1000000000', 'white_on_red') %>,
          "invert": false,
          "custom_fg_color": null
        },
        {
          "comparator": ">=",
          "color": "white_on_yellow",
          "custom_bg_color": null,
          "value": <%= threshold_value('max:datadog.nozzle.nsync_bulker.DesiredLRPSyncDuration{deployment:}/1000000000', 'white_on_yellow') %>,
          "invert": false,
          "custom_fg_color": null
        },
        {
          "comparator": "<",
          "color": "white_on_green",
          "custom_bg_color": null,
          "value": <%= threshold_value('max:datadog.nozzle.nsync_bulker.DesiredLRPSyncDuration{deployment:}/1000000000', 'white_on_green') %>,
          "invert": false,
          "custom_fg_color": null
        }
      ],
      "is_valid_query": false,
      "res_calc_func": "raw",
      "aggr": "avg",
      "y": 40,
      "x": 101
    },
    {
      "title_size": 13,
      "title": true,
      "title_align": "center",
      "title_text": "ETCD Raft Term",
      "height": 12,
      "tile_def": {
        "viz": "timeseries",
        "requests": [
          {
            "q": "avg:datadog.nozzle.bbs.ETCDRaftTerm{deployment:<%= deployment %>-diego}"
          }
        ],
        "events": [
          {
            "q": "tags:deployment:<%= deployment %>-diego started deploying diego to <%= deployment %>"
          }
        ]
      },
      "width": 28,
      "timeframe": "1h",
      "y": 20,
      "x": 122,
      "legend_size": "0",
      "type": "timeseries",
      "legend": false
    },
    {
      "metric": "",
      "height": 6,
      "query": "per_minute(avg:datadog.nozzle.auctioneer.AuctioneerLRPAuctionsFailed{deployment:<%= deployment %>-diego})",
      "text_size": "auto",
      "unit": "/m",
      "title_size": 13,
      "title": true,
      "aggregator": "avg",
      "title_align": "center",
      "text_align": "center",
      "width": 21,
      "timeframe": "30m",
      "type": "query_value",
      "tags": [

      ],
      "precision": 1,
      "title_text": "LRP Auction Failures per Minute - 30m avg",
      "calc_func": "raw",
      "metric_type": "standard",
      "conditional_formats": [
        {
          "comparator": ">",
          "color": "white_on_red",
          "custom_bg_color": null,
          "value": <%= threshold_value('per_minute(avg:datadog.nozzle.auctioneer.AuctioneerLRPAuctionsFailed{deployment:})', 'white_on_red') %>,
          "invert": false,
          "custom_fg_color": null
        },
        {
          "comparator": ">=",
          "color": "white_on_yellow",
          "custom_bg_color": null,
          "value": <%= threshold_value('per_minute(avg:datadog.nozzle.auctioneer.AuctioneerLRPAuctionsFailed{deployment:})', 'white_on_yellow') %>,
          "invert": false,
          "custom_fg_color": null
        },
        {
          "comparator": "<",
          "color": "white_on_green",
          "custom_bg_color": null,
          "value": <%= threshold_value('per_minute(avg:datadog.nozzle.auctioneer.AuctioneerLRPAuctionsFailed{deployment:})', 'white_on_green') %>,
          "invert": false,
          "custom_fg_color": null
        }
      ],
      "is_valid_query": false,
      "res_calc_func": "raw",
      "aggr": "avg",
      "y": 58,
      "x": 102
    },
    {
      "metric": "system.load.1",
      "height": 6,
      "query": "per_hour(datadog.nozzle.auctioneer.AuctioneerLRPAuctionsStarted{deployment:<%= deployment %>-diego})",
      "text_size": "auto",
      "unit": "/Hr",
      "title_size": 13,
      "title": true,
      "aggregator": "avg",
      "title_align": "center",
      "text_align": "center",
      "width": 21,
      "timeframe": "30m",
      "type": "query_value",
      "tags": [

      ],
      "precision": 2,
      "title_text": "LRP Auctions per Hour - 30m avg",
      "calc_func": "raw",
      "metric_type": "standard",
      "conditional_formats": [
        {
          "comparator": ">=",
          "color": "white_on_green",
          "custom_bg_color": null,
          "value": <%= threshold_value('per_hour(datadog.nozzle.auctioneer.AuctioneerLRPAuctionsStarted{deployment:})', 'white_on_green') %>,
          "invert": false,
          "custom_fg_color": null
        }
      ],
      "is_valid_query": false,
      "res_calc_func": "raw",
      "aggr": "avg",
      "y": 67,
      "x": 102
    },
    {
      "metric": "",
      "height": 6,
      "query": "max:datadog.nozzle.auctioneer.AuctioneerFetchStatesDuration{deployment:<%= deployment %>-diego}/1000000000",
      "text_size": "auto",
      "unit": "s",
      "title_size": 13,
      "title": true,
      "aggregator": "avg",
      "title_align": "center",
      "text_align": "left",
      "width": 21,
      "timeframe": "30m",
      "type": "query_value",
      "tags": [

      ],
      "precision": 2,
      "title_text": "Max. Fetch Cell State Times - 30m avg",
      "calc_func": "raw",
      "metric_type": "standard",
      "conditional_formats": [
        {
          "comparator": ">",
          "color": "white_on_red",
          "custom_bg_color": null,
          "value": <%= threshold_value('max:datadog.nozzle.auctioneer.AuctioneerFetchStatesDuration{deployment:}/1000000000', 'white_on_red') %>,
          "invert": false,
          "custom_fg_color": null
        },
        {
          "comparator": ">=",
          "color": "white_on_yellow",
          "custom_bg_color": null,
          "value": <%= threshold_value('max:datadog.nozzle.auctioneer.AuctioneerFetchStatesDuration{deployment:}/1000000000', 'white_on_yellow') %>,
          "invert": false,
          "custom_fg_color": null
        },
        {
          "comparator": "<",
          "color": "white_on_green",
          "custom_bg_color": null,
          "value": <%= threshold_value('max:datadog.nozzle.auctioneer.AuctioneerFetchStatesDuration{deployment:}/1000000000', 'white_on_green') %>,
          "invert": false,
          "custom_fg_color": null
        }
      ],
      "is_valid_query": false,
      "res_calc_func": "raw",
      "aggr": "avg",
      "y": 75,
      "x": 102
    },
    {
      "title_size": 16,
      "title": true,
      "refresh_every": 30000,
      "tick_pos": "50%",
      "title_align": "left",
      "tick_edge": "top",
      "text_align": "center",
      "title_text": "",
      "height": 5,
      "bgcolor": "white",
      "html": "Router CPU",
      "y": 80,
      "x": 152,
      "font_size": "24",
      "tick": false,
      "type": "note",
      "width": 50,
      "auto_refresh": false
    },
    {
      "title_size": 16,
      "title": true,
      "title_align": "left",
      "title_text": "Router CPU (%) -1h",
      "height": 14,
      "tile_def": {
        "viz": "timeseries",
        "requests": [
          {
            "q": "bosh.healthmonitor.system.cpu.user{deployment:<%= deployment %>,job:router_z1}+bosh.healthmonitor.system.cpu.sys{deployment:<%= deployment %>,job:router_z1}+bosh.healthmonitor.system.cpu.wait{deployment:<%= deployment %>,job:router_z1} by {index}",
            "style": {
              "palette": "dog_classic"
            },
            "type": "line"
          },
          {
            "q": "bosh.healthmonitor.system.cpu.user{deployment:<%= deployment %>,job:router_z2}+bosh.healthmonitor.system.cpu.sys{deployment:<%= deployment %>,job:router_z2}+bosh.healthmonitor.system.cpu.wait{deployment:<%= deployment %>,job:router_z2} by {index}",
            "style": {
              "palette": "dog_classic"
            },
            "type": "line"
          }
        ],
        "events": [

        ]
      },
      "width": 50,
      "timeframe": "1h",
      "y": 85,
      "x": 152,
      "legend_size": "0",
      "type": "timeseries",
      "legend": false
    },
    {
      "metric": "",
      "height": 4,
      "query": "( (avg:bosh.healthmonitor.system.healthy{deployment:<%= deployment %>,job:etcd_z1}.rollup(avg,60)) + (avg:bosh.healthmonitor.system.healthy{deployment:<%= deployment %>,job:etcd_z2}.rollup(avg,60)) ) *50",
      "text_size": "auto",
      "unit": "%",
      "title_size": 16,
      "title": true,
      "aggregator": "min",
      "title_align": "center",
      "text_align": "center",
      "width": 14,
      "timeframe": "5m",
      "type": "query_value",
      "tags": [

      ],
      "precision": 0,
      "title_text": "ETCD - 5m",
      "calc_func": "raw",
      "metric_type": "standard",
      "conditional_formats": [
        {
          "comparator": "<",
          "color": "white_on_red",
          "custom_bg_color": null,
          "value": <%= threshold_value('( (avg:bosh.healthmonitor.system.healthy{deployment:,job:etcd_z1}.rollup(avg,60)) + (avg:bosh.healthmonitor.system.healthy{deployment:,job:etcd_z2}.rollup(avg,60)) ) *50', 'white_on_red') %>,
          "invert": false,
          "custom_fg_color": null
        },
        {
          "comparator": "<",
          "color": "white_on_yellow",
          "custom_bg_color": null,
          "value": <%= threshold_value('( (avg:bosh.healthmonitor.system.healthy{deployment:,job:etcd_z1}.rollup(avg,60)) + (avg:bosh.healthmonitor.system.healthy{deployment:,job:etcd_z2}.rollup(avg,60)) ) *50', 'white_on_yellow') %>,
          "invert": false,
          "custom_fg_color": null
        },
        {
          "comparator": ">=",
          "color": "white_on_green",
          "custom_bg_color": null,
          "value": <%= threshold_value('( (avg:bosh.healthmonitor.system.healthy{deployment:,job:etcd_z1}.rollup(avg,60)) + (avg:bosh.healthmonitor.system.healthy{deployment:,job:etcd_z2}.rollup(avg,60)) ) *50', 'white_on_green') %>,
          "invert": false,
          "custom_fg_color": null
        }
      ],
      "is_valid_query": false,
      "res_calc_func": "raw",
      "aggr": "avg",
      "y": 74,
      "x": 0
    },
    {
      "metric": "",
      "height": 4,
      "query": "( (avg:bosh.healthmonitor.system.healthy{deployment:<%= deployment %>,job:etcd_z1}.rollup(avg,60)) + (avg:bosh.healthmonitor.system.healthy{deployment:<%= deployment %>,job:etcd_z2}.rollup(avg,60)) ) *50",
      "text_size": "auto",
      "unit": "%",
      "title_size": 16,
      "title": true,
      "aggregator": "min",
      "title_align": "center",
      "text_align": "center",
      "width": 9,
      "timeframe": "1d",
      "type": "query_value",
      "tags": [

      ],
      "precision": 0,
      "title_text": "ETCD - 24h",
      "calc_func": "raw",
      "metric_type": "standard",
      "conditional_formats": [
        {
          "comparator": "<",
          "color": "white_on_yellow",
          "custom_bg_color": null,
          "value": <%= threshold_value('( (avg:bosh.healthmonitor.system.healthy{deployment:,job:etcd_z1}.rollup(avg,60)) + (avg:bosh.healthmonitor.system.healthy{deployment:,job:etcd_z2}.rollup(avg,60)) ) *50', 'white_on_yellow') %>,
          "invert": false,
          "custom_fg_color": null
        },
        {
          "comparator": ">=",
          "color": "white_on_green",
          "custom_bg_color": null,
          "value": <%= threshold_value('( (avg:bosh.healthmonitor.system.healthy{deployment:,job:etcd_z1}.rollup(avg,60)) + (avg:bosh.healthmonitor.system.healthy{deployment:,job:etcd_z2}.rollup(avg,60)) ) *50', 'white_on_green') %>,
          "invert": false,
          "custom_fg_color": null
        }
      ],
      "is_valid_query": false,
      "res_calc_func": "raw",
      "aggr": "avg",
      "y": 74,
      "x": 14
    },
    {
      "metric": "smoke.status",
      "height": 6,
      "query": "avg:smoke.status{deployment:<%= deployment %>,loggregator_enabled:1}",
      "text_size": "auto",
      "unit": "auto",
      "title_size": 16,
      "title": true,
      "aggregator": "avg",
      "title_align": "left",
      "text_align": "left",
      "width": 15,
      "timeframe": "30m",
      "type": "query_value",
      "tags": [
        "deployment:<%= deployment %>",
        "loggregator_enabled:1"
      ],
      "precision": 2,
      "title_text": "Loggregator smoke test",
      "calc_func": "raw",
      "metric_type": "standard",
      "conditional_formats": [
        {
          "comparator": ">=",
          "color": "white_on_green",
          "custom_bg_color": null,
          "value": <%= threshold_value('avg:smoke.status{deployment:,loggregator_enabled:1}', 'white_on_green') %>,
          "invert": false,
          "custom_fg_color": null
        },
        {
          "comparator": "<",
          "color": "white_on_red",
          "custom_bg_color": null,
          "value": <%= threshold_value('avg:smoke.status{deployment:,loggregator_enabled:1}', 'white_on_red') %>,
          "invert": false,
          "custom_fg_color": null
        },
        {
          "comparator": ">=",
          "color": "white_on_yellow",
          "custom_bg_color": null,
          "value": <%= threshold_value('avg:smoke.status{deployment:,loggregator_enabled:1}', 'white_on_yellow') %>,
          "invert": false,
          "custom_fg_color": null
        }
      ],
      "is_valid_query": true,
      "res_calc_func": "raw",
      "aggr": "avg",
      "y": 117,
      "x": 0
    },
    {
      "title_size": 16,
      "title": true,
      "color": "#4d4d4d",
      "text": "Smoke Tests",
      "title_align": "left",
      "text_align": "left",
      "title_text": "",
      "height": 5,
      "width": 24,
      "y": 112,
      "x": 0,
      "font_size": "auto",
      "type": "free_text"
    },
    {
      "metric": "smoke.status",
      "height": 6,
      "query": "avg:smoke.status{deployment:<%= deployment %>,loggregator_enabled:0}",
      "text_size": "auto",
      "unit": "auto",
      "title_size": 16,
      "title": true,
      "aggregator": "avg",
      "title_align": "left",
      "text_align": "left",
      "width": 15,
      "timeframe": "30m",
      "type": "query_value",
      "tags": [
        "deployment:<%= deployment %>",
        "loggregator_enabled:0"
      ],
      "precision": 2,
      "title_text": "Runtime smoke test",
      "calc_func": "raw",
      "metric_type": "standard",
      "conditional_formats": [
        {
          "comparator": ">=",
          "color": "white_on_green",
          "custom_bg_color": null,
          "value": <%= threshold_value('avg:smoke.status{deployment:,loggregator_enabled:0}', 'white_on_green') %>,
          "invert": false,
          "custom_fg_color": null
        },
        {
          "comparator": "<",
          "color": "white_on_red",
          "custom_bg_color": null,
          "value": <%= threshold_value('avg:smoke.status{deployment:,loggregator_enabled:0}', 'white_on_red') %>,
          "invert": false,
          "custom_fg_color": null
        },
        {
          "comparator": ">=",
          "color": "white_on_yellow",
          "custom_bg_color": null,
          "value": <%= threshold_value('avg:smoke.status{deployment:,loggregator_enabled:0}', 'white_on_yellow') %>,
          "invert": false,
          "custom_fg_color": null
        }
      ],
      "is_valid_query": true,
      "res_calc_func": "raw",
      "aggr": "avg",
      "y": 117,
      "x": 15
    },
    {
      "metric": "",
      "height": 4,
      "query": "( (avg:bosh.healthmonitor.system.healthy{deployment:<%= deployment %>-diego,job:access_z1}.rollup(avg,60)) + (avg:bosh.healthmonitor.system.healthy{deployment:<%= deployment %>-diego,job:access_z2}.rollup(avg,60)) ) *50",
      "text_size": "auto",
      "unit": "%",
      "title_size": 16,
      "title": true,
      "aggregator": "min",
      "title_align": "center",
      "text_align": "center",
      "width": 14,
      "timeframe": "5m",
      "type": "query_value",
      "tags": [

      ],
      "precision": 0,
      "title_text": "Access - 5m",
      "calc_func": "raw",
      "metric_type": "standard",
      "conditional_formats": [
        {
          "comparator": "<",
          "color": "white_on_red",
          "custom_bg_color": null,
          "value": <%= threshold_value('( (avg:bosh.healthmonitor.system.healthy{deployment:,job:access_z1}.rollup(avg,60)) + (avg:bosh.healthmonitor.system.healthy{deployment:,job:access_z2}.rollup(avg,60)) ) *50', 'white_on_red') %>,
          "invert": false,
          "custom_fg_color": null
        },
        {
          "comparator": ">=",
          "color": "white_on_green",
          "custom_bg_color": null,
          "value": <%= threshold_value('( (avg:bosh.healthmonitor.system.healthy{deployment:,job:access_z1}.rollup(avg,60)) + (avg:bosh.healthmonitor.system.healthy{deployment:,job:access_z2}.rollup(avg,60)) ) *50', 'white_on_green') %>,
          "invert": false,
          "custom_fg_color": null
        }
      ],
      "is_valid_query": false,
      "res_calc_func": "raw",
      "aggr": "avg",
      "y": 105,
      "x": 102
    },
    {
      "metric": "",
      "height": 4,
      "query": "( (avg:bosh.healthmonitor.system.healthy{deployment:<%= deployment %>-diego,job:brain_z1}.rollup(avg,60)) + (avg:bosh.healthmonitor.system.healthy{deployment:<%= deployment %>-diego,job:brain_z2}.rollup(avg,60)) ) *50",
      "text_size": "auto",
      "unit": "%",
      "title_size": 16,
      "title": true,
      "aggregator": "min",
      "title_align": "center",
      "text_align": "center",
      "width": 14,
      "timeframe": "5m",
      "type": "query_value",
      "tags": [

      ],
      "precision": 0,
      "title_text": "Brain - 5m",
      "calc_func": "raw",
      "metric_type": "standard",
      "conditional_formats": [
        {
          "comparator": "<",
          "color": "white_on_red",
          "custom_bg_color": null,
          "value": <%= threshold_value('( (avg:bosh.healthmonitor.system.healthy{deployment:,job:brain_z1}.rollup(avg,60)) + (avg:bosh.healthmonitor.system.healthy{deployment:,job:brain_z2}.rollup(avg,60)) ) *50', 'white_on_red') %>,
          "invert": false,
          "custom_fg_color": null
        },
        {
          "comparator": ">=",
          "color": "white_on_green",
          "custom_bg_color": null,
          "value": <%= threshold_value('( (avg:bosh.healthmonitor.system.healthy{deployment:,job:brain_z1}.rollup(avg,60)) + (avg:bosh.healthmonitor.system.healthy{deployment:,job:brain_z2}.rollup(avg,60)) ) *50', 'white_on_green') %>,
          "invert": false,
          "custom_fg_color": null
        }
      ],
      "is_valid_query": false,
      "res_calc_func": "raw",
      "aggr": "avg",
      "y": 111,
      "x": 102
    },
    {
      "metric": "",
      "height": 4,
      "query": "( (avg:bosh.healthmonitor.system.healthy{deployment:<%= deployment %>-diego,job:brain_z1}.rollup(avg,60)) + (avg:bosh.healthmonitor.system.healthy{deployment:<%= deployment %>-diego,job:brain_z2}.rollup(avg,60)) ) *50",
      "text_size": "auto",
      "unit": "%",
      "title_size": 16,
      "title": true,
      "aggregator": "min",
      "title_align": "center",
      "text_align": "center",
      "width": 9,
      "timeframe": "1d",
      "type": "query_value",
      "tags": [

      ],
      "precision": 0,
      "title_text": "Brain - 24h",
      "calc_func": "raw",
      "metric_type": "standard",
      "conditional_formats": [
        {
          "comparator": "<",
          "color": "white_on_yellow",
          "custom_bg_color": null,
          "value": <%= threshold_value('( (avg:bosh.healthmonitor.system.healthy{deployment:,job:brain_z1}.rollup(avg,60)) + (avg:bosh.healthmonitor.system.healthy{deployment:,job:brain_z2}.rollup(avg,60)) ) *50', 'white_on_yellow') %>,
          "invert": false,
          "custom_fg_color": null
        },
        {
          "comparator": ">=",
          "color": "white_on_green",
          "custom_bg_color": null,
          "value": <%= threshold_value('( (avg:bosh.healthmonitor.system.healthy{deployment:,job:brain_z1}.rollup(avg,60)) + (avg:bosh.healthmonitor.system.healthy{deployment:,job:brain_z2}.rollup(avg,60)) ) *50', 'white_on_green') %>,
          "invert": false,
          "custom_fg_color": null
        }
      ],
      "is_valid_query": false,
      "res_calc_func": "raw",
      "aggr": "avg",
      "y": 111,
      "x": 116
    },
    {
      "metric": "",
      "height": 4,
      "query": "( (avg:bosh.healthmonitor.system.healthy{deployment:<%= deployment %>-diego,job:access_z1}.rollup(avg,60)) + (avg:bosh.healthmonitor.system.healthy{deployment:<%= deployment %>-diego,job:access_z2}.rollup(avg,60)) ) *50",
      "text_size": "auto",
      "unit": "%",
      "title_size": 16,
      "title": true,
      "aggregator": "min",
      "title_align": "center",
      "text_align": "center",
      "width": 9,
      "timeframe": "1d",
      "type": "query_value",
      "tags": [

      ],
      "precision": 0,
      "title_text": "Access - 24h",
      "calc_func": "raw",
      "metric_type": "standard",
      "conditional_formats": [
        {
          "comparator": "<",
          "color": "white_on_yellow",
          "custom_bg_color": null,
          "value": <%= threshold_value('( (avg:bosh.healthmonitor.system.healthy{deployment:,job:access_z1}.rollup(avg,60)) + (avg:bosh.healthmonitor.system.healthy{deployment:,job:access_z2}.rollup(avg,60)) ) *50', 'white_on_yellow') %>,
          "invert": false,
          "custom_fg_color": null
        },
        {
          "comparator": ">=",
          "color": "white_on_green",
          "custom_bg_color": null,
          "value": <%= threshold_value('( (avg:bosh.healthmonitor.system.healthy{deployment:,job:access_z1}.rollup(avg,60)) + (avg:bosh.healthmonitor.system.healthy{deployment:,job:access_z2}.rollup(avg,60)) ) *50', 'white_on_green') %>,
          "invert": false,
          "custom_fg_color": null
        }
      ],
      "is_valid_query": false,
      "res_calc_func": "raw",
      "aggr": "avg",
      "y": 105,
      "x": 116
    },
    {
      "title_size": 16,
      "title": true,
      "color": "#4d4d4d",
      "text": "Diego Health",
      "title_align": "left",
      "text_align": "left",
      "title_text": "",
      "height": 6,
      "width": 24,
      "y": 99,
      "x": 102,
      "font_size": "auto",
      "type": "free_text"
    },
    {
      "metric": "",
      "height": 4,
      "query": "( (avg:bosh.healthmonitor.system.healthy{deployment:<%= deployment %>-diego,job:cc_bridge_z1}.rollup(avg,60)) + (avg:bosh.healthmonitor.system.healthy{deployment:<%= deployment %>-diego,job:cc_bridge_z2}.rollup(avg,60)) ) *50",
      "text_size": "auto",
      "unit": "%",
      "title_size": 16,
      "title": true,
      "aggregator": "min",
      "title_align": "center",
      "text_align": "center",
      "width": 14,
      "timeframe": "5m",
      "type": "query_value",
      "tags": [

      ],
      "precision": 0,
      "title_text": "CC Bridge - 5m",
      "calc_func": "raw",
      "metric_type": "standard",
      "conditional_formats": [
        {
          "comparator": "<",
          "color": "white_on_red",
          "custom_bg_color": null,
          "value": <%= threshold_value('( (avg:bosh.healthmonitor.system.healthy{deployment:,job:cc_bridge_z1}.rollup(avg,60)) + (avg:bosh.healthmonitor.system.healthy{deployment:,job:cc_bridge_z2}.rollup(avg,60)) ) *50', 'white_on_red') %>,
          "invert": false,
          "custom_fg_color": null
        },
        {
          "comparator": ">=",
          "color": "white_on_green",
          "custom_bg_color": null,
          "value": <%= threshold_value('( (avg:bosh.healthmonitor.system.healthy{deployment:,job:cc_bridge_z1}.rollup(avg,60)) + (avg:bosh.healthmonitor.system.healthy{deployment:,job:cc_bridge_z2}.rollup(avg,60)) ) *50', 'white_on_green') %>,
          "invert": false,
          "custom_fg_color": null
        }
      ],
      "is_valid_query": false,
      "res_calc_func": "raw",
      "aggr": "avg",
      "y": 117,
      "x": 102
    },
    {
      "metric": "",
      "height": 4,
      "query": "( (avg:bosh.healthmonitor.system.healthy{deployment:<%= deployment %>-diego,job:cell_z1}.rollup(avg,60)) + (avg:bosh.healthmonitor.system.healthy{deployment:<%= deployment %>-diego,job:cell_z2}.rollup(avg,60)) ) *50",
      "text_size": "auto",
      "unit": "%",
      "title_size": 16,
      "title": true,
      "aggregator": "min",
      "title_align": "center",
      "text_align": "center",
      "width": 14,
      "timeframe": "5m",
      "type": "query_value",
      "tags": [

      ],
      "precision": 0,
      "title_text": "Cell - 5m",
      "calc_func": "raw",
      "metric_type": "standard",
      "conditional_formats": [
        {
          "comparator": "<",
          "color": "white_on_red",
          "custom_bg_color": null,
          "value": <%= threshold_value('( (avg:bosh.healthmonitor.system.healthy{deployment:,job:cell_z1}.rollup(avg,60)) + (avg:bosh.healthmonitor.system.healthy{deployment:,job:cell_z2}.rollup(avg,60)) ) *50', 'white_on_red') %>,
          "invert": false,
          "custom_fg_color": null
        },
        {
          "comparator": ">=",
          "color": "white_on_green",
          "custom_bg_color": null,
          "value": <%= threshold_value('( (avg:bosh.healthmonitor.system.healthy{deployment:,job:cell_z1}.rollup(avg,60)) + (avg:bosh.healthmonitor.system.healthy{deployment:,job:cell_z2}.rollup(avg,60)) ) *50', 'white_on_green') %>,
          "invert": false,
          "custom_fg_color": null
        }
      ],
      "is_valid_query": false,
      "res_calc_func": "raw",
      "aggr": "avg",
      "y": 123,
      "x": 102
    },
    {
      "metric": "",
      "height": 4,
      "query": "( (avg:bosh.healthmonitor.system.healthy{deployment:<%= deployment %>-diego,job:cell_z1}.rollup(avg,60)) + (avg:bosh.healthmonitor.system.healthy{deployment:<%= deployment %>-diego,job:cell_z2}.rollup(avg,60)) ) *50",
      "text_size": "auto",
      "unit": "%",
      "title_size": 16,
      "title": true,
      "aggregator": "min",
      "title_align": "center",
      "text_align": "center",
      "width": 9,
      "timeframe": "1d",
      "type": "query_value",
      "tags": [

      ],
      "precision": 0,
      "title_text": "Cell - 24h",
      "calc_func": "raw",
      "metric_type": "standard",
      "conditional_formats": [
        {
          "comparator": "<",
          "color": "white_on_yellow",
          "custom_bg_color": null,
          "value": <%= threshold_value('( (avg:bosh.healthmonitor.system.healthy{deployment:,job:cell_z1}.rollup(avg,60)) + (avg:bosh.healthmonitor.system.healthy{deployment:,job:cell_z2}.rollup(avg,60)) ) *50', 'white_on_yellow') %>,
          "invert": false,
          "custom_fg_color": null
        },
        {
          "comparator": ">=",
          "color": "white_on_green",
          "custom_bg_color": null,
          "value": <%= threshold_value('( (avg:bosh.healthmonitor.system.healthy{deployment:,job:cell_z1}.rollup(avg,60)) + (avg:bosh.healthmonitor.system.healthy{deployment:,job:cell_z2}.rollup(avg,60)) ) *50', 'white_on_green') %>,
          "invert": false,
          "custom_fg_color": null
        }
      ],
      "is_valid_query": false,
      "res_calc_func": "raw",
      "aggr": "avg",
      "y": 123,
      "x": 116
    },
    {
      "metric": "",
      "height": 4,
      "query": "( (avg:bosh.healthmonitor.system.healthy{deployment:<%= deployment %>-diego,job:cc_bridge_z1}.rollup(avg,60)) + (avg:bosh.healthmonitor.system.healthy{deployment:<%= deployment %>-diego,job:cc_bridge_z2}.rollup(avg,60)) ) *50",
      "text_size": "auto",
      "unit": "%",
      "title_size": 16,
      "title": true,
      "aggregator": "min",
      "title_align": "center",
      "text_align": "center",
      "width": 9,
      "timeframe": "1d",
      "type": "query_value",
      "tags": [

      ],
      "precision": 0,
      "title_text": "CC bridge - 24h",
      "calc_func": "raw",
      "metric_type": "standard",
      "conditional_formats": [
        {
          "comparator": "<",
          "color": "white_on_yellow",
          "custom_bg_color": null,
          "value": <%= threshold_value('( (avg:bosh.healthmonitor.system.healthy{deployment:,job:cc_bridge_z1}.rollup(avg,60)) + (avg:bosh.healthmonitor.system.healthy{deployment:,job:cc_bridge_z2}.rollup(avg,60)) ) *50', 'white_on_yellow') %>,
          "invert": false,
          "custom_fg_color": null
        },
        {
          "comparator": ">=",
          "color": "white_on_green",
          "custom_bg_color": null,
          "value": <%= threshold_value('( (avg:bosh.healthmonitor.system.healthy{deployment:,job:cc_bridge_z1}.rollup(avg,60)) + (avg:bosh.healthmonitor.system.healthy{deployment:,job:cc_bridge_z2}.rollup(avg,60)) ) *50', 'white_on_green') %>,
          "invert": false,
          "custom_fg_color": null
        }
      ],
      "is_valid_query": false,
      "res_calc_func": "raw",
      "aggr": "avg",
      "y": 117,
      "x": 116
    },
    {
      "metric": "",
      "height": 4,
      "query": "(( (avg:bosh.healthmonitor.system.healthy{deployment:<%= deployment %>-diego,job:database_z1}.rollup(avg,60)) + (avg:bosh.healthmonitor.system.healthy{deployment:<%= deployment %>-diego,job:database_z2}.rollup(avg,60)) + + (avg:bosh.healthmonitor.system.healthy{deployment:<%= deployment %>-diego,job:database_z3}.rollup(avg,60)) ) * 100 )/3",
      "text_size": "auto",
      "unit": "%",
      "title_size": 16,
      "title": true,
      "aggregator": "min",
      "title_align": "center",
      "text_align": "center",
      "width": 14,
      "timeframe": "5m",
      "type": "query_value",
      "tags": [

      ],
      "precision": 0,
      "title_text": "Database - 5m",
      "calc_func": "raw",
      "metric_type": "standard",
      "conditional_formats": [
        {
          "comparator": "<",
          "color": "white_on_red",
          "custom_bg_color": null,
          "value": <%= threshold_value('(( (avg:bosh.healthmonitor.system.healthy{deployment:,job:database_z1}.rollup(avg,60)) + (avg:bosh.healthmonitor.system.healthy{deployment:,job:database_z2}.rollup(avg,60)) + + (avg:bosh.healthmonitor.system.healthy{deployment:,job:database_z3}.rollup(avg,60)) ) * 100 )/3', 'white_on_red') %>,
          "invert": false,
          "custom_fg_color": null
        },
        {
          "comparator": ">=",
          "color": "white_on_green",
          "custom_bg_color": null,
          "value": <%= threshold_value('(( (avg:bosh.healthmonitor.system.healthy{deployment:,job:database_z1}.rollup(avg,60)) + (avg:bosh.healthmonitor.system.healthy{deployment:,job:database_z2}.rollup(avg,60)) + + (avg:bosh.healthmonitor.system.healthy{deployment:,job:database_z3}.rollup(avg,60)) ) * 100 )/3', 'white_on_green') %>,
          "invert": false,
          "custom_fg_color": null
        }
      ],
      "is_valid_query": false,
      "res_calc_func": "raw",
      "aggr": "avg",
      "y": 129,
      "x": 102
    },
    {
      "metric": "",
      "height": 4,
      "query": "( (avg:bosh.healthmonitor.system.healthy{deployment:<%= deployment %>-diego,job:route_emitter_z1}.rollup(avg,60)) + (avg:bosh.healthmonitor.system.healthy{deployment:<%= deployment %>-diego,job:route_emitter_z2}.rollup(avg,60)) ) *50",
      "text_size": "auto",
      "unit": "%",
      "title_size": 16,
      "title": true,
      "aggregator": "min",
      "title_align": "center",
      "text_align": "center",
      "width": 14,
      "timeframe": "5m",
      "type": "query_value",
      "tags": [

      ],
      "precision": 0,
      "title_text": "Route Emitter - 5m",
      "calc_func": "raw",
      "metric_type": "standard",
      "conditional_formats": [
        {
          "comparator": "<",
          "color": "white_on_red",
          "custom_bg_color": null,
          "value": <%= threshold_value('( (avg:bosh.healthmonitor.system.healthy{deployment:,job:route_emitter_z1}.rollup(avg,60)) + (avg:bosh.healthmonitor.system.healthy{deployment:,job:route_emitter_z2}.rollup(avg,60)) ) *50', 'white_on_red') %>,
          "invert": false,
          "custom_fg_color": null
        },
        {
          "comparator": ">=",
          "color": "white_on_green",
          "custom_bg_color": null,
          "value": <%= threshold_value('( (avg:bosh.healthmonitor.system.healthy{deployment:,job:route_emitter_z1}.rollup(avg,60)) + (avg:bosh.healthmonitor.system.healthy{deployment:,job:route_emitter_z2}.rollup(avg,60)) ) *50', 'white_on_green') %>,
          "invert": false,
          "custom_fg_color": null
        }
      ],
      "is_valid_query": false,
      "res_calc_func": "raw",
      "aggr": "avg",
      "y": 135,
      "x": 102
    },
    {
      "metric": "",
      "height": 4,
      "query": "( (avg:bosh.healthmonitor.system.healthy{deployment:<%= deployment %>-diego,job:route_emitter_z1}.rollup(avg,60)) + (avg:bosh.healthmonitor.system.healthy{deployment:<%= deployment %>-diego,job:route_emitter_z2}.rollup(avg,60)) ) *50",
      "text_size": "auto",
      "unit": "%",
      "title_size": 16,
      "title": true,
      "aggregator": "min",
      "title_align": "center",
      "text_align": "center",
      "width": 9,
      "timeframe": "1d",
      "type": "query_value",
      "tags": [

      ],
      "precision": 0,
      "title_text": "Route Emitter - 24h",
      "calc_func": "raw",
      "metric_type": "standard",
      "conditional_formats": [
        {
          "comparator": "<",
          "color": "white_on_yellow",
          "custom_bg_color": null,
          "value": <%= threshold_value('( (avg:bosh.healthmonitor.system.healthy{deployment:,job:route_emitter_z1}.rollup(avg,60)) + (avg:bosh.healthmonitor.system.healthy{deployment:,job:route_emitter_z2}.rollup(avg,60)) ) *50', 'white_on_yellow') %>,
          "invert": false,
          "custom_fg_color": null
        },
        {
          "comparator": ">=",
          "color": "white_on_green",
          "custom_bg_color": null,
          "value": <%= threshold_value('( (avg:bosh.healthmonitor.system.healthy{deployment:,job:route_emitter_z1}.rollup(avg,60)) + (avg:bosh.healthmonitor.system.healthy{deployment:,job:route_emitter_z2}.rollup(avg,60)) ) *50', 'white_on_green') %>,
          "invert": false,
          "custom_fg_color": null
        }
      ],
      "is_valid_query": false,
      "res_calc_func": "raw",
      "aggr": "avg",
      "y": 135,
      "x": 116
    },
    {
      "metric": "",
      "height": 4,
      "query": "(( (avg:bosh.healthmonitor.system.healthy{deployment:<%= deployment %>-diego,job:database_z1}.rollup(avg,60)) + (avg:bosh.healthmonitor.system.healthy{deployment:<%= deployment %>-diego,job:database_z2}.rollup(avg,60)) + + (avg:bosh.healthmonitor.system.healthy{deployment:<%= deployment %>-diego,job:database_z3}.rollup(avg,60)) ) * 100 )/3",
      "text_size": "auto",
      "unit": "%",
      "title_size": 16,
      "title": true,
      "aggregator": "min",
      "title_align": "center",
      "text_align": "center",
      "width": 9,
      "timeframe": "1d",
      "type": "query_value",
      "tags": [

      ],
      "precision": 0,
      "title_text": "Database - 24h",
      "calc_func": "raw",
      "metric_type": "standard",
      "conditional_formats": [
        {
          "comparator": "<",
          "color": "white_on_yellow",
          "custom_bg_color": null,
          "value": <%= threshold_value('(( (avg:bosh.healthmonitor.system.healthy{deployment:,job:database_z1}.rollup(avg,60)) + (avg:bosh.healthmonitor.system.healthy{deployment:,job:database_z2}.rollup(avg,60)) + + (avg:bosh.healthmonitor.system.healthy{deployment:,job:database_z3}.rollup(avg,60)) ) * 100 )/3', 'white_on_yellow') %>,
          "invert": false,
          "custom_fg_color": null
        },
        {
          "comparator": ">=",
          "color": "white_on_green",
          "custom_bg_color": null,
          "value": <%= threshold_value('(( (avg:bosh.healthmonitor.system.healthy{deployment:,job:database_z1}.rollup(avg,60)) + (avg:bosh.healthmonitor.system.healthy{deployment:,job:database_z2}.rollup(avg,60)) + + (avg:bosh.healthmonitor.system.healthy{deployment:,job:database_z3}.rollup(avg,60)) ) * 100 )/3', 'white_on_green') %>,
          "invert": false,
          "custom_fg_color": null
        }
      ],
      "is_valid_query": false,
      "res_calc_func": "raw",
      "aggr": "avg",
      "y": 129,
      "x": 116
    },
    {
      "metric": "cloudops_tools.etcd_leader_health",
      "height": 4,
      "query": "avg:cloudops_tools.etcd_leader_health{deployment:<%= deployment %>}",
      "text_size": "auto",
      "unit": "hrs",
      "title_size": 16,
      "title": true,
      "aggregator": "avg",
      "title_align": "left",
      "text_align": "left",
      "width": 15,
      "timeframe": "5m",
      "type": "query_value",
      "tags": [
        "deployment:<%= deployment %>"
      ],
      "precision": 0,
      "title_text": "ETCD Leader Uptime",
      "calc_func": "raw",
      "metric_type": "standard",
      "conditional_formats": [
        {
          "comparator": ">",
          "color": "white_on_green",
          "custom_bg_color": null,
          "value": <%= threshold_value('avg:cloudops_tools.etcd_leader_health{deployment:}', 'white_on_green') %>,
          "invert": false,
          "custom_fg_color": null
        },
        {
          "comparator": "<=",
          "color": "white_on_yellow",
          "custom_bg_color": null,
          "value": <%= threshold_value('avg:cloudops_tools.etcd_leader_health{deployment:}', 'white_on_yellow') %>,
          "invert": false,
          "custom_fg_color": null
        }
      ],
      "is_valid_query": true,
      "res_calc_func": "raw",
      "aggr": "avg",
      "y": 74,
      "x": 24
    },
    {
      "metric": "",
      "height": 4,
      "query": "avg:aws.ec2.network_in{deployment:<%= deployment %>,job:nats_z1}.rollup(avg,1800)\n",
      "text_size": "auto",
      "unit": "B",
      "title_size": 16,
      "title": true,
      "aggregator": "avg",
      "title_align": "left",
      "text_align": "left",
      "width": 13,
      "timeframe": "30m",
      "type": "query_value",
      "tags": [

      ],
      "precision": 0,
      "title_text": "NATS_Z1 Net Bytes in",
      "calc_func": "raw",
      "metric_type": "standard",
      "conditional_formats": [
        {
          "comparator": "<=",
          "color": "white_on_yellow",
          "custom_bg_color": null,
          "value": <%= threshold_value('avg:aws.ec2.network_in{deployment:,job:nats_z1}.rollup(avg,1800)', 'white_on_yellow') %>,
          "invert": false,
          "custom_fg_color": null
        },
        {
          "comparator": ">",
          "color": "white_on_green",
          "custom_bg_color": null,
          "value": <%= threshold_value('avg:aws.ec2.network_in{deployment:,job:nats_z1}.rollup(avg,1800)', 'white_on_green') %>,
          "invert": false,
          "custom_fg_color": null
        }
      ],
      "is_valid_query": false,
      "res_calc_func": "raw",
      "aggr": "avg",
      "y": 39,
      "x": 24
    },
    {
      "metric": "",
      "height": 4,
      "query": "avg:aws.ec2.network_in{deployment:<%= deployment %>,job:nats_z2}.rollup(avg,1800)",
      "text_size": "auto",
      "unit": "B",
      "title_size": 16,
      "title": true,
      "aggregator": "avg",
      "title_align": "left",
      "text_align": "left",
      "width": 13,
      "timeframe": "30m",
      "type": "query_value",
      "tags": [

      ],
      "precision": 0,
      "title_text": "NATS_Z2 Net Bytes In",
      "calc_func": "raw",
      "metric_type": "standard",
      "conditional_formats": [
        {
          "comparator": "<=",
          "color": "white_on_yellow",
          "custom_bg_color": null,
          "value": <%= threshold_value('avg:aws.ec2.network_in{deployment:,job:nats_z2}.rollup(avg,1800)', 'white_on_yellow') %>,
          "invert": false,
          "custom_fg_color": null
        },
        {
          "comparator": ">",
          "color": "white_on_green",
          "custom_bg_color": null,
          "value": <%= threshold_value('avg:aws.ec2.network_in{deployment:,job:nats_z2}.rollup(avg,1800)', 'white_on_green') %>,
          "invert": false,
          "custom_fg_color": null
        }
      ],
      "is_valid_query": false,
      "res_calc_func": "raw",
      "aggr": "avg",
      "y": 39,
      "x": 37
    },
    {
      "title_size": 16,
      "title": true,
      "color": "#4d4d4d",
      "text": "NATS Traffic in Bytes",
      "title_align": "left",
      "text_align": "left",
      "title_text": "",
      "height": 6,
      "width": 24,
      "y": 33,
      "x": 24,
      "font_size": "auto",
      "type": "free_text"
    },
    {
      "metric": "cloudops_tools.p_redis.dedicated_instances_used",
      "height": 6,
      "query": "avg:cloudops_tools.p_redis.dedicated_instances_used{deployment:<%= deployment %>}",
      "text_size": "auto",
      "unit": "of18",
      "title_size": 16,
      "title": true,
      "aggregator": "avg",
      "title_align": "left",
      "text_align": "center",
      "width": 23,
      "timeframe": "1h",
      "type": "query_value",
      "tags": [
        "deployment:<%= deployment %>"
      ],
      "precision": 0,
      "title_text": "Redis used nodes",
      "calc_func": "raw",
      "metric_type": "standard",
      "conditional_formats": [
        {
          "comparator": ">",
          "color": "white_on_red",
          "custom_bg_color": null,
          "value": <%= threshold_value('avg:cloudops_tools.p_redis.dedicated_instances_used{deployment:}', 'white_on_red') %>,
          "invert": false,
          "custom_fg_color": null
        },
        {
          "comparator": ">=",
          "color": "white_on_yellow",
          "custom_bg_color": null,
          "value": <%= threshold_value('avg:cloudops_tools.p_redis.dedicated_instances_used{deployment:}', 'white_on_yellow') %>,
          "invert": false,
          "custom_fg_color": null
        },
        {
          "comparator": "<",
          "color": "white_on_green",
          "custom_bg_color": null,
          "value": <%= threshold_value('avg:cloudops_tools.p_redis.dedicated_instances_used{deployment:}', 'white_on_green') %>,
          "invert": false,
          "custom_fg_color": null
        }
      ],
      "is_valid_query": true,
      "res_calc_func": "raw",
      "aggr": "avg",
      "y": 94,
      "x": 126
    },
    {
      "title_size": 16,
      "title": true,
      "title_align": "left",
      "title_text": "monit uptime in hours",
      "height": 14,
      "tile_def": {
        "viz": "timeseries",
        "requests": [
          {
            "q": "min:cloudops_tools.monit_status_collector.uptime_in_seconds{*} by {job,index,deployment} / 3600",
            "style": {
              "width": "normal",
              "palette": "dog_classic"
            },
            "type": "line"
          }
        ],
        "events": [
          {
            "q": "begin update deployment"
          }
        ],
        "yaxis": {
          "scale": "pow0.25"
        }
      },
      "width": 49,
      "timeframe": "1h",
      "y": 139,
      "x": 151,
      "legend_size": "0",
      "type": "timeseries",
      "legend": false
    },
    {
      "title_size": 16,
      "title": true,
      "color": "#4d4d4d",
      "text": "Monit Uptime",
      "title_align": "left",
      "text_align": "left",
      "title_text": "",
      "height": 5,
      "width": 49,
      "y": 133,
      "x": 151,
      "font_size": "auto",
      "type": "free_text"
    },
    {
      "title_size": 16,
      "title": true,
      "color": "#4d4d4d",
      "text": "<%= deployment %> VM health",
      "title_align": "left",
      "text_align": "left",
      "title_text": "",
      "height": 6,
      "width": 28,
      "y": 85,
      "x": 47,
      "font_size": "auto",
      "type": "free_text"
    },
    {
      "metric": "rabbitmq.smoke.status",
      "height": 6,
      "query": "avg:rabbitmq.smoke.status{*}",
      "text_size": "auto",
      "unit": "auto",
      "title_size": 16,
      "title": true,
      "aggregator": "avg",
      "title_align": "left",
      "text_align": "left",
      "width": 15,
      "timeframe": "30m",
      "type": "query_value",
      "tags": [

      ],
      "precision": 2,
      "title_text": "RabbitMQ Service smoke test",
      "calc_func": "raw",
      "metric_type": "standard",
      "conditional_formats": [
        {
          "comparator": ">=",
          "color": "white_on_green",
          "custom_bg_color": null,
          "value": <%= threshold_value('avg:rabbitmq.smoke.status{*}', 'white_on_green') %>,
          "invert": false,
          "custom_fg_color": null
        },
        {
          "comparator": "<",
          "color": "white_on_red",
          "custom_bg_color": null,
          "value": <%= threshold_value('avg:rabbitmq.smoke.status{*}', 'white_on_red') %>,
          "invert": false,
          "custom_fg_color": null
        },
        {
          "comparator": ">=",
          "color": "white_on_yellow",
          "custom_bg_color": null,
          "value": <%= threshold_value('avg:rabbitmq.smoke.status{*}', 'white_on_yellow') %>,
          "invert": false,
          "custom_fg_color": null
        }
      ],
      "is_valid_query": true,
      "res_calc_func": "raw",
      "aggr": "avg",
      "y": 125,
      "x": 15
    },
    {
      "title_size": 16,
      "title": true,
      "color": "#4d4d4d",
      "text": "Redis",
      "title_align": "left",
      "text_align": "left",
      "title_text": "",
      "height": 3,
      "width": 23,
      "y": 87,
      "x": 126,
      "font_size": "36",
      "type": "free_text"
    },
    {
      "title_size": 16,
      "title": true,
      "color": "#4d4d4d",
      "text": "Used",
      "title_align": "left",
      "text_align": "left",
      "title_text": "",
      "height": 3,
      "width": 12,
      "y": 90,
      "x": 126,
      "font_size": "24",
      "type": "free_text"
    },
    {
      "title_size": 16,
      "title": true,
      "title_align": "left",
      "title_text": "CPU Utilization (%) - 1h",
      "height": 12,
      "tile_def": {
        "viz": "heatmap",
        "requests": [
          {
            "q": "max:bosh.healthmonitor.system.cpu.user{deployment:<%= deployment %>-diego} by {job,index}",
            "style": {
              "palette": "warm"
            },
            "type": "line"
          }
        ]
      },
      "width": 28,
      "timeframe": "1h",
      "y": 91,
      "x": 74,
      "legend_size": "0",
      "type": "timeseries",
      "legend": false
    },
    {
      "metric": "bosh.healthmonitor.system.disk.ephemeral.percent",
      "height": 7,
      "query": "max:bosh.healthmonitor.system.disk.ephemeral.percent{deployment:<%= deployment %>-diego}",
      "text_size": "auto",
      "unit": "%",
      "title_size": 16,
      "title": true,
      "aggregator": "max",
      "title_align": "left",
      "text_align": "center",
      "width": 14,
      "timeframe": "1h",
      "type": "query_value",
      "tags": [
        "deployment:<%= deployment %>-diego"
      ],
      "precision": 0,
      "title_text": "Top Ephemeral Disk usage (%) past hour",
      "calc_func": "raw",
      "metric_type": "standard",
      "conditional_formats": [
        {
          "comparator": ">",
          "color": "white_on_red",
          "custom_bg_color": null,
          "value": <%= threshold_value('max:bosh.healthmonitor.system.disk.ephemeral.percent{deployment:}', 'white_on_red') %>,
          "invert": false,
          "custom_fg_color": null
        },
        {
          "comparator": ">=",
          "color": "white_on_yellow",
          "custom_bg_color": null,
          "value": <%= threshold_value('max:bosh.healthmonitor.system.disk.ephemeral.percent{deployment:}', 'white_on_yellow') %>,
          "invert": false,
          "custom_fg_color": null
        },
        {
          "comparator": "<",
          "color": "white_on_green",
          "custom_bg_color": null,
          "value": <%= threshold_value('max:bosh.healthmonitor.system.disk.ephemeral.percent{deployment:}', 'white_on_green') %>,
          "invert": false,
          "custom_fg_color": null
        }
      ],
      "is_valid_query": true,
      "res_calc_func": "raw",
      "aggr": "max",
      "y": 105,
      "x": 74
    },
    {
      "metric": "bosh.healthmonitor.system.disk.persistent.percent",
      "height": 7,
      "query": "max:bosh.healthmonitor.system.disk.persistent.percent{deployment:<%= deployment %>-diego}",
      "text_size": "auto",
      "unit": "%",
      "title_size": 16,
      "title": true,
      "aggregator": "max",
      "title_align": "left",
      "text_align": "center",
      "width": 13,
      "timeframe": "1h",
      "type": "query_value",
      "tags": [
        "deployment:<%= deployment %>-diego"
      ],
      "precision": 0,
      "title_text": "Top Persistent Disk usage (%) past hour",
      "calc_func": "raw",
      "metric_type": "standard",
      "conditional_formats": [
        {
          "comparator": ">",
          "color": "white_on_red",
          "custom_bg_color": null,
          "value": <%= threshold_value('max:bosh.healthmonitor.system.disk.persistent.percent{deployment:}', 'white_on_red') %>,
          "invert": false,
          "custom_fg_color": null
        },
        {
          "comparator": ">=",
          "color": "white_on_yellow",
          "custom_bg_color": null,
          "value": <%= threshold_value('max:bosh.healthmonitor.system.disk.persistent.percent{deployment:}', 'white_on_yellow') %>,
          "invert": false,
          "custom_fg_color": null
        },
        {
          "comparator": "<",
          "color": "white_on_green",
          "custom_bg_color": null,
          "value": <%= threshold_value('max:bosh.healthmonitor.system.disk.persistent.percent{deployment:}', 'white_on_green') %>,
          "invert": false,
          "custom_fg_color": null
        }
      ],
      "is_valid_query": true,
      "res_calc_func": "raw",
      "aggr": "max",
      "y": 105,
      "x": 88
    },
    {
      "title_size": 16,
      "title": true,
      "title_align": "left",
      "title_text": "Ephemeral Disk usage (%) - 1h",
      "height": 12,
      "tile_def": {
        "viz": "heatmap",
        "requests": [
          {
            "q": "max:bosh.healthmonitor.system.disk.ephemeral.percent{deployment:<%= deployment %>-diego} by {job,index}",
            "type": "line"
          }
        ]
      },
      "width": 28,
      "timeframe": "1h",
      "y": 114,
      "x": 74,
      "legend_size": "0",
      "type": "timeseries",
      "legend": false
    },
    {
      "title_size": 16,
      "title": true,
      "title_align": "left",
      "title_text": "Persistent Disk usage (%) - 1h",
      "height": 12.000000158945717,
      "tile_def": {
        "viz": "heatmap",
        "requests": [
          {
            "q": "max:bosh.healthmonitor.system.disk.persistent.percent{deployment:<%= deployment %>-diego} by {job,index}",
            "type": "line"
          }
        ]
      },
      "width": 28,
      "timeframe": "1h",
      "y": 128,
      "x": 74,
      "legend_size": "0",
      "type": "timeseries",
      "legend": false
    },
    {
      "title_size": 16,
      "title": true,
      "color": "#4d4d4d",
      "text": "Diego VM health",
      "title_align": "left",
      "text_align": "left",
      "title_text": "",
      "height": 6,
      "width": 28,
      "y": 85,
      "x": 74,
      "font_size": "auto",
      "type": "free_text"
    },
    {
      "metric": "",
      "height": 9,
      "query": "avg:datadog.nozzle.bbs.LRPsRunning{deployment:<%= deployment %>-diego}.rollup(avg,1800) - hour_before(datadog.nozzle.bbs.LRPsRunning{deployment:<%= deployment %>-diego}.rollup(avg,1800))",
      "text_size": "auto",
      "unit": "",
      "title_size": 16,
      "title": true,
      "aggregator": "avg",
      "title_align": "center",
      "text_align": "center",
      "width": 22,
      "timeframe": "30m",
      "type": "query_value",
      "tags": [

      ],
      "precision": 0,
      "title_text": "Diego Running Instances Delta (hour)",
      "calc_func": "raw",
      "metric_type": "standard",
      "conditional_formats": [
        {
          "comparator": ">=",
          "color": "white_on_yellow",
          "custom_bg_color": null,
          "value": <%= threshold_value('avg:datadog.nozzle.bbs.LRPsRunning{deployment:}.rollup(avg,1800) - hour_before(datadog.nozzle.bbs.LRPsRunning{deployment:}.rollup(avg,1800))', 'white_on_yellow') %>,
          "invert": false,
          "custom_fg_color": null
        },
        {
          "comparator": ">",
          "color": "white_on_green",
          "custom_bg_color": null,
          "value": <%= threshold_value('avg:datadog.nozzle.bbs.LRPsRunning{deployment:}.rollup(avg,1800) - hour_before(datadog.nozzle.bbs.LRPsRunning{deployment:}.rollup(avg,1800))', 'white_on_green') %>,
          "invert": false,
          "custom_fg_color": null
        },
        {
          "comparator": "<",
          "color": "white_on_red",
          "custom_bg_color": null,
          "value": <%= threshold_value('avg:datadog.nozzle.bbs.LRPsRunning{deployment:}.rollup(avg,1800) - hour_before(datadog.nozzle.bbs.LRPsRunning{deployment:}.rollup(avg,1800))', 'white_on_red') %>,
          "invert": false,
          "custom_fg_color": null
        }
      ],
      "is_valid_query": false,
      "res_calc_func": "raw",
      "aggr": "avg",
      "y": 34,
      "x": 152
    },
    {
      "metric": "",
      "height": 12,
      "query": "avg:datadog.nozzle.bbs.LRPsDesired{deployment:<%= deployment %>-diego}.rollup(avg,1800) - hour_before(datadog.nozzle.bbs.LRPsDesired{deployment:<%= deployment %>-diego}.rollup(avg,1800))",
      "text_size": "auto",
      "unit": "",
      "title_size": 16,
      "title": true,
      "aggregator": "avg",
      "title_align": "center",
      "text_align": "center",
      "width": 22,
      "timeframe": "30m",
      "type": "query_value",
      "tags": [

      ],
      "precision": 0,
      "title_text": "Diego Applications Delta (hour)",
      "calc_func": "raw",
      "metric_type": "standard",
      "conditional_formats": [
        {
          "comparator": ">=",
          "color": "white_on_yellow",
          "custom_bg_color": null,
          "value": <%= threshold_value('avg:datadog.nozzle.bbs.LRPsDesired{deployment:}.rollup(avg,1800) - hour_before(datadog.nozzle.bbs.LRPsDesired{deployment:}.rollup(avg,1800))', 'white_on_yellow') %>,
          "invert": false,
          "custom_fg_color": null
        },
        {
          "comparator": ">",
          "color": "white_on_green",
          "custom_bg_color": null,
          "value": <%= threshold_value('avg:datadog.nozzle.bbs.LRPsDesired{deployment:}.rollup(avg,1800) - hour_before(datadog.nozzle.bbs.LRPsDesired{deployment:}.rollup(avg,1800))', 'white_on_green') %>,
          "invert": false,
          "custom_fg_color": null
        },
        {
          "comparator": "<",
          "color": "white_on_red",
          "custom_bg_color": null,
          "value": <%= threshold_value('avg:datadog.nozzle.bbs.LRPsDesired{deployment:}.rollup(avg,1800) - hour_before(datadog.nozzle.bbs.LRPsDesired{deployment:}.rollup(avg,1800))', 'white_on_red') %>,
          "invert": false,
          "custom_fg_color": null
        }
      ],
      "is_valid_query": false,
      "res_calc_func": "raw",
      "aggr": "avg",
      "y": 45,
      "x": 152
    },
    {
      "metric": "",
      "height": 7,
      "query": "max:datadog.nozzle.bbs.RequestLatency{deployment:<%= deployment %>-diego} / 1000000000",
      "text_size": "auto",
      "unit": "auto",
      "title_size": 16,
      "title": true,
      "aggregator": "avg",
      "title_align": "left",
      "text_align": "center",
      "width": 16,
      "timeframe": "15m",
      "type": "query_value",
      "tags": [

      ],
      "precision": 2,
      "title_text": "BBS Request Latency",
      "calc_func": "raw",
      "metric_type": "standard",
      "conditional_formats": [
        {
          "comparator": ">",
          "color": "white_on_red",
          "custom_bg_color": null,
          "value": <%= threshold_value('max:datadog.nozzle.bbs.RequestLatency{deployment:} / 1000000000', 'white_on_red') %>,
          "invert": false,
          "custom_fg_color": null
        },
        {
          "comparator": ">=",
          "color": "white_on_yellow",
          "custom_bg_color": null,
          "value": <%= threshold_value('max:datadog.nozzle.bbs.RequestLatency{deployment:} / 1000000000', 'white_on_yellow') %>,
          "invert": false,
          "custom_fg_color": null
        },
        {
          "comparator": "<",
          "color": "white_on_green",
          "custom_bg_color": null,
          "value": <%= threshold_value('max:datadog.nozzle.bbs.RequestLatency{deployment:} / 1000000000', 'white_on_green') %>,
          "invert": false,
          "custom_fg_color": null
        }
      ],
      "is_valid_query": false,
      "res_calc_func": "raw",
      "aggr": "avg",
      "y": 73,
      "x": 49
    },
    {
      "metric": "datadog.nozzle.bbs.ETCDWatchers",
      "height": 7,
      "query": "avg:datadog.nozzle.bbs.ETCDWatchers{deployment:<%= deployment %>-diego}",
      "text_size": "auto",
      "unit": "auto",
      "title_size": 16,
      "title": true,
      "aggregator": "avg",
      "title_align": "left",
      "text_align": "center",
      "width": 11,
      "timeframe": "15m",
      "type": "query_value",
      "tags": [
        "deployment:<%= deployment %>-diego"
      ],
      "precision": 2,
      "title_text": "ETCD Watchers",
      "calc_func": "raw",
      "metric_type": "standard",
      "conditional_formats": [
        {
          "comparator": ">",
          "color": "white_on_red",
          "custom_bg_color": null,
          "value": <%= threshold_value('avg:datadog.nozzle.bbs.ETCDWatchers{deployment:}', 'white_on_red') %>,
          "invert": false,
          "custom_fg_color": null
        },
        {
          "comparator": ">=",
          "color": "white_on_yellow",
          "custom_bg_color": null,
          "value": <%= threshold_value('avg:datadog.nozzle.bbs.ETCDWatchers{deployment:}', 'white_on_yellow') %>,
          "invert": false,
          "custom_fg_color": null
        },
        {
          "comparator": ">=",
          "color": "white_on_green",
          "custom_bg_color": null,
          "value": <%= threshold_value('avg:datadog.nozzle.bbs.ETCDWatchers{deployment:}', 'white_on_green') %>,
          "invert": false,
          "custom_fg_color": null
        }
      ],
      "is_valid_query": true,
      "res_calc_func": "raw",
      "aggr": "avg",
      "y": 73,
      "x": 65
    },
    {
      "metric": "",
      "height": 7,
      "query": "((avg:bosh.healthmonitor.system.cpu.sys{deployment:<%= deployment %>-diego, job: database_z1}+avg:bosh.healthmonitor.system.cpu.user{deployment:<%= deployment %>-diego, job: database_z1}+avg:bosh.healthmonitor.system.cpu.sys{deployment:<%= deployment %>-diego, job: database_z2}+avg:bosh.healthmonitor.system.cpu.user{deployment:<%= deployment %>-diego, job: database_z2}+avg:bosh.healthmonitor.system.cpu.sys{deployment:<%= deployment %>-diego, job: database_z3}+avg:bosh.healthmonitor.system.cpu.user{deployment:<%= deployment %>-diego, job: database_z3})/3)",
      "text_size": "auto",
      "unit": "%",
      "title_size": 16,
      "title": true,
      "aggregator": "avg",
      "title_align": "left",
      "text_align": "center",
      "width": 14,
      "timeframe": "10m",
      "type": "query_value",
      "tags": [

      ],
      "precision": 2,
      "title_text": "Database CPU",
      "calc_func": "raw",
      "metric_type": "standard",
      "conditional_formats": [
        {
          "comparator": ">=",
          "color": "white_on_red",
          "custom_bg_color": null,
          "value": <%= threshold_value('((avg:bosh.healthmonitor.system.cpu.sys{deployment:, job: database_z1}+avg:bosh.healthmonitor.system.cpu.user{deployment:, job: database_z1}+avg:bosh.healthmonitor.system.cpu.sys{deployment:, job: database_z2}+avg:bosh.healthmonitor.system.cpu.user{deployment:, job: database_z2}+avg:bosh.healthmonitor.system.cpu.sys{deployment:, job: database_z3}+avg:bosh.healthmonitor.system.cpu.user{deployment:, job: database_z3})/3)', 'white_on_red') %>,
          "invert": false,
          "custom_fg_color": null
        },
        {
          "comparator": ">=",
          "color": "white_on_yellow",
          "custom_bg_color": null,
          "value": <%= threshold_value('((avg:bosh.healthmonitor.system.cpu.sys{deployment:, job: database_z1}+avg:bosh.healthmonitor.system.cpu.user{deployment:, job: database_z1}+avg:bosh.healthmonitor.system.cpu.sys{deployment:, job: database_z2}+avg:bosh.healthmonitor.system.cpu.user{deployment:, job: database_z2}+avg:bosh.healthmonitor.system.cpu.sys{deployment:, job: database_z3}+avg:bosh.healthmonitor.system.cpu.user{deployment:, job: database_z3})/3)', 'white_on_yellow') %>,
          "invert": false,
          "custom_fg_color": null
        },
        {
          "comparator": "<",
          "color": "white_on_green",
          "custom_bg_color": null,
          "value": <%= threshold_value('((avg:bosh.healthmonitor.system.cpu.sys{deployment:, job: database_z1}+avg:bosh.healthmonitor.system.cpu.user{deployment:, job: database_z1}+avg:bosh.healthmonitor.system.cpu.sys{deployment:, job: database_z2}+avg:bosh.healthmonitor.system.cpu.user{deployment:, job: database_z2}+avg:bosh.healthmonitor.system.cpu.sys{deployment:, job: database_z3}+avg:bosh.healthmonitor.system.cpu.user{deployment:, job: database_z3})/3)', 'white_on_green') %>,
          "invert": false,
          "custom_fg_color": null
        }
      ],
      "is_valid_query": false,
      "res_calc_func": "raw",
      "aggr": "avg",
      "y": 73,
      "x": 76
    },
    {
      "title_size": 16,
      "title": true,
      "color": "#4d4d4d",
      "text": "Diego Other Vitals",
      "title_align": "left",
      "text_align": "left",
      "title_text": "",
      "height": 6,
      "width": 41,
      "y": 67,
      "x": 49,
      "font_size": "36",
      "type": "free_text"
    },
    {
      "metric": "",
      "height": 6,
      "query": "max:datadog.nozzle.route_emitter.RouteEmitterSyncDuration{deployment:<%= deployment %>-diego}/1000000000\n",
      "text_size": "auto",
      "unit": "s",
      "title_size": 13,
      "title": true,
      "aggregator": "max",
      "title_align": "center",
      "text_align": "center",
      "width": 21,
      "timeframe": "5m",
      "type": "query_value",
      "tags": [

      ],
      "precision": 2,
      "title_text": "Router Emitter Sync Duration - 5m max",
      "calc_func": "raw",
      "metric_type": "standard",
      "conditional_formats": [
        {
          "comparator": ">",
          "color": "white_on_red",
          "custom_bg_color": null,
          "value": <%= threshold_value('max:datadog.nozzle.route_emitter.RouteEmitterSyncDuration{deployment:}/1000000000', 'white_on_red') %>,
          "invert": false,
          "custom_fg_color": null
        },
        {
          "comparator": ">=",
          "color": "white_on_yellow",
          "custom_bg_color": null,
          "value": <%= threshold_value('max:datadog.nozzle.route_emitter.RouteEmitterSyncDuration{deployment:}/1000000000', 'white_on_yellow') %>,
          "invert": false,
          "custom_fg_color": null
        },
        {
          "comparator": "<",
          "color": "white_on_green",
          "custom_bg_color": null,
          "value": <%= threshold_value('max:datadog.nozzle.route_emitter.RouteEmitterSyncDuration{deployment:}/1000000000', 'white_on_green') %>,
          "invert": false,
          "custom_fg_color": null
        }
      ],
      "is_valid_query": false,
      "res_calc_func": "raw",
      "aggr": "avg",
      "y": 40,
      "x": 122
    },
    {
      "metric": "",
      "height": 6,
      "query": "max:datadog.nozzle.bbs.ConvergenceLRPDuration{deployment:<%= deployment %>-diego}/1000000000\n",
      "text_size": "auto",
      "unit": "s",
      "title_size": 13,
      "title": true,
      "aggregator": "max",
      "title_align": "center",
      "text_align": "center",
      "width": 21,
      "timeframe": "5m",
      "type": "query_value",
      "tags": [

      ],
      "precision": 2,
      "title_text": "Convergence LRP Duration - 5m max",
      "calc_func": "raw",
      "metric_type": "standard",
      "conditional_formats": [
        {
          "comparator": ">",
          "color": "white_on_red",
          "custom_bg_color": null,
          "value": <%= threshold_value('max:datadog.nozzle.bbs.ConvergenceLRPDuration{deployment:}/1000000000', 'white_on_red') %>,
          "invert": false,
          "custom_fg_color": null
        },
        {
          "comparator": ">=",
          "color": "white_on_yellow",
          "custom_bg_color": null,
          "value": <%= threshold_value('max:datadog.nozzle.bbs.ConvergenceLRPDuration{deployment:}/1000000000', 'white_on_yellow') %>,
          "invert": false,
          "custom_fg_color": null
        },
        {
          "comparator": "<",
          "color": "white_on_green",
          "custom_bg_color": null,
          "value": <%= threshold_value('max:datadog.nozzle.bbs.ConvergenceLRPDuration{deployment:}/1000000000', 'white_on_green') %>,
          "invert": false,
          "custom_fg_color": null
        }
      ],
      "is_valid_query": false,
      "res_calc_func": "raw",
      "aggr": "avg",
      "y": 48,
      "x": 122
    },
    {
      "metric": "",
      "height": 6,
      "query": "max:datadog.nozzle.rep.RepBulkSyncDuration{deployment:<%= deployment %>-diego}/1000000000\n",
      "text_size": "auto",
      "unit": "s",
      "title_size": 13,
      "title": true,
      "aggregator": "max",
      "title_align": "center",
      "text_align": "center",
      "width": 21,
      "timeframe": "5m",
      "type": "query_value",
      "tags": [

      ],
      "precision": 2,
      "title_text": "Rep Bulk Sync Duration - 5m max",
      "calc_func": "raw",
      "metric_type": "standard",
      "conditional_formats": [
        {
          "comparator": ">",
          "color": "white_on_red",
          "custom_bg_color": null,
          "value": <%= threshold_value('max:datadog.nozzle.rep.RepBulkSyncDuration{deployment:}/1000000000', 'white_on_red') %>,
          "invert": false,
          "custom_fg_color": null
        },
        {
          "comparator": ">=",
          "color": "white_on_yellow",
          "custom_bg_color": null,
          "value": <%= threshold_value('max:datadog.nozzle.rep.RepBulkSyncDuration{deployment:}/1000000000', 'white_on_yellow') %>,
          "invert": false,
          "custom_fg_color": null
        },
        {
          "comparator": "<",
          "color": "white_on_green",
          "custom_bg_color": null,
          "value": <%= threshold_value('max:datadog.nozzle.rep.RepBulkSyncDuration{deployment:}/1000000000', 'white_on_green') %>,
          "invert": false,
          "custom_fg_color": null
        }
      ],
      "is_valid_query": false,
      "res_calc_func": "raw",
      "aggr": "avg",
      "y": 48,
      "x": 101
    },
    {
      "title_size": 16,
      "title": true,
      "title_align": "left",
      "title_text": "Diego App Instances - 2d",
      "height": 12,
      "tile_def": {
        "viz": "timeseries",
        "requests": [
          {
            "q": "avg:datadog.nozzle.bbs.LRPsRunning{deployment:<%= deployment %>-diego}",
            "type": "line"
          }
        ]
      },
      "width": 28,
      "timeframe": "2d",
      "y": 45,
      "x": 174,
      "legend_size": "0",
      "type": "timeseries",
      "legend": false
    },
    {
      "title_size": 16,
      "title": true,
      "title_align": "left",
      "title_text": "",
      "height": 13,
      "tile_def": {
        "viz": "timeseries",
        "requests": [
          {
            "q": "avg:aws.ec2.network_in{deployment:<%= deployment %>,job:nats_z1} by {index,job}",
            "type": "line"
          },
          {
            "q": "avg:aws.ec2.network_in{deployment:<%= deployment %>,job:nats_z2} by {index,job}",
            "type": "line"
          }
        ]
      },
      "width": 28,
      "timeframe": "1h",
      "y": 45,
      "x": 23,
      "legend_size": "0",
      "type": "timeseries",
      "legend": false
    },
    {
      "metric": "",
      "height": 5,
      "query": "(max:bosh.healthmonitor.system.cpu.user{deployment:concourse}.rollup(avg,60))",
      "text_size": "auto",
      "unit": "%",
      "title_size": 16,
      "title": true,
      "aggregator": "min",
      "title_align": "center",
      "text_align": "center",
      "width": 19,
      "timeframe": "5m",
      "type": "query_value",
      "tags": [

      ],
      "precision": 0,
      "title_text": "CPU Usage",
      "calc_func": "raw",
      "metric_type": "standard",
      "conditional_formats": [
        {
          "comparator": ">",
          "color": "white_on_red",
          "custom_bg_color": null,
          "value": <%= threshold_value('(max:bosh.healthmonitor.system.cpu.user{deployment:}.rollup(avg,60))', 'white_on_red') %>,
          "invert": false,
          "custom_fg_color": null
        },
        {
          "comparator": ">",
          "color": "white_on_yellow",
          "custom_bg_color": null,
          "value": <%= threshold_value('(max:bosh.healthmonitor.system.cpu.user{deployment:}.rollup(avg,60))', 'white_on_yellow') %>,
          "invert": false,
          "custom_fg_color": null
        },
        {
          "comparator": "<",
          "color": "white_on_green",
          "custom_bg_color": null,
          "value": <%= threshold_value('(max:bosh.healthmonitor.system.cpu.user{deployment:}.rollup(avg,60))', 'white_on_green') %>,
          "invert": false,
          "custom_fg_color": null
        }
      ],
      "is_valid_query": false,
      "res_calc_func": "raw",
      "aggr": "avg",
      "y": 140,
      "x": 0
    },
    {
      "metric": "",
      "height": 5,
      "query": "(max:bosh.healthmonitor.system.cpu.user{deployment:concourse-prod-worker}.rollup(avg,60))",
      "text_size": "auto",
      "unit": "%",
      "title_size": 16,
      "title": true,
      "aggregator": "min",
      "title_align": "center",
      "text_align": "center",
      "width": 19,
      "timeframe": "5m",
      "type": "query_value",
      "tags": [

      ],
      "precision": 0,
      "title_text": "CPU Usage",
      "calc_func": "raw",
      "metric_type": "standard",
      "conditional_formats": [
        {
          "comparator": ">",
          "color": "white_on_red",
          "custom_bg_color": null,
          "value": <%= threshold_value('(max:bosh.healthmonitor.system.cpu.user{deployment:}.rollup(avg,60))', 'white_on_red') %>,
          "invert": false,
          "custom_fg_color": null
        },
        {
          "comparator": ">",
          "color": "white_on_yellow",
          "custom_bg_color": null,
          "value": <%= threshold_value('(max:bosh.healthmonitor.system.cpu.user{deployment:}.rollup(avg,60))', 'white_on_yellow') %>,
          "invert": false,
          "custom_fg_color": null
        },
        {
          "comparator": "<",
          "color": "white_on_green",
          "custom_bg_color": null,
          "value": <%= threshold_value('(max:bosh.healthmonitor.system.cpu.user{deployment:}.rollup(avg,60))', 'white_on_green') %>,
          "invert": false,
          "custom_fg_color": null
        }
      ],
      "is_valid_query": false,
      "res_calc_func": "raw",
      "aggr": "avg",
      "y": 140,
      "x": 20
    },
    {
      "metric": "bosh.healthmonitor.system.disk.ephemeral.percent",
      "height": 5,
      "query": "max:bosh.healthmonitor.system.disk.ephemeral.percent{deployment:concourse}",
      "text_size": "auto",
      "unit": "%",
      "title_size": 16,
      "title": true,
      "aggregator": "max",
      "title_align": "left",
      "text_align": "center",
      "width": 19,
      "timeframe": "1h",
      "type": "query_value",
      "tags": [
        "deployment:concourse"
      ],
      "precision": 0,
      "title_text": "Top Ephemeral Disk usage (%) past hour",
      "calc_func": "raw",
      "metric_type": "standard",
      "conditional_formats": [
        {
          "comparator": ">",
          "color": "white_on_red",
          "custom_bg_color": null,
          "value": <%= threshold_value('max:bosh.healthmonitor.system.disk.ephemeral.percent{deployment:}', 'white_on_red') %>,
          "invert": false,
          "custom_fg_color": null
        },
        {
          "comparator": ">=",
          "color": "white_on_yellow",
          "custom_bg_color": null,
          "value": <%= threshold_value('max:bosh.healthmonitor.system.disk.ephemeral.percent{deployment:}', 'white_on_yellow') %>,
          "invert": false,
          "custom_fg_color": null
        },
        {
          "comparator": "<",
          "color": "white_on_green",
          "custom_bg_color": null,
          "value": <%= threshold_value('max:bosh.healthmonitor.system.disk.ephemeral.percent{deployment:}', 'white_on_green') %>,
          "invert": false,
          "custom_fg_color": null
        }
      ],
      "is_valid_query": true,
      "res_calc_func": "raw",
      "aggr": "max",
      "y": 147,
      "x": 0
    },
    {
      "metric": "bosh.healthmonitor.system.disk.ephemeral.percent",
      "height": 5,
      "query": "max:bosh.healthmonitor.system.disk.ephemeral.percent{deployment:concourse-prod-worker}",
      "text_size": "auto",
      "unit": "%",
      "title_size": 16,
      "title": true,
      "aggregator": "max",
      "title_align": "left",
      "text_align": "center",
      "width": 19,
      "timeframe": "1h",
      "type": "query_value",
      "tags": [
        "deployment:concourse-prod-worker"
      ],
      "precision": 0,
      "title_text": "Top Ephemeral Disk usage (%) past hour",
      "calc_func": "raw",
      "metric_type": "standard",
      "conditional_formats": [
        {
          "comparator": ">",
          "color": "white_on_red",
          "custom_bg_color": null,
          "value": <%= threshold_value('max:bosh.healthmonitor.system.disk.ephemeral.percent{deployment:}', 'white_on_red') %>,
          "invert": false,
          "custom_fg_color": null
        },
        {
          "comparator": ">=",
          "color": "white_on_yellow",
          "custom_bg_color": null,
          "value": <%= threshold_value('max:bosh.healthmonitor.system.disk.ephemeral.percent{deployment:}', 'white_on_yellow') %>,
          "invert": false,
          "custom_fg_color": null
        },
        {
          "comparator": "<",
          "color": "white_on_green",
          "custom_bg_color": null,
          "value": <%= threshold_value('max:bosh.healthmonitor.system.disk.ephemeral.percent{deployment:}', 'white_on_green') %>,
          "invert": false,
          "custom_fg_color": null
        }
      ],
      "is_valid_query": true,
      "res_calc_func": "raw",
      "aggr": "max",
      "y": 147,
      "x": 20
    },
    {
      "title_size": 16,
      "title": true,
      "color": "#4d4d4d",
      "text": "Concourse Vitals",
      "title_align": "left",
      "text_align": "left",
      "title_text": "",
      "height": 6,
      "width": 19,
      "y": 134,
      "x": 0,
      "font_size": "auto",
      "type": "free_text"
    },
    {
      "title_size": 16,
      "title": true,
      "color": "#4d4d4d",
      "text": "Concourse Worker Vitals",
      "title_align": "left",
      "text_align": "left",
      "title_text": "",
      "height": 6,
      "width": 24,
      "y": 134,
      "x": 20,
      "font_size": "auto",
      "type": "free_text"
    },
    {
      "metric": "bosh.healthmonitor.system.disk.persistent.percent",
      "height": 5,
      "query": "max:bosh.healthmonitor.system.disk.persistent.percent{deployment:concourse}",
      "text_size": "auto",
      "unit": "%",
      "title_size": 16,
      "title": true,
      "aggregator": "max",
      "title_align": "left",
      "text_align": "center",
      "width": 19,
      "timeframe": "1h",
      "type": "query_value",
      "tags": [
        "deployment:concourse"
      ],
      "precision": 0,
      "title_text": "Top Persistent Disk usage (%) past hour",
      "calc_func": "raw",
      "metric_type": "standard",
      "conditional_formats": [
        {
          "comparator": ">",
          "color": "white_on_red",
          "custom_bg_color": null,
          "value": <%= threshold_value('max:bosh.healthmonitor.system.disk.persistent.percent{deployment:}', 'white_on_red') %>,
          "invert": false,
          "custom_fg_color": null
        },
        {
          "comparator": ">=",
          "color": "white_on_yellow",
          "custom_bg_color": null,
          "value": <%= threshold_value('max:bosh.healthmonitor.system.disk.persistent.percent{deployment:}', 'white_on_yellow') %>,
          "invert": false,
          "custom_fg_color": null
        },
        {
          "comparator": "<",
          "color": "white_on_green",
          "custom_bg_color": null,
          "value": <%= threshold_value('max:bosh.healthmonitor.system.disk.persistent.percent{deployment:}', 'white_on_green') %>,
          "invert": false,
          "custom_fg_color": null
        }
      ],
      "is_valid_query": true,
      "res_calc_func": "raw",
      "aggr": "max",
      "y": 154,
      "x": 0
    },
    {
      "metric": "diego.smoke.status",
      "height": 6,
      "query": "avg:diego.smoke.status{deployment:<%= deployment %>-diego}",
      "text_size": "auto",
      "unit": "auto",
      "title_size": 16,
      "title": true,
      "aggregator": "avg",
      "title_align": "left",
      "text_align": "left",
      "width": 15,
      "timeframe": "30m",
      "type": "query_value",
      "tags": [
        "deployment:<%= deployment %>-diego"
      ],
      "precision": 2,
      "title_text": "Diego smoke test",
      "calc_func": "raw",
      "metric_type": "standard",
      "conditional_formats": [
        {
          "comparator": ">=",
          "color": "white_on_green",
          "custom_bg_color": null,
          "value": <%= threshold_value('avg:diego.smoke.status{deployment:}', 'white_on_green') %>,
          "invert": false,
          "custom_fg_color": null
        },
        {
          "comparator": "<",
          "color": "white_on_red",
          "custom_bg_color": null,
          "value": <%= threshold_value('avg:diego.smoke.status{deployment:}', 'white_on_red') %>,
          "invert": false,
          "custom_fg_color": null
        },
        {
          "comparator": ">=",
          "color": "white_on_yellow",
          "custom_bg_color": null,
          "value": <%= threshold_value('avg:diego.smoke.status{deployment:}', 'white_on_yellow') %>,
          "invert": false,
          "custom_fg_color": null
        }
      ],
      "is_valid_query": true,
      "res_calc_func": "raw",
      "aggr": "avg",
      "y": 125,
      "x": 0
    }
  ],
  "shared": false,
  "id": 14530,
  "title_edited": false
}